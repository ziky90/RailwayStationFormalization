============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 17045 was started by zikesjan on Jan-MacBook-Pro-5.local,
Sun Jun  1 15:57:54 2014
The command was "/Users/zikesjan/Downloads/LADR-2009-11A/bin/prover9".
============================== end of head ===========================

============================== INPUT =================================
set(prolog_style_variables).

formulas(assumptions).
(all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom).
(all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom).
(all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom).
(all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom).
(all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom).
(all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s3) = out2 & at(X,T,s3) | switch(X,s4) = out2 & at(X,T,s4)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s3) = out1 & at(X,T,s3) | switch(X,s4) = out1 & at(X,T,s4)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = s3 & at(X,T,s1) | switch(X,s2) = s3 & at(X,T,s2)) <-> at(succ(X),T,s3))) # label(s3ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = s4 & at(X,T,s1) | switch(X,s2) = s4 & at(X,T,s2)) <-> at(succ(X),T,s4))) # label(s4ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom).
in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in2 != s3 & in2 != s4 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & in1 != s3 & in1 != s4 & s2 != s1 & s2 != out2 & s2 != out1 & s2 != s3 & s2 != s4 & s1 != out2 & s1 != out1 & s1 != s3 & s1 != s4 & out2 != out1 & out2 != s3 & out2 != s4 & out1 != s3 & out1 != s4 & s3 != s4 # label(nodesExclusivity) # label(axiom).
(all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom).
(all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom).
(all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom).
(all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom).
(all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom).
(all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom).
(all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom).
(all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom).
(all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom).
(all X (configuration(X,path0) <-> switch(X,s3) = out2 & switch(X,s1) = s3)) # label(switchesConfiguration0) # label(axiom).
(all X (configuration(X,path1) <-> switch(X,s3) = out2 & switch(X,s2) = s3)) # label(switchesConfiguration1) # label(axiom).
(all X (configuration(X,path2) <-> switch(X,s4) = out2 & switch(X,s1) = s4)) # label(switchesConfiguration2) # label(axiom).
(all X (configuration(X,path3) <-> switch(X,s4) = out2 & switch(X,s2) = s4)) # label(switchesConfiguration3) # label(axiom).
(all X (configuration(X,path4) <-> switch(X,s3) = out1 & switch(X,s1) = s3)) # label(switchesConfiguration4) # label(axiom).
(all X (configuration(X,path5) <-> switch(X,s3) = out1 & switch(X,s2) = s3)) # label(switchesConfiguration5) # label(axiom).
(all X (configuration(X,path6) <-> switch(X,s4) = out1 & switch(X,s1) = s4)) # label(switchesConfiguration6) # label(axiom).
(all X (configuration(X,path7) <-> switch(X,s4) = out1 & switch(X,s2) = s4)) # label(switchesConfiguration7) # label(axiom).
(all X all T (free(X,path0) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute0) # label(axiom).
(all X all T (free(X,path1) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute1) # label(axiom).
(all X all T (free(X,path2) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute2) # label(axiom).
(all X all T (free(X,path3) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute3) # label(axiom).
(all X all T (free(X,path4) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute4) # label(axiom).
(all X all T (free(X,path5) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute5) # label(axiom).
(all X all T (free(X,path6) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute6) # label(axiom).
(all X all T (free(X,path7) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute7) # label(axiom).
(all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting0) # label(axiom).
(all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting1) # label(axiom).
(all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting2) # label(axiom).
(all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting3) # label(axiom).
(all X (nonconflicting(X,path4) <-> free(X,path4) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting4) # label(axiom).
(all X (nonconflicting(X,path5) <-> free(X,path5) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting5) # label(axiom).
(all X (nonconflicting(X,path6) <-> free(X,path6) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting6) # label(axiom).
(all X (nonconflicting(X,path7) <-> free(X,path7) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting7) # label(axiom).
path0 != path1 & path0 != path2 & path0 != path3 & path0 != path4 & path0 != path5 & path0 != path6 & path0 != path7 & path1 != path2 & path1 != path3 & path1 != path4 & path1 != path5 & path1 != path6 & path1 != path7 & path2 != path3 & path2 != path4 & path2 != path5 & path2 != path6 & path2 != path7 & path3 != path4 & path3 != path5 & path3 != path6 & path3 != path7 & path4 != path5 & path4 != path6 & path4 != path7 & path5 != path6 & path5 != path7 & path6 != path7 # label(routesExclusivity) # label(axiom).
(all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom).
(all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom).
(all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom).
(all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom).
(all X (available(X,path4) <-> nonconflicting(X,path4) & configuration(X,path4))) # label(availableRoute4) # label(axiom).
(all X (available(X,path5) <-> nonconflicting(X,path5) & configuration(X,path5))) # label(availableRoute5) # label(axiom).
(all X (available(X,path6) <-> nonconflicting(X,path6) & configuration(X,path6))) # label(availableRoute6) # label(axiom).
(all X (available(X,path7) <-> nonconflicting(X,path7) & configuration(X,path7))) # label(availableRoute7) # label(axiom).
(all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom).
(all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom).
(all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom).
(all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom).
(all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom).
(all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom).
(all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed2) # label(axiom).
(all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed3) # label(axiom).
(all X (toBeUsed(X,path4) <-> available(X,path4) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed4) # label(axiom).
(all X (toBeUsed(X,path5) <-> available(X,path5) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed5) # label(axiom).
(all X (toBeUsed(X,path6) <-> available(X,path6) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed6) # label(axiom).
(all X (toBeUsed(X,path7) <-> available(X,path7) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed7) # label(axiom).
(all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom).
(all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3) | toBeUsed(X,path5) | toBeUsed(X,path7))) # label(openGatein2) # label(axiom).
(all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2) | toBeUsed(X,path4) | toBeUsed(X,path6))) # label(openGatein1) # label(axiom).
end_of_list.

formulas(goals).
(all T1 all T2 all X (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(no2Trains) # label(conjecture).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom) # label(non_clause).  [assumption].
2 (all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom) # label(non_clause).  [assumption].
3 (all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom) # label(non_clause).  [assumption].
4 (all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom) # label(non_clause).  [assumption].
5 (all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom) # label(non_clause).  [assumption].
6 (all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom) # label(non_clause).  [assumption].
7 (all X all T (train(T) & go(X,T) & (switch(X,s3) = out2 & at(X,T,s3) | switch(X,s4) = out2 & at(X,T,s4)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom) # label(non_clause).  [assumption].
8 (all X all T (train(T) & go(X,T) & (switch(X,s3) = out1 & at(X,T,s3) | switch(X,s4) = out1 & at(X,T,s4)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom) # label(non_clause).  [assumption].
9 (all X all T (train(T) & go(X,T) & (switch(X,s1) = s3 & at(X,T,s1) | switch(X,s2) = s3 & at(X,T,s2)) <-> at(succ(X),T,s3))) # label(s3ax1) # label(axiom) # label(non_clause).  [assumption].
10 (all X all T (train(T) & go(X,T) & (switch(X,s1) = s4 & at(X,T,s1) | switch(X,s2) = s4 & at(X,T,s2)) <-> at(succ(X),T,s4))) # label(s4ax1) # label(axiom) # label(non_clause).  [assumption].
11 (all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom) # label(non_clause).  [assumption].
12 (all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom) # label(non_clause).  [assumption].
13 in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in2 != s3 & in2 != s4 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & in1 != s3 & in1 != s4 & s2 != s1 & s2 != out2 & s2 != out1 & s2 != s3 & s2 != s4 & s1 != out2 & s1 != out1 & s1 != s3 & s1 != s4 & out2 != out1 & out2 != s3 & out2 != s4 & out1 != s3 & out1 != s4 & s3 != s4 # label(nodesExclusivity) # label(axiom) # label(non_clause).  [assumption].
14 (all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom) # label(non_clause).  [assumption].
15 (all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom) # label(non_clause).  [assumption].
16 (all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom) # label(non_clause).  [assumption].
17 (all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom) # label(non_clause).  [assumption].
18 (all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom) # label(non_clause).  [assumption].
19 (all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom) # label(non_clause).  [assumption].
20 (all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom) # label(non_clause).  [assumption].
21 (all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom) # label(non_clause).  [assumption].
22 (all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom) # label(non_clause).  [assumption].
23 (all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom) # label(non_clause).  [assumption].
24 (all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom) # label(non_clause).  [assumption].
25 (all X (configuration(X,path0) <-> switch(X,s3) = out2 & switch(X,s1) = s3)) # label(switchesConfiguration0) # label(axiom) # label(non_clause).  [assumption].
26 (all X (configuration(X,path1) <-> switch(X,s3) = out2 & switch(X,s2) = s3)) # label(switchesConfiguration1) # label(axiom) # label(non_clause).  [assumption].
27 (all X (configuration(X,path2) <-> switch(X,s4) = out2 & switch(X,s1) = s4)) # label(switchesConfiguration2) # label(axiom) # label(non_clause).  [assumption].
28 (all X (configuration(X,path3) <-> switch(X,s4) = out2 & switch(X,s2) = s4)) # label(switchesConfiguration3) # label(axiom) # label(non_clause).  [assumption].
29 (all X (configuration(X,path4) <-> switch(X,s3) = out1 & switch(X,s1) = s3)) # label(switchesConfiguration4) # label(axiom) # label(non_clause).  [assumption].
30 (all X (configuration(X,path5) <-> switch(X,s3) = out1 & switch(X,s2) = s3)) # label(switchesConfiguration5) # label(axiom) # label(non_clause).  [assumption].
31 (all X (configuration(X,path6) <-> switch(X,s4) = out1 & switch(X,s1) = s4)) # label(switchesConfiguration6) # label(axiom) # label(non_clause).  [assumption].
32 (all X (configuration(X,path7) <-> switch(X,s4) = out1 & switch(X,s2) = s4)) # label(switchesConfiguration7) # label(axiom) # label(non_clause).  [assumption].
33 (all X all T (free(X,path0) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute0) # label(axiom) # label(non_clause).  [assumption].
34 (all X all T (free(X,path1) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute1) # label(axiom) # label(non_clause).  [assumption].
35 (all X all T (free(X,path2) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute2) # label(axiom) # label(non_clause).  [assumption].
36 (all X all T (free(X,path3) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute3) # label(axiom) # label(non_clause).  [assumption].
37 (all X all T (free(X,path4) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute4) # label(axiom) # label(non_clause).  [assumption].
38 (all X all T (free(X,path5) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute5) # label(axiom) # label(non_clause).  [assumption].
39 (all X all T (free(X,path6) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute6) # label(axiom) # label(non_clause).  [assumption].
40 (all X all T (free(X,path7) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute7) # label(axiom) # label(non_clause).  [assumption].
41 (all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting0) # label(axiom) # label(non_clause).  [assumption].
42 (all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting1) # label(axiom) # label(non_clause).  [assumption].
43 (all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting2) # label(axiom) # label(non_clause).  [assumption].
44 (all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting3) # label(axiom) # label(non_clause).  [assumption].
45 (all X (nonconflicting(X,path4) <-> free(X,path4) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting4) # label(axiom) # label(non_clause).  [assumption].
46 (all X (nonconflicting(X,path5) <-> free(X,path5) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting5) # label(axiom) # label(non_clause).  [assumption].
47 (all X (nonconflicting(X,path6) <-> free(X,path6) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting6) # label(axiom) # label(non_clause).  [assumption].
48 (all X (nonconflicting(X,path7) <-> free(X,path7) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting7) # label(axiom) # label(non_clause).  [assumption].
49 path0 != path1 & path0 != path2 & path0 != path3 & path0 != path4 & path0 != path5 & path0 != path6 & path0 != path7 & path1 != path2 & path1 != path3 & path1 != path4 & path1 != path5 & path1 != path6 & path1 != path7 & path2 != path3 & path2 != path4 & path2 != path5 & path2 != path6 & path2 != path7 & path3 != path4 & path3 != path5 & path3 != path6 & path3 != path7 & path4 != path5 & path4 != path6 & path4 != path7 & path5 != path6 & path5 != path7 & path6 != path7 # label(routesExclusivity) # label(axiom) # label(non_clause).  [assumption].
50 (all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom) # label(non_clause).  [assumption].
51 (all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom) # label(non_clause).  [assumption].
52 (all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom) # label(non_clause).  [assumption].
53 (all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom) # label(non_clause).  [assumption].
54 (all X (available(X,path4) <-> nonconflicting(X,path4) & configuration(X,path4))) # label(availableRoute4) # label(axiom) # label(non_clause).  [assumption].
55 (all X (available(X,path5) <-> nonconflicting(X,path5) & configuration(X,path5))) # label(availableRoute5) # label(axiom) # label(non_clause).  [assumption].
56 (all X (available(X,path6) <-> nonconflicting(X,path6) & configuration(X,path6))) # label(availableRoute6) # label(axiom) # label(non_clause).  [assumption].
57 (all X (available(X,path7) <-> nonconflicting(X,path7) & configuration(X,path7))) # label(availableRoute7) # label(axiom) # label(non_clause).  [assumption].
58 (all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom) # label(non_clause).  [assumption].
59 (all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom) # label(non_clause).  [assumption].
60 (all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom) # label(non_clause).  [assumption].
61 (all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom) # label(non_clause).  [assumption].
62 (all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom) # label(non_clause).  [assumption].
63 (all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom) # label(non_clause).  [assumption].
64 (all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed2) # label(axiom) # label(non_clause).  [assumption].
65 (all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed3) # label(axiom) # label(non_clause).  [assumption].
66 (all X (toBeUsed(X,path4) <-> available(X,path4) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed4) # label(axiom) # label(non_clause).  [assumption].
67 (all X (toBeUsed(X,path5) <-> available(X,path5) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed5) # label(axiom) # label(non_clause).  [assumption].
68 (all X (toBeUsed(X,path6) <-> available(X,path6) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed6) # label(axiom) # label(non_clause).  [assumption].
69 (all X (toBeUsed(X,path7) <-> available(X,path7) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed7) # label(axiom) # label(non_clause).  [assumption].
70 (all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom) # label(non_clause).  [assumption].
71 (all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3) | toBeUsed(X,path5) | toBeUsed(X,path7))) # label(openGatein2) # label(axiom) # label(non_clause).  [assumption].
72 (all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2) | toBeUsed(X,path4) | toBeUsed(X,path6))) # label(openGatein1) # label(axiom) # label(non_clause).  [assumption].
73 (all T1 all T2 all X (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(no2Trains) # label(conjecture) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
-less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
-train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
-train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
-train(A) | -go(B,A) | switch(B,s3) != out2 | -at(B,A,s3) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s4) != out2 | -at(B,A,s4) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s3) = out2 | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s3) = out2 | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s3) | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s3) != out1 | -at(B,A,s3) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | switch(B,s4) != out1 | -at(B,A,s4) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s3) = out1 | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s3) = out1 | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s3) | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | switch(B,s1) != s3 | -at(B,A,s1) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
-train(A) | -go(B,A) | switch(B,s2) != s3 | -at(B,A,s2) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
train(A) | -at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
go(A,B) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
switch(A,s1) = s3 | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
switch(A,s1) = s3 | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
at(A,B,s1) | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
-train(A) | -go(B,A) | switch(B,s1) != s4 | -at(B,A,s1) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
-train(A) | -go(B,A) | switch(B,s2) != s4 | -at(B,A,s2) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
train(A) | -at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
go(A,B) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
switch(A,s1) = s4 | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
switch(A,s1) = s4 | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
at(A,B,s1) | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
-train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
-train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s4 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s4 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
-at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(14)].
-at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(15)].
-at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(16)].
-at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(17)].
-at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(18)].
-at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
-at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(19)].
at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
-at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
-at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(20)].
at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(21)].
succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(24)].
-configuration(A,path0) | switch(A,s3) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
-configuration(A,path0) | switch(A,s1) = s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
configuration(A,path0) | switch(A,s3) != out2 | switch(A,s1) != s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
-configuration(A,path1) | switch(A,s3) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
-configuration(A,path1) | switch(A,s2) = s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
configuration(A,path1) | switch(A,s3) != out2 | switch(A,s2) != s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
-configuration(A,path2) | switch(A,s4) = out2 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
-configuration(A,path2) | switch(A,s1) = s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
configuration(A,path2) | switch(A,s4) != out2 | switch(A,s1) != s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
-configuration(A,path3) | switch(A,s4) = out2 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
-configuration(A,path3) | switch(A,s2) = s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
configuration(A,path3) | switch(A,s4) != out2 | switch(A,s2) != s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
-configuration(A,path4) | switch(A,s3) = out1 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
-configuration(A,path4) | switch(A,s1) = s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
configuration(A,path4) | switch(A,s3) != out1 | switch(A,s1) != s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
-configuration(A,path5) | switch(A,s3) = out1 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
-configuration(A,path5) | switch(A,s2) = s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
configuration(A,path5) | switch(A,s3) != out1 | switch(A,s2) != s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
-configuration(A,path6) | switch(A,s4) = out1 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
-configuration(A,path6) | switch(A,s1) = s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
configuration(A,path6) | switch(A,s4) != out1 | switch(A,s1) != s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
-configuration(A,path7) | switch(A,s4) = out1 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
-configuration(A,path7) | switch(A,s2) = s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
configuration(A,path7) | switch(A,s4) != out1 | switch(A,s2) != s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
-free(A,path0) | -at(A,B,s3) # label(freeRoute0) # label(axiom).  [clausify(33)].
-free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
free(A,path0) | at(A,B,s3) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
-free(A,path1) | -at(A,B,s3) # label(freeRoute1) # label(axiom).  [clausify(34)].
-free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
free(A,path1) | at(A,B,s3) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
-free(A,path2) | -at(A,B,s4) # label(freeRoute2) # label(axiom).  [clausify(35)].
-free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
free(A,path2) | at(A,B,s4) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
-free(A,path3) | -at(A,B,s4) # label(freeRoute3) # label(axiom).  [clausify(36)].
-free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
free(A,path3) | at(A,B,s4) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
-free(A,path4) | -at(A,B,s3) # label(freeRoute4) # label(axiom).  [clausify(37)].
-free(A,path4) | -at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
free(A,path4) | at(A,B,s3) | at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
-free(A,path5) | -at(A,B,s3) # label(freeRoute5) # label(axiom).  [clausify(38)].
-free(A,path5) | -at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
free(A,path5) | at(A,B,s3) | at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
-free(A,path6) | -at(A,B,s4) # label(freeRoute6) # label(axiom).  [clausify(39)].
-free(A,path6) | -at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
free(A,path6) | at(A,B,s4) | at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
-free(A,path7) | -at(A,B,s4) # label(freeRoute7) # label(axiom).  [clausify(40)].
-free(A,path7) | -at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
free(A,path7) | at(A,B,s4) | at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
-nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path3) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path4) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path5) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path2) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path4) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path5) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path1) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path4) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path6) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path0) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path5) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path6) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
nonconflicting(A,path3) | -free(A,path3) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path4) | free(A,path4) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path0) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path1) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path2) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path5) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path6) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
nonconflicting(A,path4) | -free(A,path4) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path5) | free(A,path5) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path0) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path1) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path3) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path4) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path6) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
nonconflicting(A,path5) | -free(A,path5) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path6) | free(A,path6) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path0) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path2) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path3) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path4) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path5) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
nonconflicting(A,path6) | -free(A,path6) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path7) | free(A,path7) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path1) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path2) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path3) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path4) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path5) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
nonconflicting(A,path7) | -free(A,path7) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path6 # label(routesExclusivity) # label(axiom).  [clausify(49)].
-available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
-available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
-available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
-available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
-available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
-available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
-available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
-available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
-available(A,path4) | nonconflicting(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
-available(A,path4) | configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
available(A,path4) | -nonconflicting(A,path4) | -configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
-available(A,path5) | nonconflicting(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
-available(A,path5) | configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
available(A,path5) | -nonconflicting(A,path5) | -configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
-available(A,path6) | nonconflicting(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
-available(A,path6) | configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
available(A,path6) | -nonconflicting(A,path6) | -configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
-available(A,path7) | nonconflicting(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
-available(A,path7) | configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
available(A,path7) | -nonconflicting(A,path7) | -configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
-wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
-wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
-wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
-wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
-wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
-wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
-wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
-wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
-toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
-toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
-toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
-toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
-toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
-toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
-toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
-toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
-toBeUsed(A,path2) | wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
-toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
-toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
-toBeUsed(A,path3) | wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
-toBeUsed(A,path4) | available(A,path4) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
-toBeUsed(A,path4) | clockOrder(A) = in1 # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
-toBeUsed(A,path4) | wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
toBeUsed(A,path4) | -available(A,path4) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
-toBeUsed(A,path5) | available(A,path5) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
-toBeUsed(A,path5) | clockOrder(A) = in2 # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
-toBeUsed(A,path5) | wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
toBeUsed(A,path5) | -available(A,path5) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
-toBeUsed(A,path6) | available(A,path6) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
-toBeUsed(A,path6) | clockOrder(A) = in1 # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
-toBeUsed(A,path6) | wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
toBeUsed(A,path6) | -available(A,path6) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
-toBeUsed(A,path7) | available(A,path7) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
-toBeUsed(A,path7) | clockOrder(A) = in2 # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
-toBeUsed(A,path7) | wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
toBeUsed(A,path7) | -available(A,path7) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
-configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
-configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(70)].
configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
-open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) | toBeUsed(A,path5) | toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path5) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
-open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) | toBeUsed(A,path4) | toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path4) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
at(c3,c1,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
c2 != c1 # label(no2Trains) # label(conjecture).  [deny(73)].
at(c3,c2,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating train/1
74 train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
75 -train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
76 -train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
77 -train(A) | -go(B,A) | switch(B,s3) != out2 | -at(B,A,s3) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
78 -train(A) | -go(B,A) | switch(B,s4) != out2 | -at(B,A,s4) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
Derived: -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(74,a,75,a)].
Derived: -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(74,a,76,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(74,a,77,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(74,a,78,a)].
79 -train(A) | -go(B,A) | switch(B,s3) != out1 | -at(B,A,s3) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(79,a,74,a)].
80 -train(A) | -go(B,A) | switch(B,s4) != out1 | -at(B,A,s4) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(80,a,74,a)].
81 train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(81,a,75,a)].
Derived: -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(81,a,76,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(81,a,77,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(81,a,78,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(81,a,79,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(81,a,80,a)].
82 -train(A) | -go(B,A) | switch(B,s1) != s3 | -at(B,A,s1) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
Derived: -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(82,a,74,a)].
Derived: -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(82,a,81,a)].
83 -train(A) | -go(B,A) | switch(B,s2) != s3 | -at(B,A,s2) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
Derived: -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(83,a,74,a)].
Derived: -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(83,a,81,a)].
84 train(A) | -at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
Derived: -at(succ(A),B,s3) | less(C,f1(C,B)).  [resolve(84,a,75,a)].
Derived: -at(succ(A),B,s3) | go(f1(C,B),B).  [resolve(84,a,76,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(84,a,77,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(84,a,78,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(84,a,79,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(84,a,80,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(84,a,82,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(84,a,83,a)].
85 -train(A) | -go(B,A) | switch(B,s1) != s4 | -at(B,A,s1) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
Derived: -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(85,a,74,a)].
Derived: -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(85,a,81,a)].
Derived: -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(85,a,84,a)].
86 -train(A) | -go(B,A) | switch(B,s2) != s4 | -at(B,A,s2) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
Derived: -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(86,a,74,a)].
Derived: -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(86,a,81,a)].
Derived: -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(86,a,84,a)].
87 train(A) | -at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
Derived: -at(succ(A),B,s4) | less(C,f1(C,B)).  [resolve(87,a,75,a)].
Derived: -at(succ(A),B,s4) | go(f1(C,B),B).  [resolve(87,a,76,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(87,a,77,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(87,a,78,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(87,a,79,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(87,a,80,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(87,a,82,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(87,a,83,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(87,a,85,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(87,a,86,a)].
88 -train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2).  [resolve(88,a,74,a)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1).  [resolve(88,a,81,a)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3).  [resolve(88,a,84,a)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4).  [resolve(88,a,87,a)].
89 train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
Derived: -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(89,a,75,a)].
Derived: -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(89,a,76,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(89,a,77,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(89,a,78,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(89,a,79,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(89,a,80,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(89,a,82,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(89,a,83,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(89,a,85,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(89,a,86,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(89,a,88,a)].
90 -train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(90,a,74,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(90,a,81,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3).  [resolve(90,a,84,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4).  [resolve(90,a,87,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(90,a,89,a)].
91 train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
Derived: -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(91,a,75,a)].
Derived: -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(91,a,76,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(91,a,77,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(91,a,78,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(91,a,79,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(91,a,80,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(91,a,82,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(91,a,83,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(91,a,85,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(91,a,86,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(91,a,88,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(91,a,90,a)].

Eliminating go/2
92 -at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
93 go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
94 go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
95 go(A,B) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
96 go(A,B) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
97 go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
98 go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(92,c,93,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(92,c,94,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s3).  [resolve(92,c,95,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s4).  [resolve(92,c,96,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(92,c,97,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(92,c,98,a)].
99 at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(19)].
100 -at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(100,c,93,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(100,c,94,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s3).  [resolve(100,c,95,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s4).  [resolve(100,c,96,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(100,c,97,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(100,c,98,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(100,c,99,c)].
101 at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(20)].
Derived: at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(101,c,92,c)].
102 -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(74,a,76,a)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(102,b,92,c)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(102,b,100,c)].
103 -at(succ(A),B,out2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(74,a,77,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(103,b,94,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(103,b,95,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(103,b,96,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(103,b,97,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(103,b,98,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(103,b,99,c)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(103,b,101,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(103,b,102,b)].
104 -at(succ(A),B,out2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(74,a,78,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(104,b,94,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(104,b,95,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(104,b,96,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(104,b,97,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(104,b,98,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(104,b,99,c)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(104,b,101,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(104,b,102,b)].
105 -go(A,B) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(79,a,74,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(105,a,93,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(105,a,95,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(105,a,96,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(105,a,97,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(105,a,98,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(105,a,99,c)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(105,a,101,c)].
Derived: switch(f1(A,B),s3) != out1 | -at(f1(A,B),B,s3) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(105,a,102,b)].
106 -go(A,B) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(80,a,74,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(106,a,93,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(106,a,95,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(106,a,96,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(106,a,97,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(106,a,98,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(106,a,99,c)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(106,a,101,c)].
Derived: switch(f1(A,B),s4) != out1 | -at(f1(A,B),B,s4) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(106,a,102,b)].
107 -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(81,a,76,a)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(107,b,92,c)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(107,b,100,c)].
108 -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(81,a,77,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(108,b,94,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(108,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(108,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(108,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(108,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(108,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(108,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(108,b,107,b)].
109 -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(81,a,78,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(109,b,94,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(109,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(109,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(109,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(109,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(109,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(109,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(109,b,107,b)].
110 -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(81,a,79,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(110,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(110,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(110,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(110,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(110,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(110,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(110,b,107,b)].
111 -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(81,a,80,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(111,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(111,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(111,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(111,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(111,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(111,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(111,b,107,b)].
112 -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(82,a,74,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(112,a,93,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(112,a,94,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(112,a,96,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(112,a,97,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(112,a,98,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(112,a,99,c)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(112,a,101,c)].
Derived: switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(112,a,102,b)].
113 -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(82,a,81,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(113,a,94,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(113,a,96,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(113,a,97,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(113,a,98,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(113,a,99,c)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(113,a,101,c)].
Derived: switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(113,a,107,b)].
114 -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(83,a,74,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(114,a,93,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(114,a,94,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(114,a,96,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(114,a,97,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(114,a,98,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(114,a,99,c)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(114,a,101,c)].
Derived: switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(114,a,102,b)].
115 -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(83,a,81,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(115,a,94,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(115,a,96,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(115,a,97,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(115,a,98,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(115,a,99,c)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(115,a,101,c)].
Derived: switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(115,a,107,b)].
116 -at(succ(A),B,s3) | go(f1(C,B),B).  [resolve(84,a,76,a)].
Derived: -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(116,b,92,c)].
Derived: -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(116,b,100,c)].
117 -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(84,a,77,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(117,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(117,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(117,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(117,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(117,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(117,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(117,b,116,b)].
118 -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(84,a,78,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(118,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(118,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(118,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(118,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(118,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(118,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(118,b,116,b)].
119 -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(84,a,79,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(119,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(119,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(119,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(119,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(119,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(119,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(119,b,116,b)].
120 -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(84,a,80,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(120,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(120,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(120,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(120,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(120,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(120,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(120,b,116,b)].
121 -at(succ(A),B,s3) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(84,a,82,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(121,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(121,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(121,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(121,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(121,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(121,b,116,b)].
122 -at(succ(A),B,s3) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(84,a,83,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(122,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(122,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(122,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(122,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(122,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(122,b,116,b)].
123 -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(85,a,74,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(123,a,93,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(123,a,94,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(123,a,95,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(123,a,97,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(123,a,98,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(123,a,99,c)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(123,a,101,c)].
Derived: switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(123,a,102,b)].
124 -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(85,a,81,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(124,a,94,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(124,a,95,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(124,a,97,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(124,a,98,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(124,a,99,c)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(124,a,101,c)].
Derived: switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(124,a,107,b)].
125 -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(85,a,84,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(125,a,95,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(125,a,97,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(125,a,98,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(125,a,99,c)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(125,a,101,c)].
Derived: switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(125,a,116,b)].
126 -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(86,a,74,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(126,a,93,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(126,a,94,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(126,a,95,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(126,a,97,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(126,a,98,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(126,a,99,c)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(126,a,101,c)].
Derived: switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(126,a,102,b)].
127 -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(86,a,81,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(127,a,94,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(127,a,95,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(127,a,97,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(127,a,98,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(127,a,99,c)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(127,a,101,c)].
Derived: switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(127,a,107,b)].
128 -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(86,a,84,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(128,a,95,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(128,a,97,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(128,a,98,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(128,a,99,c)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(128,a,101,c)].
Derived: switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(128,a,116,b)].
129 -at(succ(A),B,s4) | go(f1(C,B),B).  [resolve(87,a,76,a)].
Derived: -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(129,b,92,c)].
Derived: -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(129,b,100,c)].
130 -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(87,a,77,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(130,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(130,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(130,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(130,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(130,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(130,b,129,b)].
131 -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(87,a,78,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(131,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(131,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(131,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(131,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(131,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(131,b,129,b)].
132 -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(87,a,79,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(132,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(132,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(132,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(132,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(132,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(132,b,129,b)].
133 -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(87,a,80,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(133,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(133,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(133,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(133,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(133,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(133,b,129,b)].
134 -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(87,a,82,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(134,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(134,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(134,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(134,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(134,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(134,b,129,b)].
135 -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(87,a,83,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(135,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(135,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(135,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(135,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(135,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(135,b,129,b)].
136 -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(87,a,85,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(136,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(136,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(136,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(136,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(136,b,129,b)].
137 -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(87,a,86,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(137,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(137,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(137,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(137,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(137,b,129,b)].
138 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2).  [resolve(88,a,74,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(138,a,93,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(138,a,94,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(138,a,95,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(138,a,96,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(138,a,98,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(138,a,99,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(138,a,101,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(138,a,102,b)].
139 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1).  [resolve(88,a,81,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(139,a,94,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(139,a,95,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(139,a,96,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(139,a,98,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(139,a,99,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(139,a,101,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(139,a,107,b)].
140 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3).  [resolve(88,a,84,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(140,a,95,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | -at(succ(A),B,s4).  [resolve(140,a,96,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(140,a,98,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(140,a,99,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(140,a,101,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(140,a,116,b)].
141 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4).  [resolve(88,a,87,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | -at(succ(A),B,s4).  [resolve(141,a,96,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | -at(succ(A),B,s1).  [resolve(141,a,98,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(141,a,99,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(141,a,101,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s4) | -at(succ(D),B,s4).  [resolve(141,a,129,b)].
142 -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(89,a,76,a)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(142,b,92,c)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(142,b,100,c)].
143 -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(89,a,77,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(143,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(143,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(143,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(143,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(143,b,142,b)].
144 -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(89,a,78,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(144,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(144,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(144,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(144,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(144,b,142,b)].
145 -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(89,a,79,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(145,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(145,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(145,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(145,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(145,b,142,b)].
146 -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(89,a,80,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(146,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(146,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(146,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(146,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(146,b,142,b)].
147 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(89,a,82,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(147,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(147,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(147,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(147,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(147,b,142,b)].
148 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(89,a,83,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(148,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(148,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(148,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(148,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(148,b,142,b)].
149 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(89,a,85,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(149,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(149,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(149,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(149,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(149,b,142,b)].
150 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(89,a,86,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(150,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(150,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(150,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(150,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(150,b,142,b)].
151 -at(succ(A),B,s2) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(89,a,88,a)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(151,b,98,a)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(151,b,99,c)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(151,b,101,c)].
Derived: -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s2).  [resolve(151,b,142,b)].
152 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(90,a,74,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(152,a,93,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(152,a,94,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(152,a,95,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(152,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(152,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(152,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(152,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(152,a,102,b)].
153 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(90,a,81,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(153,a,94,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(153,a,95,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(153,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(153,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(153,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(153,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(153,a,107,b)].
154 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3).  [resolve(90,a,84,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(154,a,95,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s4).  [resolve(154,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(154,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(154,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(154,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(154,a,116,b)].
155 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4).  [resolve(90,a,87,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s4).  [resolve(155,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s2).  [resolve(155,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(155,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(155,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s4) | -at(succ(D),B,s4).  [resolve(155,a,129,b)].
156 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(90,a,89,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(156,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(156,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(156,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(156,a,142,b)].
157 -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(91,a,76,a)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(157,b,92,c)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(157,b,100,c)].
158 -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(91,a,77,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(158,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(158,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(158,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(158,b,157,b)].
159 -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(91,a,78,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(159,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(159,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(159,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(159,b,157,b)].
160 -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(91,a,79,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(160,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(160,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(160,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(160,b,157,b)].
161 -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(91,a,80,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(161,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(161,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(161,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(161,b,157,b)].
162 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(91,a,82,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(162,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(162,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(162,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(162,b,157,b)].
163 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(91,a,83,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(163,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(163,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(163,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(163,b,157,b)].
164 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(91,a,85,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(164,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(164,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(164,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(164,b,157,b)].
165 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(91,a,86,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(165,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(165,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(165,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(165,b,157,b)].
166 -at(succ(A),B,s1) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(91,a,88,a)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(166,b,98,a)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(166,b,99,c)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(166,b,101,c)].
Derived: -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s1).  [resolve(166,b,157,b)].
167 -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(91,a,90,a)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(167,b,99,c)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(167,b,101,c)].
Derived: -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(167,b,157,b)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, free, open, nonconflicting, toBeUsed, configuration, available, less, at, appear, wantsToGo ]).
Function symbol precedence:  function_order([ s3, s4, s2, s1, out2, out1, in1, in2, path0, path1, path2, path3, path4, path5, path6, path7, c1, c2, c3, switch, f1, succ, clockOrder, goal, pred, f2, f3, f4, f5 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      168 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
kept:      169 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
kept:      170 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
kept:      171 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
kept:      172 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
kept:      173 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      174 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      175 switch(A,s3) = out2 | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      176 switch(A,s3) = out2 | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      177 at(A,B,s3) | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      178 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      179 switch(A,s3) = out1 | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      180 switch(A,s3) = out1 | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      181 at(A,B,s3) | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      182 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      183 switch(A,s1) = s3 | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      184 switch(A,s1) = s3 | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      185 at(A,B,s1) | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      186 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      187 switch(A,s1) = s4 | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      188 switch(A,s1) = s4 | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      189 at(A,B,s1) | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      190 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      191 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
kept:      192 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
kept:      193 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
kept:      194 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
           195 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      196 in2 != in1.  [copy(195),flip(a)].
kept:      197 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      198 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      199 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      200 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      201 in2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      202 in2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      203 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      204 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      205 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      206 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      207 in1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      208 in1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
           209 s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      210 s1 != s2.  [copy(209),flip(a)].
           211 s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      212 out2 != s2.  [copy(211),flip(a)].
           213 s2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      214 out1 != s2.  [copy(213),flip(a)].
kept:      215 s2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      216 s2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
           217 s1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      218 out2 != s1.  [copy(217),flip(a)].
           219 s1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      220 out1 != s1.  [copy(219),flip(a)].
kept:      221 s1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      222 s1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      223 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      224 out2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
           225 s4 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      226 out2 != s4.  [copy(225),flip(a)].
kept:      227 out1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      228 out1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      229 s4 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      230 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(14)].
kept:      231 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(15)].
kept:      232 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(16)].
kept:      233 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(17)].
kept:      234 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(18)].
kept:      235 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
kept:      236 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
kept:      237 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
kept:      238 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
kept:      239 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
kept:      240 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
kept:      241 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(21)].
kept:      242 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
kept:      243 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
kept:      244 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
kept:      245 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
kept:      246 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(24)].
kept:      247 -configuration(A,path0) | switch(A,s3) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
kept:      248 -configuration(A,path0) | switch(A,s1) = s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
kept:      249 configuration(A,path0) | switch(A,s3) != out2 | switch(A,s1) != s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
kept:      250 -configuration(A,path1) | switch(A,s3) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
kept:      251 -configuration(A,path1) | switch(A,s2) = s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
kept:      252 configuration(A,path1) | switch(A,s3) != out2 | switch(A,s2) != s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
kept:      253 -configuration(A,path2) | switch(A,s4) = out2 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
kept:      254 -configuration(A,path2) | switch(A,s1) = s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
kept:      255 configuration(A,path2) | switch(A,s4) != out2 | switch(A,s1) != s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
kept:      256 -configuration(A,path3) | switch(A,s4) = out2 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
kept:      257 -configuration(A,path3) | switch(A,s2) = s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
kept:      258 configuration(A,path3) | switch(A,s4) != out2 | switch(A,s2) != s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
kept:      259 -configuration(A,path4) | switch(A,s3) = out1 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
kept:      260 -configuration(A,path4) | switch(A,s1) = s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
kept:      261 configuration(A,path4) | switch(A,s3) != out1 | switch(A,s1) != s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
kept:      262 -configuration(A,path5) | switch(A,s3) = out1 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
kept:      263 -configuration(A,path5) | switch(A,s2) = s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
kept:      264 configuration(A,path5) | switch(A,s3) != out1 | switch(A,s2) != s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
kept:      265 -configuration(A,path6) | switch(A,s4) = out1 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
kept:      266 -configuration(A,path6) | switch(A,s1) = s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
kept:      267 configuration(A,path6) | switch(A,s4) != out1 | switch(A,s1) != s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
kept:      268 -configuration(A,path7) | switch(A,s4) = out1 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
kept:      269 -configuration(A,path7) | switch(A,s2) = s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
kept:      270 configuration(A,path7) | switch(A,s4) != out1 | switch(A,s2) != s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
kept:      271 -free(A,path0) | -at(A,B,s3) # label(freeRoute0) # label(axiom).  [clausify(33)].
kept:      272 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
kept:      273 free(A,path0) | at(A,B,s3) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
kept:      274 -free(A,path1) | -at(A,B,s3) # label(freeRoute1) # label(axiom).  [clausify(34)].
kept:      275 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
kept:      276 free(A,path1) | at(A,B,s3) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
kept:      277 -free(A,path2) | -at(A,B,s4) # label(freeRoute2) # label(axiom).  [clausify(35)].
kept:      278 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
kept:      279 free(A,path2) | at(A,B,s4) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
kept:      280 -free(A,path3) | -at(A,B,s4) # label(freeRoute3) # label(axiom).  [clausify(36)].
kept:      281 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
kept:      282 free(A,path3) | at(A,B,s4) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
kept:      283 -free(A,path4) | -at(A,B,s3) # label(freeRoute4) # label(axiom).  [clausify(37)].
kept:      284 -free(A,path4) | -at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
kept:      285 free(A,path4) | at(A,B,s3) | at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
kept:      286 -free(A,path5) | -at(A,B,s3) # label(freeRoute5) # label(axiom).  [clausify(38)].
kept:      287 -free(A,path5) | -at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
kept:      288 free(A,path5) | at(A,B,s3) | at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
kept:      289 -free(A,path6) | -at(A,B,s4) # label(freeRoute6) # label(axiom).  [clausify(39)].
kept:      290 -free(A,path6) | -at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
kept:      291 free(A,path6) | at(A,B,s4) | at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
kept:      292 -free(A,path7) | -at(A,B,s4) # label(freeRoute7) # label(axiom).  [clausify(40)].
kept:      293 -free(A,path7) | -at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
kept:      294 free(A,path7) | at(A,B,s4) | at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
kept:      295 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      296 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      297 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      298 -nonconflicting(A,path0) | free(A,path3) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      299 -nonconflicting(A,path0) | free(A,path4) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      300 -nonconflicting(A,path0) | free(A,path5) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      301 -nonconflicting(A,path0) | free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      302 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      303 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      304 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      305 -nonconflicting(A,path1) | free(A,path2) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      306 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      307 -nonconflicting(A,path1) | free(A,path4) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      308 -nonconflicting(A,path1) | free(A,path5) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      309 -nonconflicting(A,path1) | free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      310 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      311 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      312 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      313 -nonconflicting(A,path2) | free(A,path1) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      314 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      315 -nonconflicting(A,path2) | free(A,path4) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      316 -nonconflicting(A,path2) | free(A,path6) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      317 -nonconflicting(A,path2) | free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      318 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      319 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      320 -nonconflicting(A,path3) | free(A,path0) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      321 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      322 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      323 -nonconflicting(A,path3) | free(A,path5) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      324 -nonconflicting(A,path3) | free(A,path6) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      325 -nonconflicting(A,path3) | free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      326 nonconflicting(A,path3) | -free(A,path3) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      327 -nonconflicting(A,path4) | free(A,path4) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      328 -nonconflicting(A,path4) | free(A,path0) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      329 -nonconflicting(A,path4) | free(A,path1) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      330 -nonconflicting(A,path4) | free(A,path2) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      331 -nonconflicting(A,path4) | free(A,path5) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      332 -nonconflicting(A,path4) | free(A,path6) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      333 -nonconflicting(A,path4) | free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      334 nonconflicting(A,path4) | -free(A,path4) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      335 -nonconflicting(A,path5) | free(A,path5) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      336 -nonconflicting(A,path5) | free(A,path0) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      337 -nonconflicting(A,path5) | free(A,path1) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      338 -nonconflicting(A,path5) | free(A,path3) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      339 -nonconflicting(A,path5) | free(A,path4) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      340 -nonconflicting(A,path5) | free(A,path6) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      341 -nonconflicting(A,path5) | free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      342 nonconflicting(A,path5) | -free(A,path5) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      343 -nonconflicting(A,path6) | free(A,path6) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      344 -nonconflicting(A,path6) | free(A,path0) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      345 -nonconflicting(A,path6) | free(A,path2) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      346 -nonconflicting(A,path6) | free(A,path3) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      347 -nonconflicting(A,path6) | free(A,path4) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      348 -nonconflicting(A,path6) | free(A,path5) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      349 -nonconflicting(A,path6) | free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      350 nonconflicting(A,path6) | -free(A,path6) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      351 -nonconflicting(A,path7) | free(A,path7) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      352 -nonconflicting(A,path7) | free(A,path1) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      353 -nonconflicting(A,path7) | free(A,path2) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      354 -nonconflicting(A,path7) | free(A,path3) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      355 -nonconflicting(A,path7) | free(A,path4) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      356 -nonconflicting(A,path7) | free(A,path5) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      357 -nonconflicting(A,path7) | free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      358 nonconflicting(A,path7) | -free(A,path7) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      359 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      360 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      361 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      362 path4 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      363 path5 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      364 path6 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      365 path7 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      366 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      367 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      368 path4 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      369 path5 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      370 path6 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      371 path7 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      372 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      373 path4 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      374 path5 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      375 path6 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      376 path7 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      377 path4 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      378 path5 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      379 path6 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      380 path7 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      381 path5 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      382 path6 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      383 path7 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      384 path6 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      385 path7 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      386 path7 != path6 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      387 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
kept:      388 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
kept:      389 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
kept:      390 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
kept:      391 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
kept:      392 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
kept:      393 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
kept:      394 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
kept:      395 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
kept:      396 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
kept:      397 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
kept:      398 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
kept:      399 -available(A,path4) | nonconflicting(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
kept:      400 -available(A,path4) | configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
kept:      401 available(A,path4) | -nonconflicting(A,path4) | -configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
kept:      402 -available(A,path5) | nonconflicting(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
kept:      403 -available(A,path5) | configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
kept:      404 available(A,path5) | -nonconflicting(A,path5) | -configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
kept:      405 -available(A,path6) | nonconflicting(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
kept:      406 -available(A,path6) | configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
kept:      407 available(A,path6) | -nonconflicting(A,path6) | -configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
kept:      408 -available(A,path7) | nonconflicting(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
kept:      409 -available(A,path7) | configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
kept:      410 available(A,path7) | -nonconflicting(A,path7) | -configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
kept:      411 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
kept:      412 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
kept:      413 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
kept:      414 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
kept:      415 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
kept:      416 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
kept:      417 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
kept:      418 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
kept:      419 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
kept:      420 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
kept:      421 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
kept:      422 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
kept:      423 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      424 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      425 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      426 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      427 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      428 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      429 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      430 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      431 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      432 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      433 -toBeUsed(A,path2) | wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      434 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      435 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      436 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      437 -toBeUsed(A,path3) | wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      438 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      439 -toBeUsed(A,path4) | available(A,path4) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      440 -toBeUsed(A,path4) | clockOrder(A) = in1 # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      441 -toBeUsed(A,path4) | wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      442 toBeUsed(A,path4) | -available(A,path4) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      443 -toBeUsed(A,path5) | available(A,path5) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      444 -toBeUsed(A,path5) | clockOrder(A) = in2 # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      445 -toBeUsed(A,path5) | wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      446 toBeUsed(A,path5) | -available(A,path5) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      447 -toBeUsed(A,path6) | available(A,path6) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      448 -toBeUsed(A,path6) | clockOrder(A) = in1 # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      449 -toBeUsed(A,path6) | wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      450 toBeUsed(A,path6) | -available(A,path6) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      451 -toBeUsed(A,path7) | available(A,path7) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      452 -toBeUsed(A,path7) | clockOrder(A) = in2 # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      453 -toBeUsed(A,path7) | wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      454 toBeUsed(A,path7) | -available(A,path7) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      455 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      456 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      457 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      458 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      459 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) | toBeUsed(A,path5) | toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      460 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      461 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      462 open(succ(A),in2) | -toBeUsed(A,path5) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      463 open(succ(A),in2) | -toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      464 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) | toBeUsed(A,path4) | toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      465 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      466 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      467 open(succ(A),in1) | -toBeUsed(A,path4) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      468 open(succ(A),in1) | -toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      469 at(c3,c1,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
kept:      470 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(73)].
kept:      471 at(c3,c2,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
kept:      472 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(74,a,75,a)].
kept:      473 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(81,a,75,a)].
kept:      474 -at(succ(A),B,s3) | less(C,f1(C,B)).  [resolve(84,a,75,a)].
kept:      475 -at(succ(A),B,s4) | less(C,f1(C,B)).  [resolve(87,a,75,a)].
kept:      476 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(89,a,75,a)].
kept:      477 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(91,a,75,a)].
kept:      478 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(92,c,93,a)].
kept:      479 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(92,c,94,a)].
kept:      480 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s3).  [resolve(92,c,95,a)].
kept:      481 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s4).  [resolve(92,c,96,a)].
kept:      482 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(92,c,97,a)].
kept:      483 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(92,c,98,a)].
kept:      484 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(100,c,93,a)].
kept:      485 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(100,c,94,a)].
kept:      486 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s3).  [resolve(100,c,95,a)].
kept:      487 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s4).  [resolve(100,c,96,a)].
kept:      488 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(100,c,97,a)].
kept:      489 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(100,c,98,a)].
kept:      490 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(100,c,99,c)].
kept:      491 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(101,c,92,c)].
kept:      492 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(102,b,92,c)].
kept:      493 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(102,b,100,c)].
kept:      494 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(103,b,94,a)].
kept:      495 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(103,b,95,a)].
kept:      496 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(103,b,96,a)].
kept:      497 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(103,b,97,a)].
kept:      498 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(103,b,98,a)].
kept:      499 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(103,b,99,c)].
kept:      500 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(103,b,101,c)].
kept:      501 -at(succ(A),B,out2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(103,b,102,b)].
kept:      502 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(104,b,94,a)].
kept:      503 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(104,b,95,a)].
kept:      504 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(104,b,96,a)].
kept:      505 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(104,b,97,a)].
kept:      506 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(104,b,98,a)].
kept:      507 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(104,b,99,c)].
kept:      508 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(104,b,101,c)].
kept:      509 -at(succ(A),B,out2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(104,b,102,b)].
kept:      510 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(105,a,93,a)].
kept:      511 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(105,a,95,a)].
kept:      512 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(105,a,96,a)].
kept:      513 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(105,a,97,a)].
kept:      514 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(105,a,98,a)].
kept:      515 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(105,a,99,c)].
kept:      516 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(105,a,101,c)].
kept:      517 switch(f1(A,B),s3) != out1 | -at(f1(A,B),B,s3) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(105,a,102,b)].
kept:      518 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(106,a,93,a)].
kept:      519 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(106,a,95,a)].
kept:      520 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(106,a,96,a)].
kept:      521 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(106,a,97,a)].
kept:      522 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(106,a,98,a)].
kept:      523 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(106,a,99,c)].
kept:      524 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(106,a,101,c)].
kept:      525 switch(f1(A,B),s4) != out1 | -at(f1(A,B),B,s4) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(106,a,102,b)].
kept:      526 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(107,b,92,c)].
kept:      527 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(107,b,100,c)].
kept:      528 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(108,b,94,a)].
kept:      529 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(108,b,95,a)].
kept:      530 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(108,b,96,a)].
kept:      531 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(108,b,97,a)].
kept:      532 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(108,b,98,a)].
kept:      533 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(108,b,99,c)].
kept:      534 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(108,b,101,c)].
kept:      535 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(108,b,107,b)].
kept:      536 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(109,b,94,a)].
kept:      537 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(109,b,95,a)].
kept:      538 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(109,b,96,a)].
kept:      539 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(109,b,97,a)].
kept:      540 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(109,b,98,a)].
kept:      541 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(109,b,99,c)].
kept:      542 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(109,b,101,c)].
kept:      543 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(109,b,107,b)].
kept:      544 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(110,b,95,a)].
kept:      545 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(110,b,96,a)].
kept:      546 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(110,b,97,a)].
kept:      547 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(110,b,98,a)].
kept:      548 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(110,b,99,c)].
kept:      549 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(110,b,101,c)].
kept:      550 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(110,b,107,b)].
kept:      551 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(111,b,95,a)].
kept:      552 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(111,b,96,a)].
kept:      553 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(111,b,97,a)].
kept:      554 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(111,b,98,a)].
kept:      555 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(111,b,99,c)].
kept:      556 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(111,b,101,c)].
kept:      557 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(111,b,107,b)].
kept:      558 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(112,a,93,a)].
kept:      559 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(112,a,94,a)].
kept:      560 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(112,a,96,a)].
kept:      561 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(112,a,97,a)].
kept:      562 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(112,a,98,a)].
kept:      563 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(112,a,99,c)].
kept:      564 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(112,a,101,c)].
kept:      565 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(112,a,102,b)].
kept:      566 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(113,a,94,a)].
kept:      567 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(113,a,96,a)].
kept:      568 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(113,a,97,a)].
kept:      569 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(113,a,98,a)].
kept:      570 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(113,a,99,c)].
kept:      571 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(113,a,101,c)].
kept:      572 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(113,a,107,b)].
kept:      573 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(114,a,93,a)].
kept:      574 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(114,a,94,a)].
kept:      575 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(114,a,96,a)].
kept:      576 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(114,a,97,a)].
kept:      577 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(114,a,98,a)].
kept:      578 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(114,a,99,c)].
kept:      579 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(114,a,101,c)].
kept:      580 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(114,a,102,b)].
kept:      581 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(115,a,94,a)].
kept:      582 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(115,a,96,a)].
kept:      583 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(115,a,97,a)].
kept:      584 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(115,a,98,a)].
kept:      585 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(115,a,99,c)].
kept:      586 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(115,a,101,c)].
kept:      587 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(115,a,107,b)].
kept:      588 -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(116,b,92,c)].
kept:      589 -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(116,b,100,c)].
kept:      590 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(117,b,95,a)].
kept:      591 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(117,b,96,a)].
kept:      592 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(117,b,97,a)].
kept:      593 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(117,b,98,a)].
kept:      594 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(117,b,99,c)].
kept:      595 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(117,b,101,c)].
kept:      596 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(117,b,116,b)].
kept:      597 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(118,b,95,a)].
kept:      598 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(118,b,96,a)].
kept:      599 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(118,b,97,a)].
kept:      600 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(118,b,98,a)].
kept:      601 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(118,b,99,c)].
kept:      602 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(118,b,101,c)].
kept:      603 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(118,b,116,b)].
kept:      604 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(119,b,95,a)].
kept:      605 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(119,b,96,a)].
kept:      606 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(119,b,97,a)].
kept:      607 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(119,b,98,a)].
kept:      608 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(119,b,99,c)].
kept:      609 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(119,b,101,c)].
kept:      610 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(119,b,116,b)].
kept:      611 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(120,b,95,a)].
kept:      612 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(120,b,96,a)].
kept:      613 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(120,b,97,a)].
kept:      614 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(120,b,98,a)].
kept:      615 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(120,b,99,c)].
kept:      616 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(120,b,101,c)].
kept:      617 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(120,b,116,b)].
kept:      618 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(121,b,96,a)].
kept:      619 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(121,b,97,a)].
kept:      620 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(121,b,98,a)].
kept:      621 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(121,b,99,c)].
kept:      622 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(121,b,101,c)].
kept:      623 -at(succ(A),B,s3) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(121,b,116,b)].
kept:      624 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(122,b,96,a)].
kept:      625 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(122,b,97,a)].
kept:      626 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(122,b,98,a)].
kept:      627 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(122,b,99,c)].
kept:      628 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(122,b,101,c)].
kept:      629 -at(succ(A),B,s3) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(122,b,116,b)].
kept:      630 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(123,a,93,a)].
kept:      631 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(123,a,94,a)].
kept:      632 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(123,a,95,a)].
kept:      633 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(123,a,97,a)].
kept:      634 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(123,a,98,a)].
kept:      635 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(123,a,99,c)].
kept:      636 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(123,a,101,c)].
kept:      637 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(123,a,102,b)].
kept:      638 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(124,a,94,a)].
kept:      639 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(124,a,95,a)].
kept:      640 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(124,a,97,a)].
kept:      641 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(124,a,98,a)].
kept:      642 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(124,a,99,c)].
kept:      643 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(124,a,101,c)].
kept:      644 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(124,a,107,b)].
kept:      645 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(125,a,95,a)].
kept:      646 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(125,a,97,a)].
kept:      647 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(125,a,98,a)].
kept:      648 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(125,a,99,c)].
kept:      649 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(125,a,101,c)].
kept:      650 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(125,a,116,b)].
kept:      651 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(126,a,93,a)].
kept:      652 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(126,a,94,a)].
kept:      653 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(126,a,95,a)].
kept:      654 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(126,a,97,a)].
kept:      655 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(126,a,98,a)].
kept:      656 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(126,a,99,c)].
kept:      657 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(126,a,101,c)].
kept:      658 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(126,a,102,b)].
kept:      659 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(127,a,94,a)].
kept:      660 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(127,a,95,a)].
kept:      661 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(127,a,97,a)].
kept:      662 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(127,a,98,a)].
kept:      663 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(127,a,99,c)].
kept:      664 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(127,a,101,c)].
kept:      665 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(127,a,107,b)].
kept:      666 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(128,a,95,a)].
kept:      667 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(128,a,97,a)].
kept:      668 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(128,a,98,a)].
kept:      669 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(128,a,99,c)].
kept:      670 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(128,a,101,c)].
kept:      671 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(128,a,116,b)].
kept:      672 -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(129,b,92,c)].
kept:      673 -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(129,b,100,c)].
kept:      674 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(130,b,96,a)].
kept:      675 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(130,b,97,a)].
kept:      676 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(130,b,98,a)].
kept:      677 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(130,b,99,c)].
kept:      678 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(130,b,101,c)].
kept:      679 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(130,b,129,b)].
kept:      680 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(131,b,96,a)].
kept:      681 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(131,b,97,a)].
kept:      682 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(131,b,98,a)].
kept:      683 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(131,b,99,c)].
kept:      684 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(131,b,101,c)].
kept:      685 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(131,b,129,b)].
kept:      686 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(132,b,96,a)].
kept:      687 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(132,b,97,a)].
kept:      688 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(132,b,98,a)].
kept:      689 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(132,b,99,c)].
kept:      690 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(132,b,101,c)].
kept:      691 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(132,b,129,b)].
kept:      692 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(133,b,96,a)].
kept:      693 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(133,b,97,a)].
kept:      694 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(133,b,98,a)].
kept:      695 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(133,b,99,c)].
kept:      696 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(133,b,101,c)].
kept:      697 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(133,b,129,b)].
kept:      698 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(134,b,96,a)].
kept:      699 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(134,b,97,a)].
kept:      700 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(134,b,98,a)].
kept:      701 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(134,b,99,c)].
kept:      702 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(134,b,101,c)].
kept:      703 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(134,b,129,b)].
kept:      704 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(135,b,96,a)].
kept:      705 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(135,b,97,a)].
kept:      706 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(135,b,98,a)].
kept:      707 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(135,b,99,c)].
kept:      708 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(135,b,101,c)].
kept:      709 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(135,b,129,b)].
kept:      710 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(136,b,97,a)].
kept:      711 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(136,b,98,a)].
kept:      712 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(136,b,99,c)].
kept:      713 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(136,b,101,c)].
kept:      714 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(136,b,129,b)].
kept:      715 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(137,b,97,a)].
kept:      716 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(137,b,98,a)].
kept:      717 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(137,b,99,c)].
kept:      718 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(137,b,101,c)].
kept:      719 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(137,b,129,b)].
kept:      720 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(138,a,93,a)].
kept:      721 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(138,a,94,a)].
kept:      722 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(138,a,95,a)].
kept:      723 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(138,a,96,a)].
kept:      724 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(138,a,98,a)].
           725 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(138,a,99,c)].
kept:      726 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(725),merge(f)].
kept:      727 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(138,a,101,c)].
kept:      728 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(138,a,102,b)].
kept:      729 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(139,a,94,a)].
kept:      730 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(139,a,95,a)].
kept:      731 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(139,a,96,a)].
kept:      732 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(139,a,98,a)].
           733 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(139,a,99,c)].
kept:      734 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(733),merge(f)].
kept:      735 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(139,a,101,c)].
kept:      736 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(139,a,107,b)].
kept:      737 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(140,a,95,a)].
kept:      738 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | -at(succ(A),B,s4).  [resolve(140,a,96,a)].
kept:      739 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(140,a,98,a)].
           740 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(140,a,99,c)].
kept:      741 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in2).  [copy(740),merge(f)].
kept:      742 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(140,a,101,c)].
kept:      743 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(140,a,116,b)].
kept:      744 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | -at(succ(A),B,s4).  [resolve(141,a,96,a)].
kept:      745 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | -at(succ(A),B,s1).  [resolve(141,a,98,a)].
           746 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(141,a,99,c)].
kept:      747 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in2).  [copy(746),merge(f)].
kept:      748 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(141,a,101,c)].
kept:      749 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s4) | -at(succ(D),B,s4).  [resolve(141,a,129,b)].
kept:      750 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(142,b,92,c)].
kept:      751 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(142,b,100,c)].
kept:      752 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(143,b,97,a)].
kept:      753 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(143,b,98,a)].
kept:      754 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(143,b,99,c)].
kept:      755 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(143,b,101,c)].
kept:      756 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(143,b,142,b)].
kept:      757 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(144,b,97,a)].
kept:      758 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(144,b,98,a)].
kept:      759 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(144,b,99,c)].
kept:      760 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(144,b,101,c)].
kept:      761 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(144,b,142,b)].
kept:      762 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(145,b,97,a)].
kept:      763 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(145,b,98,a)].
kept:      764 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(145,b,99,c)].
kept:      765 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(145,b,101,c)].
kept:      766 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(145,b,142,b)].
kept:      767 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(146,b,97,a)].
kept:      768 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(146,b,98,a)].
kept:      769 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(146,b,99,c)].
kept:      770 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(146,b,101,c)].
kept:      771 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(146,b,142,b)].
kept:      772 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(147,b,97,a)].
kept:      773 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(147,b,98,a)].
kept:      774 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(147,b,99,c)].
kept:      775 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(147,b,101,c)].
kept:      776 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(147,b,142,b)].
kept:      777 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(148,b,97,a)].
kept:      778 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(148,b,98,a)].
kept:      779 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(148,b,99,c)].
kept:      780 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(148,b,101,c)].
kept:      781 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(148,b,142,b)].
kept:      782 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(149,b,97,a)].
kept:      783 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(149,b,98,a)].
kept:      784 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(149,b,99,c)].
kept:      785 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(149,b,101,c)].
kept:      786 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(149,b,142,b)].
kept:      787 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(150,b,97,a)].
kept:      788 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(150,b,98,a)].
kept:      789 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(150,b,99,c)].
kept:      790 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(150,b,101,c)].
kept:      791 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(150,b,142,b)].
kept:      792 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(151,b,98,a)].
           793 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(151,b,99,c)].
kept:      794 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(793),merge(f)].
kept:      795 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(151,b,101,c)].
kept:      796 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s2).  [resolve(151,b,142,b)].
kept:      797 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(152,a,93,a)].
kept:      798 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(152,a,94,a)].
kept:      799 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(152,a,95,a)].
kept:      800 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(152,a,96,a)].
kept:      801 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(152,a,97,a)].
kept:      802 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(152,a,99,c)].
           803 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(152,a,101,c)].
kept:      804 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(803),merge(f)].
kept:      805 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(152,a,102,b)].
kept:      806 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(153,a,94,a)].
kept:      807 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(153,a,95,a)].
kept:      808 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(153,a,96,a)].
kept:      809 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(153,a,97,a)].
kept:      810 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(153,a,99,c)].
           811 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(153,a,101,c)].
kept:      812 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(811),merge(f)].
kept:      813 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(153,a,107,b)].
kept:      814 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(154,a,95,a)].
kept:      815 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s4).  [resolve(154,a,96,a)].
kept:      816 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(154,a,97,a)].
kept:      817 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(154,a,99,c)].
           818 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(154,a,101,c)].
kept:      819 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1).  [copy(818),merge(f)].
kept:      820 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(154,a,116,b)].
kept:      821 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s4).  [resolve(155,a,96,a)].
kept:      822 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s2).  [resolve(155,a,97,a)].
kept:      823 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(155,a,99,c)].
           824 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(155,a,101,c)].
kept:      825 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1).  [copy(824),merge(f)].
kept:      826 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s4) | -at(succ(D),B,s4).  [resolve(155,a,129,b)].
kept:      827 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(156,a,97,a)].
kept:      828 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(156,a,99,c)].
           829 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(156,a,101,c)].
kept:      830 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(829),merge(f)].
kept:      831 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(156,a,142,b)].
kept:      832 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(157,b,92,c)].
kept:      833 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(157,b,100,c)].
kept:      834 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(158,b,98,a)].
kept:      835 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(158,b,99,c)].
kept:      836 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(158,b,101,c)].
kept:      837 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(158,b,157,b)].
kept:      838 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(159,b,98,a)].
kept:      839 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(159,b,99,c)].
kept:      840 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(159,b,101,c)].
kept:      841 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(159,b,157,b)].
kept:      842 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(160,b,98,a)].
kept:      843 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(160,b,99,c)].
kept:      844 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(160,b,101,c)].
kept:      845 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(160,b,157,b)].
kept:      846 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(161,b,98,a)].
kept:      847 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(161,b,99,c)].
kept:      848 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(161,b,101,c)].
kept:      849 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(161,b,157,b)].
kept:      850 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(162,b,98,a)].
kept:      851 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(162,b,99,c)].
kept:      852 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(162,b,101,c)].
kept:      853 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(162,b,157,b)].
kept:      854 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(163,b,98,a)].
kept:      855 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(163,b,99,c)].
kept:      856 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(163,b,101,c)].
kept:      857 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(163,b,157,b)].
kept:      858 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(164,b,98,a)].
kept:      859 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(164,b,99,c)].
kept:      860 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(164,b,101,c)].
kept:      861 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(164,b,157,b)].
kept:      862 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(165,b,98,a)].
kept:      863 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(165,b,99,c)].
kept:      864 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(165,b,101,c)].
kept:      865 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(165,b,157,b)].
kept:      866 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(166,b,98,a)].
           867 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(166,b,99,c)].
kept:      868 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(867),merge(f)].
kept:      869 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(166,b,101,c)].
kept:      870 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s1).  [resolve(166,b,157,b)].
kept:      871 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(167,b,99,c)].
           872 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(167,b,101,c)].
kept:      873 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(872),merge(f)].
kept:      874 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(167,b,157,b)].
kept:      875 less(A,A).  [factor(170,a,b)].
kept:      876 -at(succ(A),B,out2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(501,a,e)].
kept:      877 -at(succ(A),B,out2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(509,a,e)].
kept:      878 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(510,d,e)].
kept:      879 switch(f1(A,B),s3) != out1 | -at(f1(A,B),B,s3) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(517,d,e)].
kept:      880 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(518,d,e)].
kept:      881 switch(f1(A,B),s4) != out1 | -at(f1(A,B),B,s4) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(525,d,e)].
kept:      882 -at(succ(A),B,out1) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(528,a,e)].
kept:      883 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(535,a,e)].
kept:      884 -at(succ(A),B,out1) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(536,a,e)].
kept:      885 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(543,a,e)].
kept:      886 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(550,a,e)].
kept:      887 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(557,a,e)].
kept:      888 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(A),B,out2).  [factor(558,d,e)].
kept:      889 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2).  [factor(565,d,e)].
kept:      890 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(A),B,out1).  [factor(566,d,e)].
kept:      891 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1).  [factor(572,d,e)].
kept:      892 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(A),B,out2).  [factor(573,d,e)].
kept:      893 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2).  [factor(580,d,e)].
kept:      894 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(A),B,out1).  [factor(581,d,e)].
kept:      895 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1).  [factor(587,d,e)].
kept:      896 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s3).  [factor(590,a,c)].
kept:      897 -at(succ(A),B,s3) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(590,a,e)].
kept:      898 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s4).  [factor(591,a,c)].
kept:      899 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s2).  [factor(592,a,c)].
kept:      900 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s1).  [factor(593,a,c)].
kept:      901 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(594,a,c)].
kept:      902 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(595,a,c)].
kept:      903 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(596,a,e)].
kept:      904 -at(succ(A),B,s3) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(597,a,e)].
kept:      905 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(603,a,e)].
kept:      906 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s3).  [factor(604,a,c)].
kept:      907 -at(succ(A),B,s3) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(604,a,e)].
kept:      908 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s4).  [factor(605,a,c)].
kept:      909 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s2).  [factor(606,a,c)].
kept:      910 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s1).  [factor(607,a,c)].
kept:      911 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(608,a,c)].
kept:      912 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(609,a,c)].
kept:      913 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(610,a,e)].
kept:      914 -at(succ(A),B,s3) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(611,a,e)].
kept:      915 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(617,a,e)].
kept:      916 -at(succ(A),B,s3) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(623,a,e)].
kept:      917 -at(succ(A),B,s3) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(629,a,e)].
kept:      918 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,out2).  [factor(630,d,e)].
kept:      919 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2).  [factor(637,d,e)].
kept:      920 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,out1).  [factor(638,d,e)].
kept:      921 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1).  [factor(644,d,e)].
kept:      922 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,s3).  [factor(645,d,e)].
kept:      923 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3).  [factor(650,d,e)].
kept:      924 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,out2).  [factor(651,d,e)].
kept:      925 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2).  [factor(658,d,e)].
kept:      926 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,out1).  [factor(659,d,e)].
kept:      927 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1).  [factor(665,d,e)].
kept:      928 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,s3).  [factor(666,d,e)].
kept:      929 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3).  [factor(671,d,e)].
kept:      930 -at(succ(A),B,s4) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(674,a,e)].
kept:      931 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(679,a,e)].
kept:      932 -at(succ(A),B,s4) | switch(succ(A),s4) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s4).  [factor(680,a,c)].
kept:      933 -at(succ(A),B,s4) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(680,a,e)].
kept:      934 -at(succ(A),B,s4) | switch(succ(A),s4) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s2).  [factor(681,a,c)].
kept:      935 -at(succ(A),B,s4) | switch(succ(A),s4) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s1).  [factor(682,a,c)].
kept:      936 -at(succ(A),B,s4) | switch(succ(A),s4) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(683,a,c)].
kept:      937 -at(succ(A),B,s4) | switch(succ(A),s4) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(684,a,c)].
kept:      938 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(685,a,e)].
kept:      939 -at(succ(A),B,s4) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(686,a,e)].
kept:      940 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(691,a,e)].
kept:      941 -at(succ(A),B,s4) | switch(succ(A),s4) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s4).  [factor(692,a,c)].
kept:      942 -at(succ(A),B,s4) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(692,a,e)].
kept:      943 -at(succ(A),B,s4) | switch(succ(A),s4) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s2).  [factor(693,a,c)].
kept:      944 -at(succ(A),B,s4) | switch(succ(A),s4) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s1).  [factor(694,a,c)].
kept:      945 -at(succ(A),B,s4) | switch(succ(A),s4) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(695,a,c)].
kept:      946 -at(succ(A),B,s4) | switch(succ(A),s4) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(696,a,c)].
kept:      947 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(697,a,e)].
kept:      948 -at(succ(A),B,s4) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(698,a,e)].
kept:      949 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(703,a,e)].
kept:      950 -at(succ(A),B,s4) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(704,a,e)].
kept:      951 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(709,a,e)].
kept:      952 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(714,a,e)].
kept:      953 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(719,a,e)].
kept:      954 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(720,d,e)].
kept:      955 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(728,d,e)].
kept:      956 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(729,d,e)].
kept:      957 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(736,d,e)].
kept:      958 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,s3).  [factor(737,d,e)].
kept:      959 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s3).  [factor(743,d,e)].
kept:      960 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,s4).  [factor(744,d,e)].
kept:      961 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s4).  [factor(749,d,e)].
kept:      962 -at(succ(A),B,s2) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(752,a,e)].
kept:      963 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(756,a,e)].
kept:      964 -at(succ(A),B,s2) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(757,a,e)].
kept:      965 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(761,a,e)].
kept:      966 -at(succ(A),B,s2) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(762,a,e)].
kept:      967 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(766,a,e)].
kept:      968 -at(succ(A),B,s2) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(767,a,e)].
kept:      969 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(771,a,e)].
kept:      970 -at(succ(A),B,s2) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(772,a,e)].
kept:      971 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(776,a,e)].
kept:      972 -at(succ(A),B,s2) | switch(succ(A),s2) != s3 | at(succ(succ(A)),B,s3) | -at(succ(succ(A)),B,s2).  [factor(777,a,c)].
kept:      973 -at(succ(A),B,s2) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(777,a,e)].
kept:      974 -at(succ(A),B,s2) | switch(succ(A),s2) != s3 | at(succ(succ(A)),B,s3) | -at(succ(succ(A)),B,s1).  [factor(778,a,c)].
kept:      975 -at(succ(A),B,s2) | switch(succ(A),s2) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(779,a,c)].
kept:      976 -at(succ(A),B,s2) | switch(succ(A),s2) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(780,a,c)].
kept:      977 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(781,a,e)].
kept:      978 -at(succ(A),B,s2) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4).  [factor(782,a,e)].
kept:      979 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(786,a,e)].
kept:      980 -at(succ(A),B,s2) | switch(succ(A),s2) != s4 | at(succ(succ(A)),B,s4) | -at(succ(succ(A)),B,s2).  [factor(787,a,c)].
kept:      981 -at(succ(A),B,s2) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4).  [factor(787,a,e)].
kept:      982 -at(succ(A),B,s2) | switch(succ(A),s2) != s4 | at(succ(succ(A)),B,s4) | -at(succ(succ(A)),B,s1).  [factor(788,a,c)].
kept:      983 -at(succ(A),B,s2) | switch(succ(A),s2) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(789,a,c)].
kept:      984 -at(succ(A),B,s2) | switch(succ(A),s2) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(790,a,c)].
kept:      985 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(791,a,e)].
kept:      986 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(796,a,e)].
kept:      987 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(797,d,e)].
kept:      988 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(805,d,e)].
kept:      989 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(806,d,e)].
kept:      990 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(813,d,e)].
kept:      991 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s3).  [factor(814,d,e)].
kept:      992 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s3).  [factor(820,d,e)].
kept:      993 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s4).  [factor(821,d,e)].
kept:      994 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s4).  [factor(826,d,e)].
kept:      995 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(827,d,e)].
kept:      996 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(831,d,e)].
kept:      997 -at(succ(A),B,s1) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(834,a,e)].
kept:      998 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(837,a,e)].
kept:      999 -at(succ(A),B,s1) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(838,a,e)].
kept:      1000 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(841,a,e)].
kept:      1001 -at(succ(A),B,s1) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(842,a,e)].
kept:      1002 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(845,a,e)].
kept:      1003 -at(succ(A),B,s1) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(846,a,e)].
kept:      1004 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(849,a,e)].
kept:      1005 -at(succ(A),B,s1) | switch(succ(A),s1) != s3 | at(succ(succ(A)),B,s3) | -at(succ(succ(A)),B,s1).  [factor(850,a,c)].
kept:      1006 -at(succ(A),B,s1) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(850,a,e)].
kept:      1007 -at(succ(A),B,s1) | switch(succ(A),s1) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(851,a,c)].
kept:      1008 -at(succ(A),B,s1) | switch(succ(A),s1) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(852,a,c)].
kept:      1009 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(853,a,e)].
kept:      1010 -at(succ(A),B,s1) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(854,a,e)].
kept:      1011 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(857,a,e)].
kept:      1012 -at(succ(A),B,s1) | switch(succ(A),s1) != s4 | at(succ(succ(A)),B,s4) | -at(succ(succ(A)),B,s1).  [factor(858,a,c)].
kept:      1013 -at(succ(A),B,s1) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4).  [factor(858,a,e)].
kept:      1014 -at(succ(A),B,s1) | switch(succ(A),s1) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(859,a,c)].
kept:      1015 -at(succ(A),B,s1) | switch(succ(A),s1) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(860,a,c)].
kept:      1016 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(861,a,e)].
kept:      1017 -at(succ(A),B,s1) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4).  [factor(862,a,e)].
kept:      1018 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(865,a,e)].
kept:      1019 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(866,a,e)].
kept:      1020 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(870,a,e)].
kept:      1021 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(874,a,e)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
168 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
169 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
170 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
171 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
172 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
173 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
174 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
175 switch(A,s3) = out2 | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
176 switch(A,s3) = out2 | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
177 at(A,B,s3) | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
178 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
179 switch(A,s3) = out1 | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
180 switch(A,s3) = out1 | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
181 at(A,B,s3) | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
182 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
183 switch(A,s1) = s3 | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
184 switch(A,s1) = s3 | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
185 at(A,B,s1) | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
186 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
187 switch(A,s1) = s4 | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
188 switch(A,s1) = s4 | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
189 at(A,B,s1) | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
190 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
191 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
192 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
193 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
194 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
196 in2 != in1.  [copy(195),flip(a)].
197 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
198 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
199 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
200 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
201 in2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
202 in2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
203 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
204 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
205 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
206 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
207 in1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
208 in1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
210 s1 != s2.  [copy(209),flip(a)].
212 out2 != s2.  [copy(211),flip(a)].
214 out1 != s2.  [copy(213),flip(a)].
215 s2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
216 s2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
218 out2 != s1.  [copy(217),flip(a)].
220 out1 != s1.  [copy(219),flip(a)].
221 s1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
222 s1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
223 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
224 out2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
226 out2 != s4.  [copy(225),flip(a)].
227 out1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
228 out1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
229 s4 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
230 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(14)].
231 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(15)].
232 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(16)].
233 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(17)].
234 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(18)].
235 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
236 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
237 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
238 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
239 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
240 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
241 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(21)].
242 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
243 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
244 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
245 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
246 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(24)].
247 -configuration(A,path0) | switch(A,s3) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
248 -configuration(A,path0) | switch(A,s1) = s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
249 configuration(A,path0) | switch(A,s3) != out2 | switch(A,s1) != s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
250 -configuration(A,path1) | switch(A,s3) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
251 -configuration(A,path1) | switch(A,s2) = s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
252 configuration(A,path1) | switch(A,s3) != out2 | switch(A,s2) != s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
253 -configuration(A,path2) | switch(A,s4) = out2 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
254 -configuration(A,path2) | switch(A,s1) = s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
255 configuration(A,path2) | switch(A,s4) != out2 | switch(A,s1) != s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
256 -configuration(A,path3) | switch(A,s4) = out2 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
257 -configuration(A,path3) | switch(A,s2) = s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
258 configuration(A,path3) | switch(A,s4) != out2 | switch(A,s2) != s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
259 -configuration(A,path4) | switch(A,s3) = out1 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
260 -configuration(A,path4) | switch(A,s1) = s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
261 configuration(A,path4) | switch(A,s3) != out1 | switch(A,s1) != s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
262 -configuration(A,path5) | switch(A,s3) = out1 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
263 -configuration(A,path5) | switch(A,s2) = s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
264 configuration(A,path5) | switch(A,s3) != out1 | switch(A,s2) != s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
265 -configuration(A,path6) | switch(A,s4) = out1 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
266 -configuration(A,path6) | switch(A,s1) = s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
267 configuration(A,path6) | switch(A,s4) != out1 | switch(A,s1) != s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
268 -configuration(A,path7) | switch(A,s4) = out1 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
269 -configuration(A,path7) | switch(A,s2) = s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
270 configuration(A,path7) | switch(A,s4) != out1 | switch(A,s2) != s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
271 -free(A,path0) | -at(A,B,s3) # label(freeRoute0) # label(axiom).  [clausify(33)].
272 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
273 free(A,path0) | at(A,B,s3) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
274 -free(A,path1) | -at(A,B,s3) # label(freeRoute1) # label(axiom).  [clausify(34)].
275 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
276 free(A,path1) | at(A,B,s3) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
277 -free(A,path2) | -at(A,B,s4) # label(freeRoute2) # label(axiom).  [clausify(35)].
278 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
279 free(A,path2) | at(A,B,s4) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
280 -free(A,path3) | -at(A,B,s4) # label(freeRoute3) # label(axiom).  [clausify(36)].
281 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
282 free(A,path3) | at(A,B,s4) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
283 -free(A,path4) | -at(A,B,s3) # label(freeRoute4) # label(axiom).  [clausify(37)].
284 -free(A,path4) | -at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
285 free(A,path4) | at(A,B,s3) | at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
286 -free(A,path5) | -at(A,B,s3) # label(freeRoute5) # label(axiom).  [clausify(38)].
287 -free(A,path5) | -at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
288 free(A,path5) | at(A,B,s3) | at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
289 -free(A,path6) | -at(A,B,s4) # label(freeRoute6) # label(axiom).  [clausify(39)].
290 -free(A,path6) | -at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
291 free(A,path6) | at(A,B,s4) | at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
292 -free(A,path7) | -at(A,B,s4) # label(freeRoute7) # label(axiom).  [clausify(40)].
293 -free(A,path7) | -at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
294 free(A,path7) | at(A,B,s4) | at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
295 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(41)].
296 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(41)].
297 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(41)].
298 -nonconflicting(A,path0) | free(A,path3) # label(nonconflicting0) # label(axiom).  [clausify(41)].
299 -nonconflicting(A,path0) | free(A,path4) # label(nonconflicting0) # label(axiom).  [clausify(41)].
300 -nonconflicting(A,path0) | free(A,path5) # label(nonconflicting0) # label(axiom).  [clausify(41)].
301 -nonconflicting(A,path0) | free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
302 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
303 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(42)].
304 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(42)].
305 -nonconflicting(A,path1) | free(A,path2) # label(nonconflicting1) # label(axiom).  [clausify(42)].
306 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(42)].
307 -nonconflicting(A,path1) | free(A,path4) # label(nonconflicting1) # label(axiom).  [clausify(42)].
308 -nonconflicting(A,path1) | free(A,path5) # label(nonconflicting1) # label(axiom).  [clausify(42)].
309 -nonconflicting(A,path1) | free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
310 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
311 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(43)].
312 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(43)].
313 -nonconflicting(A,path2) | free(A,path1) # label(nonconflicting2) # label(axiom).  [clausify(43)].
314 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(43)].
315 -nonconflicting(A,path2) | free(A,path4) # label(nonconflicting2) # label(axiom).  [clausify(43)].
316 -nonconflicting(A,path2) | free(A,path6) # label(nonconflicting2) # label(axiom).  [clausify(43)].
317 -nonconflicting(A,path2) | free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
318 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
319 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(44)].
320 -nonconflicting(A,path3) | free(A,path0) # label(nonconflicting3) # label(axiom).  [clausify(44)].
321 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(44)].
322 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(44)].
323 -nonconflicting(A,path3) | free(A,path5) # label(nonconflicting3) # label(axiom).  [clausify(44)].
324 -nonconflicting(A,path3) | free(A,path6) # label(nonconflicting3) # label(axiom).  [clausify(44)].
325 -nonconflicting(A,path3) | free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
326 nonconflicting(A,path3) | -free(A,path3) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
327 -nonconflicting(A,path4) | free(A,path4) # label(nonconflicting4) # label(axiom).  [clausify(45)].
328 -nonconflicting(A,path4) | free(A,path0) # label(nonconflicting4) # label(axiom).  [clausify(45)].
329 -nonconflicting(A,path4) | free(A,path1) # label(nonconflicting4) # label(axiom).  [clausify(45)].
330 -nonconflicting(A,path4) | free(A,path2) # label(nonconflicting4) # label(axiom).  [clausify(45)].
331 -nonconflicting(A,path4) | free(A,path5) # label(nonconflicting4) # label(axiom).  [clausify(45)].
332 -nonconflicting(A,path4) | free(A,path6) # label(nonconflicting4) # label(axiom).  [clausify(45)].
333 -nonconflicting(A,path4) | free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
334 nonconflicting(A,path4) | -free(A,path4) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
335 -nonconflicting(A,path5) | free(A,path5) # label(nonconflicting5) # label(axiom).  [clausify(46)].
336 -nonconflicting(A,path5) | free(A,path0) # label(nonconflicting5) # label(axiom).  [clausify(46)].
337 -nonconflicting(A,path5) | free(A,path1) # label(nonconflicting5) # label(axiom).  [clausify(46)].
338 -nonconflicting(A,path5) | free(A,path3) # label(nonconflicting5) # label(axiom).  [clausify(46)].
339 -nonconflicting(A,path5) | free(A,path4) # label(nonconflicting5) # label(axiom).  [clausify(46)].
340 -nonconflicting(A,path5) | free(A,path6) # label(nonconflicting5) # label(axiom).  [clausify(46)].
341 -nonconflicting(A,path5) | free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
342 nonconflicting(A,path5) | -free(A,path5) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
343 -nonconflicting(A,path6) | free(A,path6) # label(nonconflicting6) # label(axiom).  [clausify(47)].
344 -nonconflicting(A,path6) | free(A,path0) # label(nonconflicting6) # label(axiom).  [clausify(47)].
345 -nonconflicting(A,path6) | free(A,path2) # label(nonconflicting6) # label(axiom).  [clausify(47)].
346 -nonconflicting(A,path6) | free(A,path3) # label(nonconflicting6) # label(axiom).  [clausify(47)].
347 -nonconflicting(A,path6) | free(A,path4) # label(nonconflicting6) # label(axiom).  [clausify(47)].
348 -nonconflicting(A,path6) | free(A,path5) # label(nonconflicting6) # label(axiom).  [clausify(47)].
349 -nonconflicting(A,path6) | free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
350 nonconflicting(A,path6) | -free(A,path6) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
351 -nonconflicting(A,path7) | free(A,path7) # label(nonconflicting7) # label(axiom).  [clausify(48)].
352 -nonconflicting(A,path7) | free(A,path1) # label(nonconflicting7) # label(axiom).  [clausify(48)].
353 -nonconflicting(A,path7) | free(A,path2) # label(nonconflicting7) # label(axiom).  [clausify(48)].
354 -nonconflicting(A,path7) | free(A,path3) # label(nonconflicting7) # label(axiom).  [clausify(48)].
355 -nonconflicting(A,path7) | free(A,path4) # label(nonconflicting7) # label(axiom).  [clausify(48)].
356 -nonconflicting(A,path7) | free(A,path5) # label(nonconflicting7) # label(axiom).  [clausify(48)].
357 -nonconflicting(A,path7) | free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
358 nonconflicting(A,path7) | -free(A,path7) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
359 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
360 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
361 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
362 path4 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
363 path5 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
364 path6 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
365 path7 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
366 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
367 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
368 path4 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
369 path5 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
370 path6 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
371 path7 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
372 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
373 path4 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
374 path5 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
375 path6 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
376 path7 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
377 path4 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
378 path5 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
379 path6 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
380 path7 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
381 path5 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
382 path6 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
383 path7 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
384 path6 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
385 path7 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
386 path7 != path6 # label(routesExclusivity) # label(axiom).  [clausify(49)].
387 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
388 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
389 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
390 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
391 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
392 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
393 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
394 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
395 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
396 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
397 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
398 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
399 -available(A,path4) | nonconflicting(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
400 -available(A,path4) | configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
401 available(A,path4) | -nonconflicting(A,path4) | -configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
402 -available(A,path5) | nonconflicting(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
403 -available(A,path5) | configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
404 available(A,path5) | -nonconflicting(A,path5) | -configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
405 -available(A,path6) | nonconflicting(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
406 -available(A,path6) | configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
407 available(A,path6) | -nonconflicting(A,path6) | -configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
408 -available(A,path7) | nonconflicting(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
409 -available(A,path7) | configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
410 available(A,path7) | -nonconflicting(A,path7) | -configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
411 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
412 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
413 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
414 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
415 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
416 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
417 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
418 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
419 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
420 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
421 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
422 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
423 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
424 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
425 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
426 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
427 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
428 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
429 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
430 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
431 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
432 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
433 -toBeUsed(A,path2) | wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
434 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
435 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
436 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
437 -toBeUsed(A,path3) | wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
438 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
439 -toBeUsed(A,path4) | available(A,path4) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
440 -toBeUsed(A,path4) | clockOrder(A) = in1 # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
441 -toBeUsed(A,path4) | wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
442 toBeUsed(A,path4) | -available(A,path4) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
443 -toBeUsed(A,path5) | available(A,path5) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
444 -toBeUsed(A,path5) | clockOrder(A) = in2 # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
445 -toBeUsed(A,path5) | wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
446 toBeUsed(A,path5) | -available(A,path5) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
447 -toBeUsed(A,path6) | available(A,path6) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
448 -toBeUsed(A,path6) | clockOrder(A) = in1 # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
449 -toBeUsed(A,path6) | wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
450 toBeUsed(A,path6) | -available(A,path6) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
451 -toBeUsed(A,path7) | available(A,path7) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
452 -toBeUsed(A,path7) | clockOrder(A) = in2 # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
453 -toBeUsed(A,path7) | wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
454 toBeUsed(A,path7) | -available(A,path7) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
455 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
456 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
457 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(70)].
458 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
459 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) | toBeUsed(A,path5) | toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
460 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(71)].
461 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(71)].
462 open(succ(A),in2) | -toBeUsed(A,path5) # label(openGatein2) # label(axiom).  [clausify(71)].
463 open(succ(A),in2) | -toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
464 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) | toBeUsed(A,path4) | toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
465 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(72)].
466 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(72)].
467 open(succ(A),in1) | -toBeUsed(A,path4) # label(openGatein1) # label(axiom).  [clausify(72)].
468 open(succ(A),in1) | -toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
469 at(c3,c1,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
470 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(73)].
471 at(c3,c2,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
472 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(74,a,75,a)].
473 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(81,a,75,a)].
474 -at(succ(A),B,s3) | less(C,f1(C,B)).  [resolve(84,a,75,a)].
475 -at(succ(A),B,s4) | less(C,f1(C,B)).  [resolve(87,a,75,a)].
476 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(89,a,75,a)].
477 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(91,a,75,a)].
478 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(92,c,93,a)].
479 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(92,c,94,a)].
480 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s3).  [resolve(92,c,95,a)].
481 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s4).  [resolve(92,c,96,a)].
482 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(92,c,97,a)].
483 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(92,c,98,a)].
484 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(100,c,93,a)].
485 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(100,c,94,a)].
486 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s3).  [resolve(100,c,95,a)].
487 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s4).  [resolve(100,c,96,a)].
488 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(100,c,97,a)].
489 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(100,c,98,a)].
490 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(100,c,99,c)].
491 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(101,c,92,c)].
492 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(102,b,92,c)].
493 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(102,b,100,c)].
499 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(103,b,99,c)].
500 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(103,b,101,c)].
507 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(104,b,99,c)].
508 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(104,b,101,c)].
515 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(105,a,99,c)].
516 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(105,a,101,c)].
523 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(106,a,99,c)].
524 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(106,a,101,c)].
526 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(107,b,92,c)].
527 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(107,b,100,c)].
533 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(108,b,99,c)].
534 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(108,b,101,c)].
541 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(109,b,99,c)].
542 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(109,b,101,c)].
548 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(110,b,99,c)].
549 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(110,b,101,c)].
555 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(111,b,99,c)].
556 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(111,b,101,c)].
563 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(112,a,99,c)].
564 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(112,a,101,c)].
570 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(113,a,99,c)].
571 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(113,a,101,c)].
578 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(114,a,99,c)].
579 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(114,a,101,c)].
585 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(115,a,99,c)].
586 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(115,a,101,c)].
588 -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(116,b,92,c)].
589 -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(116,b,100,c)].
594 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(117,b,99,c)].
595 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(117,b,101,c)].
601 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(118,b,99,c)].
602 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(118,b,101,c)].
608 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(119,b,99,c)].
609 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(119,b,101,c)].
615 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(120,b,99,c)].
616 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(120,b,101,c)].
621 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(121,b,99,c)].
622 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(121,b,101,c)].
627 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(122,b,99,c)].
628 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(122,b,101,c)].
635 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(123,a,99,c)].
636 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(123,a,101,c)].
642 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(124,a,99,c)].
643 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(124,a,101,c)].
648 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(125,a,99,c)].
649 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(125,a,101,c)].
656 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(126,a,99,c)].
657 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(126,a,101,c)].
663 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(127,a,99,c)].
664 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(127,a,101,c)].
669 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(128,a,99,c)].
670 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(128,a,101,c)].
672 -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(129,b,92,c)].
673 -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(129,b,100,c)].
677 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(130,b,99,c)].
678 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(130,b,101,c)].
683 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(131,b,99,c)].
684 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(131,b,101,c)].
689 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(132,b,99,c)].
690 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(132,b,101,c)].
695 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(133,b,99,c)].
696 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(133,b,101,c)].
701 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(134,b,99,c)].
702 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(134,b,101,c)].
707 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(135,b,99,c)].
708 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(135,b,101,c)].
712 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(136,b,99,c)].
713 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(136,b,101,c)].
717 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(137,b,99,c)].
718 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(137,b,101,c)].
726 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(725),merge(f)].
727 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(138,a,101,c)].
734 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(733),merge(f)].
735 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(139,a,101,c)].
741 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in2).  [copy(740),merge(f)].
742 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(140,a,101,c)].
747 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in2).  [copy(746),merge(f)].
748 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(141,a,101,c)].
750 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(142,b,92,c)].
751 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(142,b,100,c)].
754 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(143,b,99,c)].
755 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(143,b,101,c)].
759 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(144,b,99,c)].
760 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(144,b,101,c)].
764 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(145,b,99,c)].
765 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(145,b,101,c)].
769 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(146,b,99,c)].
770 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(146,b,101,c)].
774 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(147,b,99,c)].
775 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(147,b,101,c)].
779 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(148,b,99,c)].
780 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(148,b,101,c)].
784 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(149,b,99,c)].
785 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(149,b,101,c)].
789 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(150,b,99,c)].
790 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(150,b,101,c)].
794 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(793),merge(f)].
795 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(151,b,101,c)].
802 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(152,a,99,c)].
804 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(803),merge(f)].
810 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(153,a,99,c)].
812 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(811),merge(f)].
817 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(154,a,99,c)].
819 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1).  [copy(818),merge(f)].
823 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(155,a,99,c)].
825 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1).  [copy(824),merge(f)].
828 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(156,a,99,c)].
830 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(829),merge(f)].
832 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(157,b,92,c)].
833 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(157,b,100,c)].
835 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(158,b,99,c)].
836 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(158,b,101,c)].
839 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(159,b,99,c)].
840 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(159,b,101,c)].
843 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(160,b,99,c)].
844 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(160,b,101,c)].
847 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(161,b,99,c)].
848 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(161,b,101,c)].
851 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(162,b,99,c)].
852 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(162,b,101,c)].
855 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(163,b,99,c)].
856 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(163,b,101,c)].
859 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(164,b,99,c)].
860 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(164,b,101,c)].
863 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(165,b,99,c)].
864 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(165,b,101,c)].
868 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(867),merge(f)].
869 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(166,b,101,c)].
871 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(167,b,99,c)].
873 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(872),merge(f)].
875 less(A,A).  [factor(170,a,b)].
876 -at(succ(A),B,out2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(501,a,e)].
877 -at(succ(A),B,out2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(509,a,e)].
878 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(510,d,e)].
879 switch(f1(A,B),s3) != out1 | -at(f1(A,B),B,s3) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(517,d,e)].
880 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(518,d,e)].
881 switch(f1(A,B),s4) != out1 | -at(f1(A,B),B,s4) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(525,d,e)].
882 -at(succ(A),B,out1) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(528,a,e)].
883 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(535,a,e)].
884 -at(succ(A),B,out1) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(536,a,e)].
885 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(543,a,e)].
886 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(550,a,e)].
887 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(557,a,e)].
888 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(A),B,out2).  [factor(558,d,e)].
889 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2).  [factor(565,d,e)].
890 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(A),B,out1).  [factor(566,d,e)].
891 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1).  [factor(572,d,e)].
892 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(A),B,out2).  [factor(573,d,e)].
893 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2).  [factor(580,d,e)].
894 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(A),B,out1).  [factor(581,d,e)].
895 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1).  [factor(587,d,e)].
897 -at(succ(A),B,s3) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(590,a,e)].
901 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(594,a,c)].
902 -at(succ(A),B,s3) | switch(succ(A),s3) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(595,a,c)].
903 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(596,a,e)].
904 -at(succ(A),B,s3) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(597,a,e)].
905 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(603,a,e)].
907 -at(succ(A),B,s3) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(604,a,e)].
911 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(608,a,c)].
912 -at(succ(A),B,s3) | switch(succ(A),s3) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(609,a,c)].
913 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(610,a,e)].
914 -at(succ(A),B,s3) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(611,a,e)].
915 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(617,a,e)].
916 -at(succ(A),B,s3) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(623,a,e)].
917 -at(succ(A),B,s3) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(629,a,e)].
918 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,out2).  [factor(630,d,e)].
919 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2).  [factor(637,d,e)].
920 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,out1).  [factor(638,d,e)].
921 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1).  [factor(644,d,e)].
922 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,s3).  [factor(645,d,e)].
923 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3).  [factor(650,d,e)].
924 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,out2).  [factor(651,d,e)].
925 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2).  [factor(658,d,e)].
926 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,out1).  [factor(659,d,e)].
927 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1).  [factor(665,d,e)].
928 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,s3).  [factor(666,d,e)].
929 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3).  [factor(671,d,e)].
930 -at(succ(A),B,s4) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(674,a,e)].
931 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(679,a,e)].
933 -at(succ(A),B,s4) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(680,a,e)].
936 -at(succ(A),B,s4) | switch(succ(A),s4) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(683,a,c)].
937 -at(succ(A),B,s4) | switch(succ(A),s4) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(684,a,c)].
938 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(685,a,e)].
939 -at(succ(A),B,s4) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(686,a,e)].
940 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(691,a,e)].
942 -at(succ(A),B,s4) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(692,a,e)].
945 -at(succ(A),B,s4) | switch(succ(A),s4) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(695,a,c)].
946 -at(succ(A),B,s4) | switch(succ(A),s4) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(696,a,c)].
947 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(697,a,e)].
948 -at(succ(A),B,s4) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(698,a,e)].
949 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(703,a,e)].
950 -at(succ(A),B,s4) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(704,a,e)].
951 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(709,a,e)].
952 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(714,a,e)].
953 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(719,a,e)].
954 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(720,d,e)].
955 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(728,d,e)].
956 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(729,d,e)].
957 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(736,d,e)].
958 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,s3).  [factor(737,d,e)].
959 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s3).  [factor(743,d,e)].
960 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,s4).  [factor(744,d,e)].
961 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s4).  [factor(749,d,e)].
962 -at(succ(A),B,s2) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(752,a,e)].
963 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(756,a,e)].
964 -at(succ(A),B,s2) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(757,a,e)].
965 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(761,a,e)].
966 -at(succ(A),B,s2) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(762,a,e)].
967 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(766,a,e)].
968 -at(succ(A),B,s2) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(767,a,e)].
969 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(771,a,e)].
970 -at(succ(A),B,s2) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(772,a,e)].
971 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(776,a,e)].
973 -at(succ(A),B,s2) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(777,a,e)].
975 -at(succ(A),B,s2) | switch(succ(A),s2) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(779,a,c)].
976 -at(succ(A),B,s2) | switch(succ(A),s2) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(780,a,c)].
977 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(781,a,e)].
978 -at(succ(A),B,s2) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4).  [factor(782,a,e)].
979 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(786,a,e)].
981 -at(succ(A),B,s2) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4).  [factor(787,a,e)].
983 -at(succ(A),B,s2) | switch(succ(A),s2) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(789,a,c)].
984 -at(succ(A),B,s2) | switch(succ(A),s2) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(790,a,c)].
985 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(791,a,e)].
986 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(796,a,e)].
987 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(797,d,e)].
988 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(805,d,e)].
989 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(806,d,e)].
990 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(813,d,e)].
991 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s3).  [factor(814,d,e)].
992 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s3).  [factor(820,d,e)].
993 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s4).  [factor(821,d,e)].
994 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s4).  [factor(826,d,e)].
995 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(827,d,e)].
996 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(831,d,e)].
997 -at(succ(A),B,s1) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(834,a,e)].
998 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(837,a,e)].
999 -at(succ(A),B,s1) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(838,a,e)].
1000 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(841,a,e)].
1001 -at(succ(A),B,s1) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(842,a,e)].
1002 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(845,a,e)].
1003 -at(succ(A),B,s1) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(846,a,e)].
1004 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(849,a,e)].
1006 -at(succ(A),B,s1) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(850,a,e)].
1007 -at(succ(A),B,s1) | switch(succ(A),s1) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(851,a,c)].
1008 -at(succ(A),B,s1) | switch(succ(A),s1) != s3 | at(succ(succ(A)),B,s3) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(852,a,c)].
1009 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(853,a,e)].
1010 -at(succ(A),B,s1) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(854,a,e)].
1011 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(857,a,e)].
1013 -at(succ(A),B,s1) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4).  [factor(858,a,e)].
1014 -at(succ(A),B,s1) | switch(succ(A),s1) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(859,a,c)].
1015 -at(succ(A),B,s1) | switch(succ(A),s1) != s4 | at(succ(succ(A)),B,s4) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(860,a,c)].
1016 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(861,a,e)].
1017 -at(succ(A),B,s1) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4).  [factor(862,a,e)].
1018 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(865,a,e)].
1019 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(866,a,e)].
1020 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(870,a,e)].
1021 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(874,a,e)].
end_of_list.

formulas(demodulators).
173 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
174 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.13 seconds.

given #1 (I,wt=9): 168 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].

given #2 (I,wt=9): 169 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].

given #3 (I,wt=6): 170 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].

given #4 (I,wt=4): 171 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].

given #5 (I,wt=7): 172 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].

given #6 (I,wt=5): 173 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #7 (I,wt=5): 174 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #8 (I,wt=15): 175 switch(A,s3) = out2 | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #9 (I,wt=14): 176 switch(A,s3) = out2 | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #10 (I,wt=14): 177 at(A,B,s3) | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #11 (I,wt=13): 178 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #12 (I,wt=15): 179 switch(A,s3) = out1 | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #13 (I,wt=14): 180 switch(A,s3) = out1 | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #14 (I,wt=14): 181 at(A,B,s3) | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #15 (I,wt=13): 182 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #16 (I,wt=15): 183 switch(A,s1) = s3 | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].

given #17 (I,wt=14): 184 switch(A,s1) = s3 | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].

given #18 (I,wt=14): 185 at(A,B,s1) | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].

given #19 (I,wt=13): 186 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].

given #20 (I,wt=15): 187 switch(A,s1) = s4 | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].

given #21 (I,wt=14): 188 switch(A,s1) = s4 | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].

given #22 (I,wt=14): 189 at(A,B,s1) | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].

given #23 (I,wt=13): 190 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].

given #24 (I,wt=8): 191 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].

given #25 (I,wt=9): 192 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].

given #26 (I,wt=8): 193 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].

given #27 (I,wt=9): 194 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].

given #28 (I,wt=3): 196 in2 != in1.  [copy(195),flip(a)].

given #29 (I,wt=3): 197 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #30 (I,wt=3): 198 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #31 (I,wt=3): 199 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #32 (I,wt=3): 200 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #33 (I,wt=3): 201 in2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #34 (I,wt=3): 202 in2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #35 (I,wt=3): 203 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #36 (I,wt=3): 204 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #37 (I,wt=3): 205 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #38 (I,wt=3): 206 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #39 (I,wt=3): 207 in1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #40 (I,wt=3): 208 in1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #41 (I,wt=3): 210 s1 != s2.  [copy(209),flip(a)].

given #42 (I,wt=3): 212 out2 != s2.  [copy(211),flip(a)].

given #43 (I,wt=3): 214 out1 != s2.  [copy(213),flip(a)].

given #44 (I,wt=3): 215 s2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #45 (I,wt=3): 216 s2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #46 (I,wt=3): 218 out2 != s1.  [copy(217),flip(a)].

given #47 (I,wt=3): 220 out1 != s1.  [copy(219),flip(a)].

given #48 (I,wt=3): 221 s1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #49 (I,wt=3): 222 s1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #50 (I,wt=3): 223 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #51 (I,wt=3): 224 out2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #52 (I,wt=3): 226 out2 != s4.  [copy(225),flip(a)].

given #53 (I,wt=3): 227 out1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #54 (I,wt=3): 228 out1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #55 (I,wt=3): 229 s4 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].

given #56 (I,wt=9): 230 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(14)].

given #57 (I,wt=9): 231 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(15)].

given #58 (I,wt=11): 232 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(16)].

given #59 (I,wt=11): 233 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(17)].

given #60 (I,wt=11): 234 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(18)].

given #61 (I,wt=13): 235 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].

given #62 (I,wt=9): 236 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].

given #63 (I,wt=12): 237 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].

given #64 (I,wt=13): 238 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].

given #65 (I,wt=9): 239 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].

given #66 (I,wt=12): 240 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].

given #67 (I,wt=8): 241 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(21)].

given #68 (I,wt=13): 242 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].

given #69 (I,wt=13): 243 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].

given #70 (I,wt=13): 244 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].

given #71 (I,wt=13): 245 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].

given #72 (I,wt=8): 246 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(24)].

given #73 (I,wt=8): 247 -configuration(A,path0) | switch(A,s3) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].

given #74 (I,wt=8): 248 -configuration(A,path0) | switch(A,s1) = s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].

given #75 (I,wt=13): 249 configuration(A,path0) | switch(A,s3) != out2 | switch(A,s1) != s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].

given #76 (I,wt=8): 250 -configuration(A,path1) | switch(A,s3) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].

given #77 (I,wt=8): 251 -configuration(A,path1) | switch(A,s2) = s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].

given #78 (I,wt=13): 252 configuration(A,path1) | switch(A,s3) != out2 | switch(A,s2) != s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].

given #79 (I,wt=8): 253 -configuration(A,path2) | switch(A,s4) = out2 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].

given #80 (I,wt=8): 254 -configuration(A,path2) | switch(A,s1) = s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].

given #81 (I,wt=13): 255 configuration(A,path2) | switch(A,s4) != out2 | switch(A,s1) != s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].

given #82 (I,wt=8): 256 -configuration(A,path3) | switch(A,s4) = out2 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].

given #83 (I,wt=8): 257 -configuration(A,path3) | switch(A,s2) = s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].

given #84 (I,wt=13): 258 configuration(A,path3) | switch(A,s4) != out2 | switch(A,s2) != s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].

given #85 (I,wt=8): 259 -configuration(A,path4) | switch(A,s3) = out1 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].

given #86 (I,wt=8): 260 -configuration(A,path4) | switch(A,s1) = s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].

given #87 (I,wt=13): 261 configuration(A,path4) | switch(A,s3) != out1 | switch(A,s1) != s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].

given #88 (I,wt=8): 262 -configuration(A,path5) | switch(A,s3) = out1 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].

given #89 (I,wt=8): 263 -configuration(A,path5) | switch(A,s2) = s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].

given #90 (I,wt=13): 264 configuration(A,path5) | switch(A,s3) != out1 | switch(A,s2) != s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].

given #91 (I,wt=8): 265 -configuration(A,path6) | switch(A,s4) = out1 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].

given #92 (I,wt=8): 266 -configuration(A,path6) | switch(A,s1) = s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].

given #93 (I,wt=13): 267 configuration(A,path6) | switch(A,s4) != out1 | switch(A,s1) != s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].

given #94 (I,wt=8): 268 -configuration(A,path7) | switch(A,s4) = out1 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].

given #95 (I,wt=8): 269 -configuration(A,path7) | switch(A,s2) = s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].

given #96 (I,wt=13): 270 configuration(A,path7) | switch(A,s4) != out1 | switch(A,s2) != s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].

given #97 (I,wt=7): 271 -free(A,path0) | -at(A,B,s3) # label(freeRoute0) # label(axiom).  [clausify(33)].

given #98 (I,wt=7): 272 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].

given #99 (I,wt=11): 273 free(A,path0) | at(A,B,s3) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].

given #100 (I,wt=7): 274 -free(A,path1) | -at(A,B,s3) # label(freeRoute1) # label(axiom).  [clausify(34)].

given #101 (I,wt=7): 275 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].

given #102 (I,wt=11): 276 free(A,path1) | at(A,B,s3) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].

given #103 (I,wt=7): 277 -free(A,path2) | -at(A,B,s4) # label(freeRoute2) # label(axiom).  [clausify(35)].

given #104 (I,wt=7): 278 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].

given #105 (I,wt=11): 279 free(A,path2) | at(A,B,s4) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].

given #106 (I,wt=7): 280 -free(A,path3) | -at(A,B,s4) # label(freeRoute3) # label(axiom).  [clausify(36)].

given #107 (I,wt=7): 281 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].

given #108 (I,wt=11): 282 free(A,path3) | at(A,B,s4) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].

given #109 (I,wt=7): 283 -free(A,path4) | -at(A,B,s3) # label(freeRoute4) # label(axiom).  [clausify(37)].

given #110 (I,wt=7): 284 -free(A,path4) | -at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].

given #111 (I,wt=11): 285 free(A,path4) | at(A,B,s3) | at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].

given #112 (I,wt=7): 286 -free(A,path5) | -at(A,B,s3) # label(freeRoute5) # label(axiom).  [clausify(38)].

given #113 (I,wt=7): 287 -free(A,path5) | -at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].

given #114 (I,wt=11): 288 free(A,path5) | at(A,B,s3) | at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].

given #115 (I,wt=7): 289 -free(A,path6) | -at(A,B,s4) # label(freeRoute6) # label(axiom).  [clausify(39)].

given #116 (I,wt=7): 290 -free(A,path6) | -at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].

given #117 (I,wt=11): 291 free(A,path6) | at(A,B,s4) | at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].

given #118 (I,wt=7): 292 -free(A,path7) | -at(A,B,s4) # label(freeRoute7) # label(axiom).  [clausify(40)].

given #119 (I,wt=7): 293 -free(A,path7) | -at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].

given #120 (I,wt=11): 294 free(A,path7) | at(A,B,s4) | at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].

given #121 (I,wt=6): 295 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #122 (I,wt=6): 296 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #123 (I,wt=6): 297 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #124 (I,wt=6): 298 -nonconflicting(A,path0) | free(A,path3) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #125 (I,wt=6): 299 -nonconflicting(A,path0) | free(A,path4) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #126 (I,wt=6): 300 -nonconflicting(A,path0) | free(A,path5) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #127 (I,wt=6): 301 -nonconflicting(A,path0) | free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #128 (I,wt=24): 302 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].

given #129 (I,wt=6): 303 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #130 (I,wt=6): 304 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #131 (I,wt=6): 305 -nonconflicting(A,path1) | free(A,path2) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #132 (I,wt=6): 306 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #133 (I,wt=6): 307 -nonconflicting(A,path1) | free(A,path4) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #134 (I,wt=6): 308 -nonconflicting(A,path1) | free(A,path5) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #135 (I,wt=6): 309 -nonconflicting(A,path1) | free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #136 (I,wt=24): 310 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].

given #137 (I,wt=6): 311 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #138 (I,wt=6): 312 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #139 (I,wt=6): 313 -nonconflicting(A,path2) | free(A,path1) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #140 (I,wt=6): 314 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #141 (I,wt=6): 315 -nonconflicting(A,path2) | free(A,path4) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #142 (I,wt=6): 316 -nonconflicting(A,path2) | free(A,path6) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #143 (I,wt=6): 317 -nonconflicting(A,path2) | free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #144 (I,wt=24): 318 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].

given #145 (I,wt=6): 319 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #146 (I,wt=6): 320 -nonconflicting(A,path3) | free(A,path0) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #147 (I,wt=6): 321 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #148 (I,wt=6): 322 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #149 (I,wt=6): 323 -nonconflicting(A,path3) | free(A,path5) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #150 (I,wt=6): 324 -nonconflicting(A,path3) | free(A,path6) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #151 (I,wt=6): 325 -nonconflicting(A,path3) | free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #152 (I,wt=24): 326 nonconflicting(A,path3) | -free(A,path3) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].

given #153 (I,wt=6): 327 -nonconflicting(A,path4) | free(A,path4) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #154 (I,wt=6): 328 -nonconflicting(A,path4) | free(A,path0) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #155 (I,wt=6): 329 -nonconflicting(A,path4) | free(A,path1) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #156 (I,wt=6): 330 -nonconflicting(A,path4) | free(A,path2) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #157 (I,wt=6): 331 -nonconflicting(A,path4) | free(A,path5) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #158 (I,wt=6): 332 -nonconflicting(A,path4) | free(A,path6) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #159 (I,wt=6): 333 -nonconflicting(A,path4) | free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #160 (I,wt=24): 334 nonconflicting(A,path4) | -free(A,path4) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].

given #161 (I,wt=6): 335 -nonconflicting(A,path5) | free(A,path5) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #162 (I,wt=6): 336 -nonconflicting(A,path5) | free(A,path0) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #163 (I,wt=6): 337 -nonconflicting(A,path5) | free(A,path1) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #164 (I,wt=6): 338 -nonconflicting(A,path5) | free(A,path3) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #165 (I,wt=6): 339 -nonconflicting(A,path5) | free(A,path4) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #166 (I,wt=6): 340 -nonconflicting(A,path5) | free(A,path6) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #167 (I,wt=6): 341 -nonconflicting(A,path5) | free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #168 (I,wt=24): 342 nonconflicting(A,path5) | -free(A,path5) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].

given #169 (I,wt=6): 343 -nonconflicting(A,path6) | free(A,path6) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #170 (I,wt=6): 344 -nonconflicting(A,path6) | free(A,path0) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #171 (I,wt=6): 345 -nonconflicting(A,path6) | free(A,path2) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #172 (I,wt=6): 346 -nonconflicting(A,path6) | free(A,path3) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #173 (I,wt=6): 347 -nonconflicting(A,path6) | free(A,path4) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #174 (I,wt=6): 348 -nonconflicting(A,path6) | free(A,path5) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #175 (I,wt=6): 349 -nonconflicting(A,path6) | free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #176 (I,wt=24): 350 nonconflicting(A,path6) | -free(A,path6) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].

given #177 (I,wt=6): 351 -nonconflicting(A,path7) | free(A,path7) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #178 (I,wt=6): 352 -nonconflicting(A,path7) | free(A,path1) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #179 (I,wt=6): 353 -nonconflicting(A,path7) | free(A,path2) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #180 (I,wt=6): 354 -nonconflicting(A,path7) | free(A,path3) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #181 (I,wt=6): 355 -nonconflicting(A,path7) | free(A,path4) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #182 (I,wt=6): 356 -nonconflicting(A,path7) | free(A,path5) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #183 (I,wt=6): 357 -nonconflicting(A,path7) | free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #184 (I,wt=24): 358 nonconflicting(A,path7) | -free(A,path7) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].

given #185 (I,wt=3): 359 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #186 (I,wt=3): 360 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #187 (I,wt=3): 361 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #188 (I,wt=3): 362 path4 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #189 (I,wt=3): 363 path5 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #190 (I,wt=3): 364 path6 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #191 (I,wt=3): 365 path7 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #192 (I,wt=3): 366 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #193 (I,wt=3): 367 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #194 (I,wt=3): 368 path4 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #195 (I,wt=3): 369 path5 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #196 (I,wt=3): 370 path6 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #197 (I,wt=3): 371 path7 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #198 (I,wt=3): 372 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #199 (I,wt=3): 373 path4 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #200 (I,wt=3): 374 path5 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #201 (I,wt=3): 375 path6 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #202 (I,wt=3): 376 path7 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #203 (I,wt=3): 377 path4 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #204 (I,wt=3): 378 path5 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #205 (I,wt=3): 379 path6 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #206 (I,wt=3): 380 path7 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #207 (I,wt=3): 381 path5 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #208 (I,wt=3): 382 path6 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #209 (I,wt=3): 383 path7 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #210 (I,wt=3): 384 path6 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #211 (I,wt=3): 385 path7 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #212 (I,wt=3): 386 path7 != path6 # label(routesExclusivity) # label(axiom).  [clausify(49)].

given #213 (I,wt=6): 387 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].

given #214 (I,wt=6): 388 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].

given #215 (I,wt=9): 389 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].

given #216 (I,wt=6): 390 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].

given #217 (I,wt=6): 391 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].

given #218 (I,wt=9): 392 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].

given #219 (I,wt=6): 393 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].

given #220 (I,wt=6): 394 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].

given #221 (I,wt=9): 395 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].

given #222 (I,wt=6): 396 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].

given #223 (I,wt=6): 397 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].

given #224 (I,wt=9): 398 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].

given #225 (I,wt=6): 399 -available(A,path4) | nonconflicting(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].

given #226 (I,wt=6): 400 -available(A,path4) | configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].

given #227 (I,wt=9): 401 available(A,path4) | -nonconflicting(A,path4) | -configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].

given #228 (I,wt=6): 402 -available(A,path5) | nonconflicting(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].

given #229 (I,wt=6): 403 -available(A,path5) | configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].

given #230 (I,wt=9): 404 available(A,path5) | -nonconflicting(A,path5) | -configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].

given #231 (I,wt=6): 405 -available(A,path6) | nonconflicting(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].

given #232 (I,wt=6): 406 -available(A,path6) | configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].

given #233 (I,wt=9): 407 available(A,path6) | -nonconflicting(A,path6) | -configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].

given #234 (I,wt=6): 408 -available(A,path7) | nonconflicting(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].

given #235 (I,wt=6): 409 -available(A,path7) | configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].

given #236 (I,wt=9): 410 available(A,path7) | -nonconflicting(A,path7) | -configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].

given #237 (I,wt=9): 411 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].

given #238 (I,wt=9): 412 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].

given #239 (I,wt=14): 413 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].

given #240 (I,wt=9): 414 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].

given #241 (I,wt=9): 415 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].

given #242 (I,wt=14): 416 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].

given #243 (I,wt=9): 417 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].

given #244 (I,wt=9): 418 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].

given #245 (I,wt=14): 419 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].

given #246 (I,wt=9): 420 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].

given #247 (I,wt=9): 421 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].

given #248 (I,wt=14): 422 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].

given #249 (I,wt=6): 423 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].

given #250 (I,wt=7): 424 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(62)].

given #251 (I,wt=7): 425 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].

given #252 (I,wt=14): 426 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].

given #253 (I,wt=6): 427 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].

given #254 (I,wt=7): 428 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(63)].

given #255 (I,wt=7): 429 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].

given #256 (I,wt=14): 430 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].

given #257 (I,wt=6): 431 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].

given #258 (I,wt=7): 432 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(64)].

given #259 (I,wt=7): 433 -toBeUsed(A,path2) | wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].

given #260 (I,wt=14): 434 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].

given #261 (I,wt=6): 435 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].

given #262 (I,wt=7): 436 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(65)].

given #263 (I,wt=7): 437 -toBeUsed(A,path3) | wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].

given #264 (I,wt=14): 438 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].

given #265 (I,wt=6): 439 -toBeUsed(A,path4) | available(A,path4) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].

given #266 (I,wt=7): 440 -toBeUsed(A,path4) | clockOrder(A) = in1 # label(pathToBeUsed4) # label(axiom).  [clausify(66)].

given #267 (I,wt=7): 441 -toBeUsed(A,path4) | wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].

given #268 (I,wt=14): 442 toBeUsed(A,path4) | -available(A,path4) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].

given #269 (I,wt=6): 443 -toBeUsed(A,path5) | available(A,path5) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].

given #270 (I,wt=7): 444 -toBeUsed(A,path5) | clockOrder(A) = in2 # label(pathToBeUsed5) # label(axiom).  [clausify(67)].

given #271 (I,wt=7): 445 -toBeUsed(A,path5) | wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].

given #272 (I,wt=14): 446 toBeUsed(A,path5) | -available(A,path5) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].

given #273 (I,wt=6): 447 -toBeUsed(A,path6) | available(A,path6) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].

given #274 (I,wt=7): 448 -toBeUsed(A,path6) | clockOrder(A) = in1 # label(pathToBeUsed6) # label(axiom).  [clausify(68)].

given #275 (I,wt=7): 449 -toBeUsed(A,path6) | wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].

given #276 (I,wt=14): 450 toBeUsed(A,path6) | -available(A,path6) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].

given #277 (I,wt=6): 451 -toBeUsed(A,path7) | available(A,path7) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].

given #278 (I,wt=7): 452 -toBeUsed(A,path7) | clockOrder(A) = in2 # label(pathToBeUsed7) # label(axiom).  [clausify(69)].

given #279 (I,wt=7): 453 -toBeUsed(A,path7) | wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].

given #280 (I,wt=14): 454 toBeUsed(A,path7) | -available(A,path7) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].

given #281 (I,wt=10): 455 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].

given #282 (I,wt=10): 456 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].

given #283 (I,wt=10): 457 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(70)].

given #284 (I,wt=7): 458 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].

given #285 (I,wt=16): 459 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) | toBeUsed(A,path5) | toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].

given #286 (I,wt=7): 460 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(71)].

given #287 (I,wt=7): 461 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(71)].

given #288 (I,wt=7): 462 open(succ(A),in2) | -toBeUsed(A,path5) # label(openGatein2) # label(axiom).  [clausify(71)].

given #289 (I,wt=7): 463 open(succ(A),in2) | -toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].

given #290 (I,wt=16): 464 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) | toBeUsed(A,path4) | toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].

given #291 (I,wt=7): 465 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(72)].

given #292 (I,wt=7): 466 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(72)].

given #293 (I,wt=7): 467 open(succ(A),in1) | -toBeUsed(A,path4) # label(openGatein1) # label(axiom).  [clausify(72)].

given #294 (I,wt=7): 468 open(succ(A),in1) | -toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].

given #295 (I,wt=4): 469 at(c3,c1,in1) # label(no2Trains) # label(conjecture).  [deny(73)].

given #296 (I,wt=3): 470 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(73)].

given #297 (I,wt=4): 471 at(c3,c2,in1) # label(no2Trains) # label(conjecture).  [deny(73)].

given #298 (I,wt=10): 472 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(74,a,75,a)].

given #299 (I,wt=10): 473 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(81,a,75,a)].

given #300 (I,wt=10): 474 -at(succ(A),B,s3) | less(C,f1(C,B)).  [resolve(84,a,75,a)].

given #301 (I,wt=10): 475 -at(succ(A),B,s4) | less(C,f1(C,B)).  [resolve(87,a,75,a)].

given #302 (I,wt=10): 476 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(89,a,75,a)].

given #303 (I,wt=10): 477 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(91,a,75,a)].

given #304 (I,wt=17): 478 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(92,c,93,a)].

given #305 (I,wt=17): 479 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(92,c,94,a)].

given #306 (I,wt=17): 480 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s3).  [resolve(92,c,95,a)].

given #307 (I,wt=17): 481 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s4).  [resolve(92,c,96,a)].

given #308 (I,wt=17): 482 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(92,c,97,a)].

given #309 (I,wt=17): 483 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(92,c,98,a)].

given #310 (I,wt=17): 484 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(100,c,93,a)].

given #311 (I,wt=17): 485 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(100,c,94,a)].

given #312 (I,wt=17): 486 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s3).  [resolve(100,c,95,a)].

given #313 (I,wt=17): 487 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s4).  [resolve(100,c,96,a)].

given #314 (I,wt=17): 488 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(100,c,97,a)].

given #315 (I,wt=17): 489 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(100,c,98,a)].

given #316 (I,wt=21): 490 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(100,c,99,c)].

given #317 (I,wt=21): 491 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(101,c,92,c)].

given #318 (I,wt=23): 492 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(102,b,92,c)].

given #319 (I,wt=23): 493 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(102,b,100,c)].

given #320 (I,wt=28): 499 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(103,b,99,c)].

given #321 (I,wt=28): 500 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(103,b,101,c)].

given #322 (I,wt=28): 507 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(104,b,99,c)].

given #323 (I,wt=28): 508 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(104,b,101,c)].

given #324 (I,wt=28): 515 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(105,a,99,c)].

given #325 (I,wt=28): 516 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(105,a,101,c)].

given #326 (I,wt=28): 523 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(106,a,99,c)].

given #327 (I,wt=28): 524 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(106,a,101,c)].

given #328 (I,wt=23): 526 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(107,b,92,c)].

given #329 (I,wt=23): 527 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(107,b,100,c)].

given #330 (I,wt=28): 533 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(108,b,99,c)].

given #331 (I,wt=28): 534 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(108,b,101,c)].

given #332 (I,wt=28): 541 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(109,b,99,c)].

given #333 (I,wt=28): 542 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(109,b,101,c)].

given #334 (I,wt=28): 548 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(110,b,99,c)].

given #335 (I,wt=28): 549 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(110,b,101,c)].

given #336 (I,wt=28): 555 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(111,b,99,c)].

given #337 (I,wt=28): 556 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(111,b,101,c)].

given #338 (I,wt=28): 563 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(112,a,99,c)].

given #339 (I,wt=28): 564 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(112,a,101,c)].

given #340 (I,wt=28): 570 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(113,a,99,c)].

given #341 (I,wt=28): 571 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(113,a,101,c)].

given #342 (I,wt=28): 578 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(114,a,99,c)].

given #343 (I,wt=28): 579 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(114,a,101,c)].

given #344 (I,wt=28): 585 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(115,a,99,c)].

given #345 (I,wt=28): 586 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(115,a,101,c)].

given #346 (I,wt=23): 588 -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(116,b,92,c)].

given #347 (I,wt=23): 589 -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(116,b,100,c)].

given #348 (I,wt=28): 594 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(117,b,99,c)].

given #349 (I,wt=28): 595 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(117,b,101,c)].

given #350 (I,wt=28): 601 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(118,b,99,c)].

given #351 (I,wt=28): 602 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(118,b,101,c)].

given #352 (I,wt=28): 608 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(119,b,99,c)].

given #353 (I,wt=28): 609 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(119,b,101,c)].

given #354 (I,wt=28): 615 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(120,b,99,c)].

given #355 (I,wt=28): 616 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(120,b,101,c)].

given #356 (I,wt=28): 621 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(121,b,99,c)].

given #357 (I,wt=28): 622 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(121,b,101,c)].

given #358 (I,wt=28): 627 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(122,b,99,c)].

given #359 (I,wt=28): 628 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(122,b,101,c)].

given #360 (I,wt=28): 635 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(123,a,99,c)].

given #361 (I,wt=28): 636 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(123,a,101,c)].

given #362 (I,wt=28): 642 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(124,a,99,c)].

given #363 (I,wt=28): 643 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(124,a,101,c)].

given #364 (I,wt=28): 648 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(125,a,99,c)].

given #365 (I,wt=28): 649 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(125,a,101,c)].

given #366 (I,wt=28): 656 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(126,a,99,c)].

given #367 (I,wt=28): 657 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(126,a,101,c)].

given #368 (I,wt=28): 663 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(127,a,99,c)].

given #369 (I,wt=28): 664 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(127,a,101,c)].

given #370 (I,wt=28): 669 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(128,a,99,c)].

given #371 (I,wt=28): 670 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(128,a,101,c)].

given #372 (I,wt=23): 672 -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(129,b,92,c)].

given #373 (I,wt=23): 673 -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(129,b,100,c)].

given #374 (I,wt=28): 683 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(131,b,99,c)].

given #375 (I,wt=28): 684 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(131,b,101,c)].

given #376 (I,wt=28): 695 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(133,b,99,c)].

given #377 (I,wt=28): 696 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(133,b,101,c)].

given #378 (I,wt=28): 701 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(134,b,99,c)].

given #379 (I,wt=28): 702 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(134,b,101,c)].

given #380 (I,wt=28): 707 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(135,b,99,c)].

given #381 (I,wt=28): 708 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(135,b,101,c)].

given #382 (I,wt=28): 712 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(136,b,99,c)].

given #383 (I,wt=28): 713 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(136,b,101,c)].

given #384 (I,wt=28): 717 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(137,b,99,c)].

given #385 (I,wt=28): 718 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(137,b,101,c)].

given #386 (I,wt=22): 726 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(725),merge(f)].

given #387 (I,wt=26): 727 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(138,a,101,c)].

given #388 (I,wt=22): 734 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(733),merge(f)].

given #389 (I,wt=26): 735 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(139,a,101,c)].

given #390 (I,wt=22): 741 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in2).  [copy(740),merge(f)].

given #391 (I,wt=26): 742 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(140,a,101,c)].

given #392 (I,wt=22): 747 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in2).  [copy(746),merge(f)].

given #393 (I,wt=26): 748 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(141,a,101,c)].

given #394 (I,wt=23): 750 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(142,b,92,c)].

given #395 (I,wt=23): 751 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(142,b,100,c)].

given #396 (I,wt=28): 774 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(147,b,99,c)].

given #397 (I,wt=28): 775 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(147,b,101,c)].

given #398 (I,wt=28): 779 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(148,b,99,c)].

given #399 (I,wt=28): 780 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(148,b,101,c)].

given #400 (I,wt=28): 784 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(149,b,99,c)].

given #401 (I,wt=28): 785 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(149,b,101,c)].

given #402 (I,wt=28): 789 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(150,b,99,c)].

given #403 (I,wt=28): 790 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(150,b,101,c)].

given #404 (I,wt=22): 794 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(793),merge(f)].

given #405 (I,wt=26): 795 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(151,b,101,c)].

given #406 (I,wt=26): 802 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(152,a,99,c)].

given #407 (I,wt=22): 804 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(803),merge(f)].

given #408 (I,wt=26): 810 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(153,a,99,c)].

given #409 (I,wt=22): 812 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(811),merge(f)].

given #410 (I,wt=26): 817 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(154,a,99,c)].

given #411 (I,wt=22): 819 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1).  [copy(818),merge(f)].

given #412 (I,wt=26): 823 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(155,a,99,c)].

given #413 (I,wt=22): 825 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1).  [copy(824),merge(f)].

given #414 (I,wt=26): 828 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(156,a,99,c)].

given #415 (I,wt=22): 830 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(829),merge(f)].

given #416 (I,wt=23): 832 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(157,b,92,c)].

given #417 (I,wt=23): 833 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(157,b,100,c)].

given #418 (I,wt=28): 851 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(162,b,99,c)].

given #419 (I,wt=28): 852 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(162,b,101,c)].

given #420 (I,wt=28): 859 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(164,b,99,c)].

given #421 (I,wt=28): 860 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(164,b,101,c)].

given #422 (I,wt=22): 868 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(867),merge(f)].

given #423 (I,wt=26): 869 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(166,b,101,c)].

given #424 (I,wt=26): 871 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(167,b,99,c)].

given #425 (I,wt=22): 873 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(872),merge(f)].

given #426 (I,wt=3): 875 less(A,A).  [factor(170,a,b)].

given #427 (I,wt=25): 876 -at(succ(A),B,out2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(501,a,e)].

given #428 (I,wt=25): 877 -at(succ(A),B,out2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(509,a,e)].

given #429 (I,wt=19): 878 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(510,d,e)].

given #430 (I,wt=25): 879 switch(f1(A,B),s3) != out1 | -at(f1(A,B),B,s3) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(517,d,e)].

given #431 (I,wt=19): 880 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(518,d,e)].

given #432 (I,wt=25): 881 switch(f1(A,B),s4) != out1 | -at(f1(A,B),B,s4) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(525,d,e)].

given #433 (I,wt=19): 882 -at(succ(A),B,out1) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(528,a,e)].

given #434 (I,wt=25): 883 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(535,a,e)].

given #435 (I,wt=19): 884 -at(succ(A),B,out1) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(536,a,e)].

given #436 (I,wt=25): 885 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(543,a,e)].

given #437 (I,wt=25): 886 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(550,a,e)].

given #438 (I,wt=25): 887 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(557,a,e)].

given #439 (I,wt=19): 888 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(A),B,out2).  [factor(558,d,e)].

given #440 (I,wt=25): 889 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2).  [factor(565,d,e)].

given #441 (I,wt=19): 890 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(A),B,out1).  [factor(566,d,e)].

given #442 (I,wt=25): 891 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1).  [factor(572,d,e)].

given #443 (I,wt=19): 892 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(A),B,out2).  [factor(573,d,e)].

given #444 (I,wt=25): 893 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2).  [factor(580,d,e)].

given #445 (I,wt=19): 894 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(A),B,out1).  [factor(581,d,e)].

given #446 (I,wt=25): 895 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1).  [factor(587,d,e)].

given #447 (I,wt=19): 897 -at(succ(A),B,s3) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(590,a,e)].

given #448 (I,wt=25): 903 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2).  [factor(596,a,e)].

given #449 (I,wt=19): 904 -at(succ(A),B,s3) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(597,a,e)].

given #450 (I,wt=25): 905 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(603,a,e)].

given #451 (I,wt=19): 907 -at(succ(A),B,s3) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(604,a,e)].

given #452 (I,wt=25): 913 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1).  [factor(610,a,e)].

given #453 (I,wt=19): 914 -at(succ(A),B,s3) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(611,a,e)].

given #454 (I,wt=25): 915 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(617,a,e)].

given #455 (I,wt=25): 916 -at(succ(A),B,s3) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(623,a,e)].

given #456 (I,wt=25): 917 -at(succ(A),B,s3) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(629,a,e)].

given #457 (I,wt=19): 918 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,out2).  [factor(630,d,e)].

given #458 (I,wt=25): 919 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2).  [factor(637,d,e)].

given #459 (I,wt=19): 920 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,out1).  [factor(638,d,e)].

given #460 (I,wt=25): 921 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1).  [factor(644,d,e)].

given #461 (I,wt=19): 922 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(A),B,s3).  [factor(645,d,e)].

given #462 (I,wt=25): 923 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3).  [factor(650,d,e)].

given #463 (I,wt=19): 924 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,out2).  [factor(651,d,e)].

given #464 (I,wt=25): 925 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2).  [factor(658,d,e)].

given #465 (I,wt=19): 926 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,out1).  [factor(659,d,e)].

given #466 (I,wt=25): 927 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1).  [factor(665,d,e)].

given #467 (I,wt=19): 928 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(A),B,s3).  [factor(666,d,e)].

given #468 (I,wt=25): 929 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3).  [factor(671,d,e)].

given #469 (I,wt=19): 930 -at(succ(A),B,s4) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(674,a,e)].

given #470 (I,wt=19): 933 -at(succ(A),B,s4) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(680,a,e)].

given #471 (I,wt=25): 938 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2).  [factor(685,a,e)].

given #472 (I,wt=19): 939 -at(succ(A),B,s4) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(686,a,e)].

given #473 (I,wt=19): 942 -at(succ(A),B,s4) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(692,a,e)].

given #474 (I,wt=25): 947 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1).  [factor(697,a,e)].

given #475 (I,wt=19): 948 -at(succ(A),B,s4) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(698,a,e)].

given #476 (I,wt=25): 949 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(703,a,e)].

given #477 (I,wt=19): 950 -at(succ(A),B,s4) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(704,a,e)].

given #478 (I,wt=25): 951 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(709,a,e)].

given #479 (I,wt=25): 952 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(714,a,e)].

given #480 (I,wt=25): 953 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(719,a,e)].

given #481 (I,wt=17): 954 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(720,d,e)].

given #482 (I,wt=23): 955 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(728,d,e)].

given #483 (I,wt=17): 956 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(729,d,e)].

given #484 (I,wt=23): 957 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(736,d,e)].

given #485 (I,wt=17): 958 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,s3).  [factor(737,d,e)].

given #486 (I,wt=23): 959 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s3).  [factor(743,d,e)].

given #487 (I,wt=17): 960 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,s4).  [factor(744,d,e)].

given #488 (I,wt=23): 961 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,s4).  [factor(749,d,e)].

given #489 (I,wt=19): 962 -at(succ(A),B,s2) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(752,a,e)].

given #490 (I,wt=19): 964 -at(succ(A),B,s2) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(757,a,e)].

given #491 (I,wt=19): 966 -at(succ(A),B,s2) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(762,a,e)].

given #492 (I,wt=19): 968 -at(succ(A),B,s2) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(767,a,e)].

given #493 (I,wt=19): 970 -at(succ(A),B,s2) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(772,a,e)].

given #494 (I,wt=25): 971 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(776,a,e)].

given #495 (I,wt=19): 973 -at(succ(A),B,s2) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(777,a,e)].

given #496 (I,wt=25): 977 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3).  [factor(781,a,e)].

given #497 (I,wt=19): 978 -at(succ(A),B,s2) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4).  [factor(782,a,e)].

given #498 (I,wt=25): 979 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(786,a,e)].

given #499 (I,wt=19): 981 -at(succ(A),B,s2) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4).  [factor(787,a,e)].

given #500 (I,wt=25): 985 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4).  [factor(791,a,e)].

given #501 (I,wt=23): 986 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(796,a,e)].

given #502 (I,wt=17): 987 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(797,d,e)].

given #503 (I,wt=23): 988 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(805,d,e)].

given #504 (I,wt=17): 989 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(806,d,e)].

given #505 (I,wt=23): 990 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(813,d,e)].

given #506 (I,wt=17): 991 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s3).  [factor(814,d,e)].

given #507 (I,wt=23): 992 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s3).  [factor(820,d,e)].

given #508 (I,wt=17): 993 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s4).  [factor(821,d,e)].

given #509 (I,wt=23): 994 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s4).  [factor(826,d,e)].

given #510 (I,wt=17): 995 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(827,d,e)].

given #511 (I,wt=23): 996 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(831,d,e)].

given #512 (I,wt=19): 997 -at(succ(A),B,s1) | switch(A,s3) != out2 | -at(A,B,s3) | at(succ(A),B,out2).  [factor(834,a,e)].

given #513 (I,wt=19): 999 -at(succ(A),B,s1) | switch(A,s4) != out2 | -at(A,B,s4) | at(succ(A),B,out2).  [factor(838,a,e)].

given #514 (I,wt=19): 1001 -at(succ(A),B,s1) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1).  [factor(842,a,e)].

given #515 (I,wt=19): 1003 -at(succ(A),B,s1) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1).  [factor(846,a,e)].

given #516 (I,wt=19): 1006 -at(succ(A),B,s1) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3).  [factor(850,a,e)].

given #517 (I,wt=25): 1009 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3).  [factor(853,a,e)].

given #518 (I,wt=19): 1010 -at(succ(A),B,s1) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3).  [factor(854,a,e)].

given #519 (I,wt=19): 1013 -at(succ(A),B,s1) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4).  [factor(858,a,e)].

given #520 (I,wt=25): 1016 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4).  [factor(861,a,e)].

given #521 (I,wt=19): 1017 -at(succ(A),B,s1) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4).  [factor(862,a,e)].

given #522 (I,wt=17): 1019 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(866,a,e)].

given #523 (I,wt=23): 1020 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(870,a,e)].

given #524 (I,wt=23): 1021 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(874,a,e)].

given #525 (A,wt=9): 1022 less(A,B) | -less(C,B) | less(C,A).  [resolve(170,a,169,b)].

given #526 (F,wt=9): 1054 -at(pred(A),B,out2) | -at(A,B,out2).  [para(174(a,1),230(b,1))].

given #527 (F,wt=9): 1055 -at(pred(A),B,out1) | -at(A,B,out1).  [para(174(a,1),231(b,1))].

given #528 (T,wt=4): 1032 less(pred(A),A).  [para(174(a,1),171(a,2))].

given #529 (T,wt=7): 1023 -less(A,B) | less(A,succ(B)).  [resolve(171,a,169,b)].

given #530 (T,wt=5): 1788 less(pred(A),succ(A)).  [resolve(1023,a,1032,a)].

given #531 (T,wt=5): 1790 less(A,succ(succ(A))).  [resolve(1023,a,171,a)].

given #532 (A,wt=7): 1024 -less(succ(A),B) | less(A,B).  [resolve(171,a,169,a)].

given #533 (T,wt=5): 1796 less(pred(pred(A)),A).  [para(174(a,1),1788(a,2))].

given #534 (T,wt=6): 1791 less(pred(A),succ(succ(A))).  [resolve(1788,a,1023,a)].

given #535 (T,wt=6): 1797 less(A,succ(succ(succ(A)))).  [resolve(1790,a,1023,a)].

given #536 (T,wt=6): 1802 less(pred(pred(A)),succ(A)).  [resolve(1796,a,1023,a)].

given #537 (A,wt=8): 1025 -less(succ(A),A) | succ(A) = A.  [resolve(171,a,168,b),flip(b)].

given #538 (T,wt=6): 1822 less(pred(pred(pred(A))),A).  [para(174(a,1),1802(a,2))].

given #539 (T,wt=7): 1033 less(A,pred(B)) | less(B,A).  [para(174(a,1),172(b,1))].

given #540 (T,wt=7): 1114 -at(c3,A,in1) | c1 = A.  [resolve(469,a,234,c)].

============================== PROOF =================================

% Proof 1 at 0.18 (+ 0.02) seconds.
% Length of proof is 8.
% Level of proof is 3.
% Maximum clause weight is 11.000.
% Given clauses 540.

18 (all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom) # label(non_clause).  [assumption].
73 (all T1 all T2 all X (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(no2Trains) # label(conjecture) # label(non_clause) # label(goal).  [goal].
234 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(18)].
469 at(c3,c1,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
470 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(73)].
471 at(c3,c2,in1) # label(no2Trains) # label(conjecture).  [deny(73)].
1114 -at(c3,A,in1) | c1 = A.  [resolve(469,a,234,c)].
1836 $F.  [resolve(1114,a,471,a),flip(a),unit_del(a,470)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=540. Generated=1777. Kept=1649. proofs=1.
Usable=378. Sos=594. Demods=2. Limbo=0, Disabled=1459. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=127. Back_subsumed=677.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=2 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=29729. Demod_rewrites=72.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=706. Nonunit_bsub_feature_tests=3974.
Megabytes=4.79.
User_CPU=0.18, System_CPU=0.02, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 17045 exit (max_proofs) Sun Jun  1 15:57:54 2014
