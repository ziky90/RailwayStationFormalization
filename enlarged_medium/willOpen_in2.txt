============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 25569 was started by zikesjan on jan-mbp-5,
Fri Jun  6 21:00:58 2014
The command was "/Users/zikesjan/Downloads/LADR-2009-11A/bin/prover9".
============================== end of head ===========================

============================== INPUT =================================
set(prolog_style_variables).

formulas(assumptions).
(all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom).
(all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom).
(all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom).
(all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom).
(all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom).
(all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s3) = out2 & at(X,T,s3) | switch(X,s4) = out2 & at(X,T,s4)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s3) = out1 & at(X,T,s3) | switch(X,s4) = out1 & at(X,T,s4)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = s3 & at(X,T,s1) | switch(X,s2) = s3 & at(X,T,s2)) <-> at(succ(X),T,s3))) # label(s3ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = s4 & at(X,T,s1) | switch(X,s2) = s4 & at(X,T,s2)) <-> at(succ(X),T,s4))) # label(s4ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom).
in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in2 != s3 & in2 != s4 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & in1 != s3 & in1 != s4 & s2 != s1 & s2 != out2 & s2 != out1 & s2 != s3 & s2 != s4 & s1 != out2 & s1 != out1 & s1 != s3 & s1 != s4 & out2 != out1 & out2 != s3 & out2 != s4 & out1 != s3 & out1 != s4 & s3 != s4 # label(nodesExclusivity) # label(axiom).
(all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom).
(all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom).
(all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom).
(all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom).
(all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom).
(all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom).
(all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom).
(all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom).
(all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom).
(all X (configuration(X,path0) <-> switch(X,s3) = out2 & switch(X,s1) = s3)) # label(switchesConfiguration0) # label(axiom).
(all X (configuration(X,path1) <-> switch(X,s3) = out2 & switch(X,s2) = s3)) # label(switchesConfiguration1) # label(axiom).
(all X (configuration(X,path2) <-> switch(X,s4) = out2 & switch(X,s1) = s4)) # label(switchesConfiguration2) # label(axiom).
(all X (configuration(X,path3) <-> switch(X,s4) = out2 & switch(X,s2) = s4)) # label(switchesConfiguration3) # label(axiom).
(all X (configuration(X,path4) <-> switch(X,s3) = out1 & switch(X,s1) = s3)) # label(switchesConfiguration4) # label(axiom).
(all X (configuration(X,path5) <-> switch(X,s3) = out1 & switch(X,s2) = s3)) # label(switchesConfiguration5) # label(axiom).
(all X (configuration(X,path6) <-> switch(X,s4) = out1 & switch(X,s1) = s4)) # label(switchesConfiguration6) # label(axiom).
(all X (configuration(X,path7) <-> switch(X,s4) = out1 & switch(X,s2) = s4)) # label(switchesConfiguration7) # label(axiom).
(all X all T (free(X,path0) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute0) # label(axiom).
(all X all T (free(X,path1) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute1) # label(axiom).
(all X all T (free(X,path2) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute2) # label(axiom).
(all X all T (free(X,path3) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute3) # label(axiom).
(all X all T (free(X,path4) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute4) # label(axiom).
(all X all T (free(X,path5) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute5) # label(axiom).
(all X all T (free(X,path6) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute6) # label(axiom).
(all X all T (free(X,path7) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute7) # label(axiom).
(all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting0) # label(axiom).
(all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting1) # label(axiom).
(all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting2) # label(axiom).
(all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting3) # label(axiom).
(all X (nonconflicting(X,path4) <-> free(X,path4) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting4) # label(axiom).
(all X (nonconflicting(X,path5) <-> free(X,path5) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting5) # label(axiom).
(all X (nonconflicting(X,path6) <-> free(X,path6) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting6) # label(axiom).
(all X (nonconflicting(X,path7) <-> free(X,path7) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting7) # label(axiom).
path0 != path1 & path0 != path2 & path0 != path3 & path0 != path4 & path0 != path5 & path0 != path6 & path0 != path7 & path1 != path2 & path1 != path3 & path1 != path4 & path1 != path5 & path1 != path6 & path1 != path7 & path2 != path3 & path2 != path4 & path2 != path5 & path2 != path6 & path2 != path7 & path3 != path4 & path3 != path5 & path3 != path6 & path3 != path7 & path4 != path5 & path4 != path6 & path4 != path7 & path5 != path6 & path5 != path7 & path6 != path7 # label(routesExclusivity) # label(axiom).
(all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom).
(all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom).
(all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom).
(all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom).
(all X (available(X,path4) <-> nonconflicting(X,path4) & configuration(X,path4))) # label(availableRoute4) # label(axiom).
(all X (available(X,path5) <-> nonconflicting(X,path5) & configuration(X,path5))) # label(availableRoute5) # label(axiom).
(all X (available(X,path6) <-> nonconflicting(X,path6) & configuration(X,path6))) # label(availableRoute6) # label(axiom).
(all X (available(X,path7) <-> nonconflicting(X,path7) & configuration(X,path7))) # label(availableRoute7) # label(axiom).
(all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom).
(all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom).
(all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom).
(all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom).
(all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom).
(all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom).
(all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed2) # label(axiom).
(all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed3) # label(axiom).
(all X (toBeUsed(X,path4) <-> available(X,path4) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed4) # label(axiom).
(all X (toBeUsed(X,path5) <-> available(X,path5) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed5) # label(axiom).
(all X (toBeUsed(X,path6) <-> available(X,path6) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed6) # label(axiom).
(all X (toBeUsed(X,path7) <-> available(X,path7) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed7) # label(axiom).
(all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom).
(all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3) | toBeUsed(X,path5) | toBeUsed(X,path7))) # label(openGatein2) # label(axiom).
(all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2) | toBeUsed(X,path4) | toBeUsed(X,path6))) # label(openGatein1) # label(axiom).
end_of_list.

formulas(goals).
(exists X exists Y (at(X,T,in2) & less(X,Y) -> open(Y,in2))) # label(willOpenin2) # label(conjecture).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom) # label(non_clause).  [assumption].
2 (all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom) # label(non_clause).  [assumption].
3 (all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom) # label(non_clause).  [assumption].
4 (all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom) # label(non_clause).  [assumption].
5 (all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom) # label(non_clause).  [assumption].
6 (all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom) # label(non_clause).  [assumption].
7 (all X all T (train(T) & go(X,T) & (switch(X,s3) = out2 & at(X,T,s3) | switch(X,s4) = out2 & at(X,T,s4)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom) # label(non_clause).  [assumption].
8 (all X all T (train(T) & go(X,T) & (switch(X,s3) = out1 & at(X,T,s3) | switch(X,s4) = out1 & at(X,T,s4)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom) # label(non_clause).  [assumption].
9 (all X all T (train(T) & go(X,T) & (switch(X,s1) = s3 & at(X,T,s1) | switch(X,s2) = s3 & at(X,T,s2)) <-> at(succ(X),T,s3))) # label(s3ax1) # label(axiom) # label(non_clause).  [assumption].
10 (all X all T (train(T) & go(X,T) & (switch(X,s1) = s4 & at(X,T,s1) | switch(X,s2) = s4 & at(X,T,s2)) <-> at(succ(X),T,s4))) # label(s4ax1) # label(axiom) # label(non_clause).  [assumption].
11 (all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom) # label(non_clause).  [assumption].
12 (all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom) # label(non_clause).  [assumption].
13 in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in2 != s3 & in2 != s4 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & in1 != s3 & in1 != s4 & s2 != s1 & s2 != out2 & s2 != out1 & s2 != s3 & s2 != s4 & s1 != out2 & s1 != out1 & s1 != s3 & s1 != s4 & out2 != out1 & out2 != s3 & out2 != s4 & out1 != s3 & out1 != s4 & s3 != s4 # label(nodesExclusivity) # label(axiom) # label(non_clause).  [assumption].
14 (all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom) # label(non_clause).  [assumption].
15 (all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom) # label(non_clause).  [assumption].
16 (all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom) # label(non_clause).  [assumption].
17 (all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom) # label(non_clause).  [assumption].
18 (all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom) # label(non_clause).  [assumption].
19 (all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom) # label(non_clause).  [assumption].
20 (all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom) # label(non_clause).  [assumption].
21 (all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom) # label(non_clause).  [assumption].
22 (all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom) # label(non_clause).  [assumption].
23 (all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom) # label(non_clause).  [assumption].
24 (all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom) # label(non_clause).  [assumption].
25 (all X (configuration(X,path0) <-> switch(X,s3) = out2 & switch(X,s1) = s3)) # label(switchesConfiguration0) # label(axiom) # label(non_clause).  [assumption].
26 (all X (configuration(X,path1) <-> switch(X,s3) = out2 & switch(X,s2) = s3)) # label(switchesConfiguration1) # label(axiom) # label(non_clause).  [assumption].
27 (all X (configuration(X,path2) <-> switch(X,s4) = out2 & switch(X,s1) = s4)) # label(switchesConfiguration2) # label(axiom) # label(non_clause).  [assumption].
28 (all X (configuration(X,path3) <-> switch(X,s4) = out2 & switch(X,s2) = s4)) # label(switchesConfiguration3) # label(axiom) # label(non_clause).  [assumption].
29 (all X (configuration(X,path4) <-> switch(X,s3) = out1 & switch(X,s1) = s3)) # label(switchesConfiguration4) # label(axiom) # label(non_clause).  [assumption].
30 (all X (configuration(X,path5) <-> switch(X,s3) = out1 & switch(X,s2) = s3)) # label(switchesConfiguration5) # label(axiom) # label(non_clause).  [assumption].
31 (all X (configuration(X,path6) <-> switch(X,s4) = out1 & switch(X,s1) = s4)) # label(switchesConfiguration6) # label(axiom) # label(non_clause).  [assumption].
32 (all X (configuration(X,path7) <-> switch(X,s4) = out1 & switch(X,s2) = s4)) # label(switchesConfiguration7) # label(axiom) # label(non_clause).  [assumption].
33 (all X all T (free(X,path0) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute0) # label(axiom) # label(non_clause).  [assumption].
34 (all X all T (free(X,path1) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute1) # label(axiom) # label(non_clause).  [assumption].
35 (all X all T (free(X,path2) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute2) # label(axiom) # label(non_clause).  [assumption].
36 (all X all T (free(X,path3) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute3) # label(axiom) # label(non_clause).  [assumption].
37 (all X all T (free(X,path4) <-> -at(X,T,s3) & -at(X,T,s1))) # label(freeRoute4) # label(axiom) # label(non_clause).  [assumption].
38 (all X all T (free(X,path5) <-> -at(X,T,s3) & -at(X,T,s2))) # label(freeRoute5) # label(axiom) # label(non_clause).  [assumption].
39 (all X all T (free(X,path6) <-> -at(X,T,s4) & -at(X,T,s1))) # label(freeRoute6) # label(axiom) # label(non_clause).  [assumption].
40 (all X all T (free(X,path7) <-> -at(X,T,s4) & -at(X,T,s2))) # label(freeRoute7) # label(axiom) # label(non_clause).  [assumption].
41 (all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting0) # label(axiom) # label(non_clause).  [assumption].
42 (all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting1) # label(axiom) # label(non_clause).  [assumption].
43 (all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting2) # label(axiom) # label(non_clause).  [assumption].
44 (all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting3) # label(axiom) # label(non_clause).  [assumption].
45 (all X (nonconflicting(X,path4) <-> free(X,path4) & free(X,path0) & free(X,path1) & free(X,path2) & free(X,path5) & free(X,path6) & free(X,path7))) # label(nonconflicting4) # label(axiom) # label(non_clause).  [assumption].
46 (all X (nonconflicting(X,path5) <-> free(X,path5) & free(X,path0) & free(X,path1) & free(X,path3) & free(X,path4) & free(X,path6) & free(X,path7))) # label(nonconflicting5) # label(axiom) # label(non_clause).  [assumption].
47 (all X (nonconflicting(X,path6) <-> free(X,path6) & free(X,path0) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path7))) # label(nonconflicting6) # label(axiom) # label(non_clause).  [assumption].
48 (all X (nonconflicting(X,path7) <-> free(X,path7) & free(X,path1) & free(X,path2) & free(X,path3) & free(X,path4) & free(X,path5) & free(X,path6))) # label(nonconflicting7) # label(axiom) # label(non_clause).  [assumption].
49 path0 != path1 & path0 != path2 & path0 != path3 & path0 != path4 & path0 != path5 & path0 != path6 & path0 != path7 & path1 != path2 & path1 != path3 & path1 != path4 & path1 != path5 & path1 != path6 & path1 != path7 & path2 != path3 & path2 != path4 & path2 != path5 & path2 != path6 & path2 != path7 & path3 != path4 & path3 != path5 & path3 != path6 & path3 != path7 & path4 != path5 & path4 != path6 & path4 != path7 & path5 != path6 & path5 != path7 & path6 != path7 # label(routesExclusivity) # label(axiom) # label(non_clause).  [assumption].
50 (all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom) # label(non_clause).  [assumption].
51 (all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom) # label(non_clause).  [assumption].
52 (all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom) # label(non_clause).  [assumption].
53 (all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom) # label(non_clause).  [assumption].
54 (all X (available(X,path4) <-> nonconflicting(X,path4) & configuration(X,path4))) # label(availableRoute4) # label(axiom) # label(non_clause).  [assumption].
55 (all X (available(X,path5) <-> nonconflicting(X,path5) & configuration(X,path5))) # label(availableRoute5) # label(axiom) # label(non_clause).  [assumption].
56 (all X (available(X,path6) <-> nonconflicting(X,path6) & configuration(X,path6))) # label(availableRoute6) # label(axiom) # label(non_clause).  [assumption].
57 (all X (available(X,path7) <-> nonconflicting(X,path7) & configuration(X,path7))) # label(availableRoute7) # label(axiom) # label(non_clause).  [assumption].
58 (all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom) # label(non_clause).  [assumption].
59 (all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom) # label(non_clause).  [assumption].
60 (all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom) # label(non_clause).  [assumption].
61 (all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom) # label(non_clause).  [assumption].
62 (all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom) # label(non_clause).  [assumption].
63 (all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom) # label(non_clause).  [assumption].
64 (all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed2) # label(axiom) # label(non_clause).  [assumption].
65 (all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed3) # label(axiom) # label(non_clause).  [assumption].
66 (all X (toBeUsed(X,path4) <-> available(X,path4) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed4) # label(axiom) # label(non_clause).  [assumption].
67 (all X (toBeUsed(X,path5) <-> available(X,path5) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed5) # label(axiom) # label(non_clause).  [assumption].
68 (all X (toBeUsed(X,path6) <-> available(X,path6) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed6) # label(axiom) # label(non_clause).  [assumption].
69 (all X (toBeUsed(X,path7) <-> available(X,path7) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed7) # label(axiom) # label(non_clause).  [assumption].
70 (all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom) # label(non_clause).  [assumption].
71 (all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3) | toBeUsed(X,path5) | toBeUsed(X,path7))) # label(openGatein2) # label(axiom) # label(non_clause).  [assumption].
72 (all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2) | toBeUsed(X,path4) | toBeUsed(X,path6))) # label(openGatein1) # label(axiom) # label(non_clause).  [assumption].
73 (exists X exists Y (at(X,T,in2) & less(X,Y) -> open(Y,in2))) # label(willOpenin2) # label(conjecture) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
-less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
-train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
-train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
-train(A) | -go(B,A) | switch(B,s3) != out2 | -at(B,A,s3) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s4) != out2 | -at(B,A,s4) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s3) = out2 | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s3) = out2 | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s3) | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s3) != out1 | -at(B,A,s3) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | switch(B,s4) != out1 | -at(B,A,s4) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s3) = out1 | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s3) = out1 | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s3) | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | switch(B,s1) != s3 | -at(B,A,s1) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
-train(A) | -go(B,A) | switch(B,s2) != s3 | -at(B,A,s2) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
train(A) | -at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
go(A,B) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
switch(A,s1) = s3 | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
switch(A,s1) = s3 | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
at(A,B,s1) | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
-train(A) | -go(B,A) | switch(B,s1) != s4 | -at(B,A,s1) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
-train(A) | -go(B,A) | switch(B,s2) != s4 | -at(B,A,s2) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
train(A) | -at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
go(A,B) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
switch(A,s1) = s4 | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
switch(A,s1) = s4 | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
at(A,B,s1) | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
-train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
-train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
in1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s4 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
out1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
s4 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
-at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(14)].
-at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(15)].
-at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(16)].
-at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(17)].
-at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(18)].
-at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
-at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(19)].
at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
-at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
-at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(20)].
at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(21)].
succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(24)].
-configuration(A,path0) | switch(A,s3) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
-configuration(A,path0) | switch(A,s1) = s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
configuration(A,path0) | switch(A,s3) != out2 | switch(A,s1) != s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
-configuration(A,path1) | switch(A,s3) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
-configuration(A,path1) | switch(A,s2) = s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
configuration(A,path1) | switch(A,s3) != out2 | switch(A,s2) != s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
-configuration(A,path2) | switch(A,s4) = out2 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
-configuration(A,path2) | switch(A,s1) = s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
configuration(A,path2) | switch(A,s4) != out2 | switch(A,s1) != s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
-configuration(A,path3) | switch(A,s4) = out2 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
-configuration(A,path3) | switch(A,s2) = s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
configuration(A,path3) | switch(A,s4) != out2 | switch(A,s2) != s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
-configuration(A,path4) | switch(A,s3) = out1 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
-configuration(A,path4) | switch(A,s1) = s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
configuration(A,path4) | switch(A,s3) != out1 | switch(A,s1) != s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
-configuration(A,path5) | switch(A,s3) = out1 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
-configuration(A,path5) | switch(A,s2) = s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
configuration(A,path5) | switch(A,s3) != out1 | switch(A,s2) != s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
-configuration(A,path6) | switch(A,s4) = out1 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
-configuration(A,path6) | switch(A,s1) = s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
configuration(A,path6) | switch(A,s4) != out1 | switch(A,s1) != s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
-configuration(A,path7) | switch(A,s4) = out1 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
-configuration(A,path7) | switch(A,s2) = s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
configuration(A,path7) | switch(A,s4) != out1 | switch(A,s2) != s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
-free(A,path0) | -at(A,B,s3) # label(freeRoute0) # label(axiom).  [clausify(33)].
-free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
free(A,path0) | at(A,B,s3) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
-free(A,path1) | -at(A,B,s3) # label(freeRoute1) # label(axiom).  [clausify(34)].
-free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
free(A,path1) | at(A,B,s3) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
-free(A,path2) | -at(A,B,s4) # label(freeRoute2) # label(axiom).  [clausify(35)].
-free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
free(A,path2) | at(A,B,s4) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
-free(A,path3) | -at(A,B,s4) # label(freeRoute3) # label(axiom).  [clausify(36)].
-free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
free(A,path3) | at(A,B,s4) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
-free(A,path4) | -at(A,B,s3) # label(freeRoute4) # label(axiom).  [clausify(37)].
-free(A,path4) | -at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
free(A,path4) | at(A,B,s3) | at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
-free(A,path5) | -at(A,B,s3) # label(freeRoute5) # label(axiom).  [clausify(38)].
-free(A,path5) | -at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
free(A,path5) | at(A,B,s3) | at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
-free(A,path6) | -at(A,B,s4) # label(freeRoute6) # label(axiom).  [clausify(39)].
-free(A,path6) | -at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
free(A,path6) | at(A,B,s4) | at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
-free(A,path7) | -at(A,B,s4) # label(freeRoute7) # label(axiom).  [clausify(40)].
-free(A,path7) | -at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
free(A,path7) | at(A,B,s4) | at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
-nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path3) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path4) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path5) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path0) | free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
-nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path2) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path4) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path5) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path1) | free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
-nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path1) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path4) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path6) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path2) | free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
-nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path0) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path5) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path6) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path3) | free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
nonconflicting(A,path3) | -free(A,path3) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
-nonconflicting(A,path4) | free(A,path4) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path0) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path1) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path2) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path5) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path6) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path4) | free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
nonconflicting(A,path4) | -free(A,path4) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
-nonconflicting(A,path5) | free(A,path5) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path0) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path1) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path3) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path4) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path6) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path5) | free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
nonconflicting(A,path5) | -free(A,path5) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
-nonconflicting(A,path6) | free(A,path6) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path0) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path2) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path3) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path4) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path5) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path6) | free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
nonconflicting(A,path6) | -free(A,path6) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
-nonconflicting(A,path7) | free(A,path7) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path1) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path2) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path3) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path4) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path5) # label(nonconflicting7) # label(axiom).  [clausify(48)].
-nonconflicting(A,path7) | free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
nonconflicting(A,path7) | -free(A,path7) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path4 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path5 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path6 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
path7 != path6 # label(routesExclusivity) # label(axiom).  [clausify(49)].
-available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
-available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
-available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
-available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
-available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
-available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
-available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
-available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
-available(A,path4) | nonconflicting(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
-available(A,path4) | configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
available(A,path4) | -nonconflicting(A,path4) | -configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
-available(A,path5) | nonconflicting(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
-available(A,path5) | configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
available(A,path5) | -nonconflicting(A,path5) | -configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
-available(A,path6) | nonconflicting(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
-available(A,path6) | configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
available(A,path6) | -nonconflicting(A,path6) | -configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
-available(A,path7) | nonconflicting(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
-available(A,path7) | configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
available(A,path7) | -nonconflicting(A,path7) | -configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
-wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
-wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
-wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
-wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
-wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
-wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
-wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
-wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
-toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
-toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
-toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
-toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
-toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
-toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
-toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
-toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
-toBeUsed(A,path2) | wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
-toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
-toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
-toBeUsed(A,path3) | wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
-toBeUsed(A,path4) | available(A,path4) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
-toBeUsed(A,path4) | clockOrder(A) = in1 # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
-toBeUsed(A,path4) | wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
toBeUsed(A,path4) | -available(A,path4) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
-toBeUsed(A,path5) | available(A,path5) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
-toBeUsed(A,path5) | clockOrder(A) = in2 # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
-toBeUsed(A,path5) | wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
toBeUsed(A,path5) | -available(A,path5) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
-toBeUsed(A,path6) | available(A,path6) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
-toBeUsed(A,path6) | clockOrder(A) = in1 # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
-toBeUsed(A,path6) | wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
toBeUsed(A,path6) | -available(A,path6) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
-toBeUsed(A,path7) | available(A,path7) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
-toBeUsed(A,path7) | clockOrder(A) = in2 # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
-toBeUsed(A,path7) | wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
toBeUsed(A,path7) | -available(A,path7) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
-configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
-configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(70)].
configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
-open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) | toBeUsed(A,path5) | toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path5) # label(openGatein2) # label(axiom).  [clausify(71)].
open(succ(A),in2) | -toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
-open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) | toBeUsed(A,path4) | toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path4) # label(openGatein1) # label(axiom).  [clausify(72)].
open(succ(A),in1) | -toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
at(A,c1,in2) # label(willOpenin2) # label(conjecture).  [deny(73)].
less(A,B) # label(willOpenin2) # label(conjecture).  [deny(73)].
-open(A,in2) # label(willOpenin2) # label(conjecture).  [deny(73)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating train/1
74 train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
75 -train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
76 -train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
77 -train(A) | -go(B,A) | switch(B,s3) != out2 | -at(B,A,s3) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
78 -train(A) | -go(B,A) | switch(B,s4) != out2 | -at(B,A,s4) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
Derived: -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(74,a,76,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(74,a,77,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(74,a,78,a)].
79 -train(A) | -go(B,A) | switch(B,s3) != out1 | -at(B,A,s3) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(79,a,74,a)].
80 -train(A) | -go(B,A) | switch(B,s4) != out1 | -at(B,A,s4) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(80,a,74,a)].
81 train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(81,a,76,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(81,a,77,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(81,a,78,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(81,a,79,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(81,a,80,a)].
82 -train(A) | -go(B,A) | switch(B,s1) != s3 | -at(B,A,s1) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
Derived: -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(82,a,74,a)].
Derived: -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(82,a,81,a)].
83 -train(A) | -go(B,A) | switch(B,s2) != s3 | -at(B,A,s2) | at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
Derived: -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(83,a,74,a)].
Derived: -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(83,a,81,a)].
84 train(A) | -at(succ(B),A,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
Derived: -at(succ(A),B,s3) | go(f1(C,B),B).  [resolve(84,a,76,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(84,a,77,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(84,a,78,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(84,a,79,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(84,a,80,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(84,a,82,a)].
Derived: -at(succ(A),B,s3) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(84,a,83,a)].
85 -train(A) | -go(B,A) | switch(B,s1) != s4 | -at(B,A,s1) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
Derived: -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(85,a,74,a)].
Derived: -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(85,a,81,a)].
Derived: -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(85,a,84,a)].
86 -train(A) | -go(B,A) | switch(B,s2) != s4 | -at(B,A,s2) | at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
Derived: -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(86,a,74,a)].
Derived: -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(86,a,81,a)].
Derived: -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(86,a,84,a)].
87 train(A) | -at(succ(B),A,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
Derived: -at(succ(A),B,s4) | go(f1(C,B),B).  [resolve(87,a,76,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(87,a,77,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(87,a,78,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(87,a,79,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(87,a,80,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(87,a,82,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(87,a,83,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(87,a,85,a)].
Derived: -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(87,a,86,a)].
88 -train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
89 train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
Derived: -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(89,a,76,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(89,a,77,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(89,a,78,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(89,a,79,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(89,a,80,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(89,a,82,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(89,a,83,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(89,a,85,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(89,a,86,a)].
90 -train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(90,a,74,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(90,a,81,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3).  [resolve(90,a,84,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4).  [resolve(90,a,87,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(90,a,89,a)].
91 train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
Derived: -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(91,a,76,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(91,a,77,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(91,a,78,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(91,a,79,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(91,a,80,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(91,a,82,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(91,a,83,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(91,a,85,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(91,a,86,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(91,a,90,a)].

Eliminating go/2
92 -at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
93 go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
94 go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
95 go(A,B) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
96 go(A,B) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
97 go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
98 go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
99 at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(19)].
100 -at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(100,c,93,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(100,c,94,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s3).  [resolve(100,c,95,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s4).  [resolve(100,c,96,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(100,c,97,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(100,c,98,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(100,c,99,c)].
101 at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(20)].
102 -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(74,a,76,a)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(102,b,92,c)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(102,b,100,c)].
103 -at(succ(A),B,out2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(74,a,77,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(103,b,94,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(103,b,95,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(103,b,96,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(103,b,97,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(103,b,98,a)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(103,b,99,c)].
Derived: -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(103,b,101,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(103,b,102,b)].
104 -at(succ(A),B,out2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(74,a,78,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(104,b,94,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(104,b,95,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(104,b,96,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(104,b,97,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(104,b,98,a)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(104,b,99,c)].
Derived: -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(104,b,101,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(104,b,102,b)].
105 -go(A,B) | switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(79,a,74,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(105,a,93,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(105,a,95,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(105,a,96,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(105,a,97,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(105,a,98,a)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(105,a,99,c)].
Derived: switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(105,a,101,c)].
Derived: switch(f1(A,B),s3) != out1 | -at(f1(A,B),B,s3) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(105,a,102,b)].
106 -go(A,B) | switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(80,a,74,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(106,a,93,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(106,a,95,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(106,a,96,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(106,a,97,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(106,a,98,a)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(106,a,99,c)].
Derived: switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(106,a,101,c)].
Derived: switch(f1(A,B),s4) != out1 | -at(f1(A,B),B,s4) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(106,a,102,b)].
107 -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(81,a,76,a)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(107,b,92,c)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(107,b,100,c)].
108 -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(81,a,77,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(108,b,94,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(108,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(108,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(108,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(108,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(108,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(108,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(108,b,107,b)].
109 -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(81,a,78,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(109,b,94,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(109,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(109,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(109,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(109,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(109,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(109,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(109,b,107,b)].
110 -at(succ(A),B,out1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(81,a,79,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(110,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(110,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(110,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(110,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(110,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(110,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(110,b,107,b)].
111 -at(succ(A),B,out1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(81,a,80,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(111,b,95,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(111,b,96,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(111,b,97,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(111,b,98,a)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(111,b,99,c)].
Derived: -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(111,b,101,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(111,b,107,b)].
112 -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(82,a,74,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(112,a,93,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(112,a,94,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(112,a,96,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(112,a,97,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(112,a,98,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(112,a,99,c)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(112,a,101,c)].
Derived: switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(112,a,102,b)].
113 -go(A,B) | switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(82,a,81,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(113,a,94,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(113,a,96,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(113,a,97,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(113,a,98,a)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(113,a,99,c)].
Derived: switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(113,a,101,c)].
Derived: switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(113,a,107,b)].
114 -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2).  [resolve(83,a,74,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(114,a,93,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(114,a,94,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(114,a,96,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(114,a,97,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(114,a,98,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(114,a,99,c)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(114,a,101,c)].
Derived: switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(114,a,102,b)].
115 -go(A,B) | switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1).  [resolve(83,a,81,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(115,a,94,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(115,a,96,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(115,a,97,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(115,a,98,a)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(115,a,99,c)].
Derived: switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(115,a,101,c)].
Derived: switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(115,a,107,b)].
116 -at(succ(A),B,s3) | go(f1(C,B),B).  [resolve(84,a,76,a)].
Derived: -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(116,b,92,c)].
Derived: -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(116,b,100,c)].
117 -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(84,a,77,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(117,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(117,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(117,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(117,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(117,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(117,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(117,b,116,b)].
118 -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(84,a,78,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(118,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(118,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(118,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(118,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(118,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(118,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(118,b,116,b)].
119 -at(succ(A),B,s3) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(84,a,79,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(119,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(119,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(119,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(119,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(119,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(119,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(119,b,116,b)].
120 -at(succ(A),B,s3) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(84,a,80,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(120,b,95,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(120,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(120,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(120,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(120,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(120,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(120,b,116,b)].
121 -at(succ(A),B,s3) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(84,a,82,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(121,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(121,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(121,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(121,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(121,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(121,b,116,b)].
122 -at(succ(A),B,s3) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(84,a,83,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(122,b,96,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(122,b,97,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(122,b,98,a)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(122,b,99,c)].
Derived: -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(122,b,101,c)].
Derived: -at(succ(A),B,s3) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(122,b,116,b)].
123 -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(85,a,74,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(123,a,93,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(123,a,94,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(123,a,95,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(123,a,97,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(123,a,98,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(123,a,99,c)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(123,a,101,c)].
Derived: switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(123,a,102,b)].
124 -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(85,a,81,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(124,a,94,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(124,a,95,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(124,a,97,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(124,a,98,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(124,a,99,c)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(124,a,101,c)].
Derived: switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(124,a,107,b)].
125 -go(A,B) | switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(85,a,84,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(125,a,95,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(125,a,97,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(125,a,98,a)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(125,a,99,c)].
Derived: switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(125,a,101,c)].
Derived: switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(125,a,116,b)].
126 -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2).  [resolve(86,a,74,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(126,a,93,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(126,a,94,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(126,a,95,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(126,a,97,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(126,a,98,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(126,a,99,c)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(126,a,101,c)].
Derived: switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(126,a,102,b)].
127 -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1).  [resolve(86,a,81,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(127,a,94,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(127,a,95,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(127,a,97,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(127,a,98,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(127,a,99,c)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(127,a,101,c)].
Derived: switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(127,a,107,b)].
128 -go(A,B) | switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3).  [resolve(86,a,84,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(128,a,95,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(128,a,97,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(128,a,98,a)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(128,a,99,c)].
Derived: switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(128,a,101,c)].
Derived: switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(128,a,116,b)].
129 -at(succ(A),B,s4) | go(f1(C,B),B).  [resolve(87,a,76,a)].
Derived: -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(129,b,92,c)].
Derived: -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(129,b,100,c)].
130 -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(87,a,77,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(130,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(130,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(130,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(130,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(130,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(130,b,129,b)].
131 -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(87,a,78,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(131,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(131,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(131,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(131,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(131,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(131,b,129,b)].
132 -at(succ(A),B,s4) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(87,a,79,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(132,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(132,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(132,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(132,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(132,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(132,b,129,b)].
133 -at(succ(A),B,s4) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(87,a,80,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(133,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(133,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(133,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(133,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(133,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(133,b,129,b)].
134 -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(87,a,82,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(134,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(134,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(134,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(134,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(134,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(134,b,129,b)].
135 -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(87,a,83,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(135,b,96,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(135,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(135,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(135,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(135,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(135,b,129,b)].
136 -at(succ(A),B,s4) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(87,a,85,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(136,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(136,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(136,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(136,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(136,b,129,b)].
137 -at(succ(A),B,s4) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(87,a,86,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(137,b,97,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(137,b,98,a)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(137,b,99,c)].
Derived: -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(137,b,101,c)].
Derived: -at(succ(A),B,s4) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(137,b,129,b)].
138 -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(89,a,76,a)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(138,b,92,c)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(138,b,100,c)].
139 -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(89,a,77,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(139,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(139,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(139,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(139,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(139,b,138,b)].
140 -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(89,a,78,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(140,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(140,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(140,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(140,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(140,b,138,b)].
141 -at(succ(A),B,s2) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(89,a,79,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(141,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(141,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(141,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(141,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(141,b,138,b)].
142 -at(succ(A),B,s2) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(89,a,80,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(142,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(142,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(142,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(142,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(142,b,138,b)].
143 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(89,a,82,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(143,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(143,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(143,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(143,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(143,b,138,b)].
144 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(89,a,83,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(144,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(144,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(144,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(144,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(144,b,138,b)].
145 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(89,a,85,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(145,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(145,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(145,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(145,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(145,b,138,b)].
146 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(89,a,86,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(146,b,97,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(146,b,98,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(146,b,99,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(146,b,101,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(146,b,138,b)].
147 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(90,a,74,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(147,a,93,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(147,a,94,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(147,a,95,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(147,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(147,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(147,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(147,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(147,a,102,b)].
148 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(90,a,81,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(148,a,94,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(148,a,95,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(148,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(148,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(148,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(148,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(148,a,107,b)].
149 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3).  [resolve(90,a,84,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(149,a,95,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s4).  [resolve(149,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(149,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(149,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(149,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(149,a,116,b)].
150 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4).  [resolve(90,a,87,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s4).  [resolve(150,a,96,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s2).  [resolve(150,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(150,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(150,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s4) | -at(succ(D),B,s4).  [resolve(150,a,129,b)].
151 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(90,a,89,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(151,a,97,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(151,a,99,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(151,a,101,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(151,a,138,b)].
152 -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(91,a,76,a)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(152,b,92,c)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(152,b,100,c)].
153 -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2).  [resolve(91,a,77,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(153,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(153,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(153,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(153,b,152,b)].
154 -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2).  [resolve(91,a,78,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(154,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(154,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(154,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(154,b,152,b)].
155 -at(succ(A),B,s1) | -go(C,B) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1).  [resolve(91,a,79,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(155,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(155,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(155,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(155,b,152,b)].
156 -at(succ(A),B,s1) | -go(C,B) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1).  [resolve(91,a,80,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(156,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(156,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(156,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(156,b,152,b)].
157 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3).  [resolve(91,a,82,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(157,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(157,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(157,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(157,b,152,b)].
158 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3).  [resolve(91,a,83,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(158,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(158,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(158,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(158,b,152,b)].
159 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4).  [resolve(91,a,85,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(159,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(159,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(159,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(159,b,152,b)].
160 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4).  [resolve(91,a,86,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(160,b,98,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(160,b,99,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(160,b,101,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(160,b,152,b)].
161 -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(91,a,90,a)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(161,b,99,c)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(161,b,101,c)].
Derived: -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(161,b,152,b)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, free, nonconflicting, open, toBeUsed, configuration, available, less, at, wantsToGo, appear ]).
Function symbol precedence:  function_order([ s3, s4, s1, out2, out1, s2, in1, in2, path0, path1, path2, path3, path4, path5, path6, path7, c1, switch, f1, succ, clockOrder, goal, pred, f2, f3, f4, f5 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      162 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
kept:      163 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
kept:      164 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
kept:      165 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
kept:      166 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
kept:      167 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      168 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      169 switch(A,s3) = out2 | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      170 switch(A,s3) = out2 | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      171 at(A,B,s3) | switch(A,s4) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      172 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      173 switch(A,s3) = out1 | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      174 switch(A,s3) = out1 | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      175 at(A,B,s3) | switch(A,s4) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      176 at(A,B,s3) | at(A,B,s4) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      177 switch(A,s1) = s3 | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      178 switch(A,s1) = s3 | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      179 at(A,B,s1) | switch(A,s2) = s3 | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      180 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s3) # label(s3ax1) # label(axiom).  [clausify(9)].
kept:      181 switch(A,s1) = s4 | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      182 switch(A,s1) = s4 | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      183 at(A,B,s1) | switch(A,s2) = s4 | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      184 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,s4) # label(s4ax1) # label(axiom).  [clausify(10)].
kept:      185 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
kept:      186 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(11)].
kept:      187 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
kept:      188 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(12)].
           189 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      190 in2 != in1.  [copy(189),flip(a)].
kept:      191 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      192 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      193 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      194 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      195 in2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      196 in2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      197 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      198 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      199 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      200 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      201 in1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      202 in1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      203 s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      204 s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      205 s2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      206 s2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      207 s2 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
           208 s1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      209 out2 != s1.  [copy(208),flip(a)].
           210 s1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      211 out1 != s1.  [copy(210),flip(a)].
kept:      212 s1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      213 s1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      214 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      215 out2 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
           216 s4 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      217 out2 != s4.  [copy(216),flip(a)].
kept:      218 out1 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      219 out1 != s4 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      220 s4 != s3 # label(nodesExclusivity) # label(axiom).  [clausify(13)].
kept:      221 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(14)].
kept:      222 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(15)].
kept:      223 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(16)].
kept:      224 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(17)].
kept:      225 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(18)].
kept:      226 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
kept:      227 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(19)].
kept:      228 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(19)].
kept:      229 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
kept:      230 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(20)].
kept:      231 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(20)].
kept:      232 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(21)].
kept:      233 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
kept:      234 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(22)].
kept:      235 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
kept:      236 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(23)].
kept:      237 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(24)].
kept:      238 -configuration(A,path0) | switch(A,s3) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
kept:      239 -configuration(A,path0) | switch(A,s1) = s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
kept:      240 configuration(A,path0) | switch(A,s3) != out2 | switch(A,s1) != s3 # label(switchesConfiguration0) # label(axiom).  [clausify(25)].
kept:      241 -configuration(A,path1) | switch(A,s3) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
kept:      242 -configuration(A,path1) | switch(A,s2) = s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
kept:      243 configuration(A,path1) | switch(A,s3) != out2 | switch(A,s2) != s3 # label(switchesConfiguration1) # label(axiom).  [clausify(26)].
kept:      244 -configuration(A,path2) | switch(A,s4) = out2 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
kept:      245 -configuration(A,path2) | switch(A,s1) = s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
kept:      246 configuration(A,path2) | switch(A,s4) != out2 | switch(A,s1) != s4 # label(switchesConfiguration2) # label(axiom).  [clausify(27)].
kept:      247 -configuration(A,path3) | switch(A,s4) = out2 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
kept:      248 -configuration(A,path3) | switch(A,s2) = s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
kept:      249 configuration(A,path3) | switch(A,s4) != out2 | switch(A,s2) != s4 # label(switchesConfiguration3) # label(axiom).  [clausify(28)].
kept:      250 -configuration(A,path4) | switch(A,s3) = out1 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
kept:      251 -configuration(A,path4) | switch(A,s1) = s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
kept:      252 configuration(A,path4) | switch(A,s3) != out1 | switch(A,s1) != s3 # label(switchesConfiguration4) # label(axiom).  [clausify(29)].
kept:      253 -configuration(A,path5) | switch(A,s3) = out1 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
kept:      254 -configuration(A,path5) | switch(A,s2) = s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
kept:      255 configuration(A,path5) | switch(A,s3) != out1 | switch(A,s2) != s3 # label(switchesConfiguration5) # label(axiom).  [clausify(30)].
kept:      256 -configuration(A,path6) | switch(A,s4) = out1 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
kept:      257 -configuration(A,path6) | switch(A,s1) = s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
kept:      258 configuration(A,path6) | switch(A,s4) != out1 | switch(A,s1) != s4 # label(switchesConfiguration6) # label(axiom).  [clausify(31)].
kept:      259 -configuration(A,path7) | switch(A,s4) = out1 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
kept:      260 -configuration(A,path7) | switch(A,s2) = s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
kept:      261 configuration(A,path7) | switch(A,s4) != out1 | switch(A,s2) != s4 # label(switchesConfiguration7) # label(axiom).  [clausify(32)].
kept:      262 -free(A,path0) | -at(A,B,s3) # label(freeRoute0) # label(axiom).  [clausify(33)].
kept:      263 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
kept:      264 free(A,path0) | at(A,B,s3) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(33)].
kept:      265 -free(A,path1) | -at(A,B,s3) # label(freeRoute1) # label(axiom).  [clausify(34)].
kept:      266 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
kept:      267 free(A,path1) | at(A,B,s3) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(34)].
kept:      268 -free(A,path2) | -at(A,B,s4) # label(freeRoute2) # label(axiom).  [clausify(35)].
kept:      269 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
kept:      270 free(A,path2) | at(A,B,s4) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(35)].
kept:      271 -free(A,path3) | -at(A,B,s4) # label(freeRoute3) # label(axiom).  [clausify(36)].
kept:      272 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
kept:      273 free(A,path3) | at(A,B,s4) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(36)].
kept:      274 -free(A,path4) | -at(A,B,s3) # label(freeRoute4) # label(axiom).  [clausify(37)].
kept:      275 -free(A,path4) | -at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
kept:      276 free(A,path4) | at(A,B,s3) | at(A,B,s1) # label(freeRoute4) # label(axiom).  [clausify(37)].
kept:      277 -free(A,path5) | -at(A,B,s3) # label(freeRoute5) # label(axiom).  [clausify(38)].
kept:      278 -free(A,path5) | -at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
kept:      279 free(A,path5) | at(A,B,s3) | at(A,B,s2) # label(freeRoute5) # label(axiom).  [clausify(38)].
kept:      280 -free(A,path6) | -at(A,B,s4) # label(freeRoute6) # label(axiom).  [clausify(39)].
kept:      281 -free(A,path6) | -at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
kept:      282 free(A,path6) | at(A,B,s4) | at(A,B,s1) # label(freeRoute6) # label(axiom).  [clausify(39)].
kept:      283 -free(A,path7) | -at(A,B,s4) # label(freeRoute7) # label(axiom).  [clausify(40)].
kept:      284 -free(A,path7) | -at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
kept:      285 free(A,path7) | at(A,B,s4) | at(A,B,s2) # label(freeRoute7) # label(axiom).  [clausify(40)].
kept:      286 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      287 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      288 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      289 -nonconflicting(A,path0) | free(A,path3) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      290 -nonconflicting(A,path0) | free(A,path4) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      291 -nonconflicting(A,path0) | free(A,path5) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      292 -nonconflicting(A,path0) | free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      293 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting0) # label(axiom).  [clausify(41)].
kept:      294 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      295 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      296 -nonconflicting(A,path1) | free(A,path2) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      297 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      298 -nonconflicting(A,path1) | free(A,path4) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      299 -nonconflicting(A,path1) | free(A,path5) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      300 -nonconflicting(A,path1) | free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      301 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting1) # label(axiom).  [clausify(42)].
kept:      302 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      303 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      304 -nonconflicting(A,path2) | free(A,path1) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      305 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      306 -nonconflicting(A,path2) | free(A,path4) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      307 -nonconflicting(A,path2) | free(A,path6) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      308 -nonconflicting(A,path2) | free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      309 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting2) # label(axiom).  [clausify(43)].
kept:      310 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      311 -nonconflicting(A,path3) | free(A,path0) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      312 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      313 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      314 -nonconflicting(A,path3) | free(A,path5) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      315 -nonconflicting(A,path3) | free(A,path6) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      316 -nonconflicting(A,path3) | free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      317 nonconflicting(A,path3) | -free(A,path3) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting3) # label(axiom).  [clausify(44)].
kept:      318 -nonconflicting(A,path4) | free(A,path4) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      319 -nonconflicting(A,path4) | free(A,path0) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      320 -nonconflicting(A,path4) | free(A,path1) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      321 -nonconflicting(A,path4) | free(A,path2) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      322 -nonconflicting(A,path4) | free(A,path5) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      323 -nonconflicting(A,path4) | free(A,path6) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      324 -nonconflicting(A,path4) | free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      325 nonconflicting(A,path4) | -free(A,path4) | -free(A,path0) | -free(A,path1) | -free(A,path2) | -free(A,path5) | -free(A,path6) | -free(A,path7) # label(nonconflicting4) # label(axiom).  [clausify(45)].
kept:      326 -nonconflicting(A,path5) | free(A,path5) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      327 -nonconflicting(A,path5) | free(A,path0) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      328 -nonconflicting(A,path5) | free(A,path1) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      329 -nonconflicting(A,path5) | free(A,path3) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      330 -nonconflicting(A,path5) | free(A,path4) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      331 -nonconflicting(A,path5) | free(A,path6) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      332 -nonconflicting(A,path5) | free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      333 nonconflicting(A,path5) | -free(A,path5) | -free(A,path0) | -free(A,path1) | -free(A,path3) | -free(A,path4) | -free(A,path6) | -free(A,path7) # label(nonconflicting5) # label(axiom).  [clausify(46)].
kept:      334 -nonconflicting(A,path6) | free(A,path6) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      335 -nonconflicting(A,path6) | free(A,path0) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      336 -nonconflicting(A,path6) | free(A,path2) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      337 -nonconflicting(A,path6) | free(A,path3) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      338 -nonconflicting(A,path6) | free(A,path4) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      339 -nonconflicting(A,path6) | free(A,path5) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      340 -nonconflicting(A,path6) | free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      341 nonconflicting(A,path6) | -free(A,path6) | -free(A,path0) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path7) # label(nonconflicting6) # label(axiom).  [clausify(47)].
kept:      342 -nonconflicting(A,path7) | free(A,path7) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      343 -nonconflicting(A,path7) | free(A,path1) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      344 -nonconflicting(A,path7) | free(A,path2) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      345 -nonconflicting(A,path7) | free(A,path3) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      346 -nonconflicting(A,path7) | free(A,path4) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      347 -nonconflicting(A,path7) | free(A,path5) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      348 -nonconflicting(A,path7) | free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      349 nonconflicting(A,path7) | -free(A,path7) | -free(A,path1) | -free(A,path2) | -free(A,path3) | -free(A,path4) | -free(A,path5) | -free(A,path6) # label(nonconflicting7) # label(axiom).  [clausify(48)].
kept:      350 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      351 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      352 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      353 path4 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      354 path5 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      355 path6 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      356 path7 != path0 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      357 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      358 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      359 path4 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      360 path5 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      361 path6 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      362 path7 != path1 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      363 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      364 path4 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      365 path5 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      366 path6 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      367 path7 != path2 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      368 path4 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      369 path5 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      370 path6 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      371 path7 != path3 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      372 path5 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      373 path6 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      374 path7 != path4 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      375 path6 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      376 path7 != path5 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      377 path7 != path6 # label(routesExclusivity) # label(axiom).  [clausify(49)].
kept:      378 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
kept:      379 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
kept:      380 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(50)].
kept:      381 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
kept:      382 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
kept:      383 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(51)].
kept:      384 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
kept:      385 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
kept:      386 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(52)].
kept:      387 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
kept:      388 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
kept:      389 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(53)].
kept:      390 -available(A,path4) | nonconflicting(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
kept:      391 -available(A,path4) | configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
kept:      392 available(A,path4) | -nonconflicting(A,path4) | -configuration(A,path4) # label(availableRoute4) # label(axiom).  [clausify(54)].
kept:      393 -available(A,path5) | nonconflicting(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
kept:      394 -available(A,path5) | configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
kept:      395 available(A,path5) | -nonconflicting(A,path5) | -configuration(A,path5) # label(availableRoute5) # label(axiom).  [clausify(55)].
kept:      396 -available(A,path6) | nonconflicting(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
kept:      397 -available(A,path6) | configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
kept:      398 available(A,path6) | -nonconflicting(A,path6) | -configuration(A,path6) # label(availableRoute6) # label(axiom).  [clausify(56)].
kept:      399 -available(A,path7) | nonconflicting(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
kept:      400 -available(A,path7) | configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
kept:      401 available(A,path7) | -nonconflicting(A,path7) | -configuration(A,path7) # label(availableRoute7) # label(axiom).  [clausify(57)].
kept:      402 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
kept:      403 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
kept:      404 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(58)].
kept:      405 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
kept:      406 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
kept:      407 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(59)].
kept:      408 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
kept:      409 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
kept:      410 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(60)].
kept:      411 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
kept:      412 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
kept:      413 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(61)].
kept:      414 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      415 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      416 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      417 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(62)].
kept:      418 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      419 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      420 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      421 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(63)].
kept:      422 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      423 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      424 -toBeUsed(A,path2) | wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      425 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed2) # label(axiom).  [clausify(64)].
kept:      426 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      427 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      428 -toBeUsed(A,path3) | wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      429 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed3) # label(axiom).  [clausify(65)].
kept:      430 -toBeUsed(A,path4) | available(A,path4) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      431 -toBeUsed(A,path4) | clockOrder(A) = in1 # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      432 -toBeUsed(A,path4) | wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      433 toBeUsed(A,path4) | -available(A,path4) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed4) # label(axiom).  [clausify(66)].
kept:      434 -toBeUsed(A,path5) | available(A,path5) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      435 -toBeUsed(A,path5) | clockOrder(A) = in2 # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      436 -toBeUsed(A,path5) | wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      437 toBeUsed(A,path5) | -available(A,path5) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed5) # label(axiom).  [clausify(67)].
kept:      438 -toBeUsed(A,path6) | available(A,path6) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      439 -toBeUsed(A,path6) | clockOrder(A) = in1 # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      440 -toBeUsed(A,path6) | wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      441 toBeUsed(A,path6) | -available(A,path6) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed6) # label(axiom).  [clausify(68)].
kept:      442 -toBeUsed(A,path7) | available(A,path7) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      443 -toBeUsed(A,path7) | clockOrder(A) = in2 # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      444 -toBeUsed(A,path7) | wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      445 toBeUsed(A,path7) | -available(A,path7) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed7) # label(axiom).  [clausify(69)].
kept:      446 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      447 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      448 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      449 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(70)].
kept:      450 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) | toBeUsed(A,path5) | toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      451 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      452 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      453 open(succ(A),in2) | -toBeUsed(A,path5) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      454 open(succ(A),in2) | -toBeUsed(A,path7) # label(openGatein2) # label(axiom).  [clausify(71)].
kept:      455 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) | toBeUsed(A,path4) | toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      456 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      457 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      458 open(succ(A),in1) | -toBeUsed(A,path4) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      459 open(succ(A),in1) | -toBeUsed(A,path6) # label(openGatein1) # label(axiom).  [clausify(72)].
kept:      460 at(A,c1,in2) # label(willOpenin2) # label(conjecture).  [deny(73)].
kept:      461 less(A,B) # label(willOpenin2) # label(conjecture).  [deny(73)].
kept:      462 -open(A,in2) # label(willOpenin2) # label(conjecture).  [deny(73)].
kept:      463 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(100,c,93,a)].
kept:      464 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(100,c,94,a)].
kept:      465 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s3).  [resolve(100,c,95,a)].
kept:      466 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s4).  [resolve(100,c,96,a)].
kept:      467 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(100,c,97,a)].
kept:      468 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(100,c,98,a)].
kept:      469 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(100,c,99,c)].
kept:      470 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(102,b,100,c)].
kept:      471 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(103,b,94,a)].
kept:      472 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(103,b,95,a)].
kept:      473 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(103,b,96,a)].
kept:      474 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(103,b,97,a)].
kept:      475 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(103,b,98,a)].
kept:      476 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(103,b,99,c)].
kept:      477 -at(succ(A),B,out2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(103,b,101,c)].
kept:      478 -at(succ(A),B,out2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(103,b,102,b)].
kept:      479 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(104,b,94,a)].
kept:      480 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(104,b,95,a)].
kept:      481 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(104,b,96,a)].
kept:      482 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(104,b,97,a)].
kept:      483 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(104,b,98,a)].
kept:      484 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(104,b,99,c)].
kept:      485 -at(succ(A),B,out2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(104,b,101,c)].
kept:      486 -at(succ(A),B,out2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(104,b,102,b)].
kept:      487 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(105,a,93,a)].
kept:      488 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(105,a,95,a)].
kept:      489 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(105,a,96,a)].
kept:      490 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(105,a,97,a)].
kept:      491 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(105,a,98,a)].
kept:      492 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(105,a,99,c)].
kept:      493 switch(A,s3) != out1 | -at(A,B,s3) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(105,a,101,c)].
kept:      494 switch(f1(A,B),s3) != out1 | -at(f1(A,B),B,s3) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(105,a,102,b)].
kept:      495 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(106,a,93,a)].
kept:      496 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(106,a,95,a)].
kept:      497 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(106,a,96,a)].
kept:      498 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(106,a,97,a)].
kept:      499 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(106,a,98,a)].
kept:      500 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(106,a,99,c)].
kept:      501 switch(A,s4) != out1 | -at(A,B,s4) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(106,a,101,c)].
kept:      502 switch(f1(A,B),s4) != out1 | -at(f1(A,B),B,s4) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(106,a,102,b)].
kept:      503 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(107,b,100,c)].
kept:      504 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(108,b,94,a)].
kept:      505 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(108,b,95,a)].
kept:      506 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(108,b,96,a)].
kept:      507 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(108,b,97,a)].
kept:      508 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(108,b,98,a)].
kept:      509 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(108,b,99,c)].
kept:      510 -at(succ(A),B,out1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(108,b,101,c)].
kept:      511 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(108,b,107,b)].
kept:      512 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(109,b,94,a)].
kept:      513 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(109,b,95,a)].
kept:      514 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(109,b,96,a)].
kept:      515 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(109,b,97,a)].
kept:      516 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(109,b,98,a)].
kept:      517 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(109,b,99,c)].
kept:      518 -at(succ(A),B,out1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(109,b,101,c)].
kept:      519 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(109,b,107,b)].
kept:      520 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(110,b,95,a)].
kept:      521 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(110,b,96,a)].
kept:      522 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(110,b,97,a)].
kept:      523 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(110,b,98,a)].
kept:      524 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(110,b,99,c)].
kept:      525 -at(succ(A),B,out1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(110,b,101,c)].
kept:      526 -at(succ(A),B,out1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(110,b,107,b)].
kept:      527 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(111,b,95,a)].
kept:      528 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(111,b,96,a)].
kept:      529 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(111,b,97,a)].
kept:      530 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(111,b,98,a)].
kept:      531 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(111,b,99,c)].
kept:      532 -at(succ(A),B,out1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(111,b,101,c)].
kept:      533 -at(succ(A),B,out1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(111,b,107,b)].
kept:      534 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(112,a,93,a)].
kept:      535 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(112,a,94,a)].
kept:      536 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(112,a,96,a)].
kept:      537 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(112,a,97,a)].
kept:      538 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(112,a,98,a)].
kept:      539 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(112,a,99,c)].
kept:      540 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(112,a,101,c)].
kept:      541 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(112,a,102,b)].
kept:      542 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(113,a,94,a)].
kept:      543 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(113,a,96,a)].
kept:      544 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(113,a,97,a)].
kept:      545 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(113,a,98,a)].
kept:      546 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(113,a,99,c)].
kept:      547 switch(A,s1) != s3 | -at(A,B,s1) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(113,a,101,c)].
kept:      548 switch(f1(A,B),s1) != s3 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(113,a,107,b)].
kept:      549 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(114,a,93,a)].
kept:      550 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(114,a,94,a)].
kept:      551 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(114,a,96,a)].
kept:      552 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(114,a,97,a)].
kept:      553 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(114,a,98,a)].
kept:      554 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(114,a,99,c)].
kept:      555 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(114,a,101,c)].
kept:      556 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(114,a,102,b)].
kept:      557 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(115,a,94,a)].
kept:      558 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(115,a,96,a)].
kept:      559 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(115,a,97,a)].
kept:      560 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(115,a,98,a)].
kept:      561 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(115,a,99,c)].
kept:      562 switch(A,s2) != s3 | -at(A,B,s2) | at(succ(A),B,s3) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(115,a,101,c)].
kept:      563 switch(f1(A,B),s2) != s3 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s3) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(115,a,107,b)].
kept:      564 -at(succ(A),B,s3) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(116,b,100,c)].
kept:      565 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(117,b,95,a)].
kept:      566 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(117,b,96,a)].
kept:      567 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(117,b,97,a)].
kept:      568 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(117,b,98,a)].
kept:      569 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(117,b,99,c)].
kept:      570 -at(succ(A),B,s3) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(117,b,101,c)].
kept:      571 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(117,b,116,b)].
kept:      572 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s3).  [resolve(118,b,95,a)].
kept:      573 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(118,b,96,a)].
kept:      574 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(118,b,97,a)].
kept:      575 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(118,b,98,a)].
kept:      576 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(118,b,99,c)].
kept:      577 -at(succ(A),B,s3) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(118,b,101,c)].
kept:      578 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s3).  [resolve(118,b,116,b)].
kept:      579 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(119,b,95,a)].
kept:      580 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(119,b,96,a)].
kept:      581 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(119,b,97,a)].
kept:      582 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(119,b,98,a)].
kept:      583 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(119,b,99,c)].
kept:      584 -at(succ(A),B,s3) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(119,b,101,c)].
kept:      585 -at(succ(A),B,s3) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(119,b,116,b)].
kept:      586 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s3).  [resolve(120,b,95,a)].
kept:      587 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(120,b,96,a)].
kept:      588 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(120,b,97,a)].
kept:      589 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(120,b,98,a)].
kept:      590 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(120,b,99,c)].
kept:      591 -at(succ(A),B,s3) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(120,b,101,c)].
kept:      592 -at(succ(A),B,s3) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s3).  [resolve(120,b,116,b)].
kept:      593 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(121,b,96,a)].
kept:      594 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(121,b,97,a)].
kept:      595 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(121,b,98,a)].
kept:      596 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(121,b,99,c)].
kept:      597 -at(succ(A),B,s3) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(121,b,101,c)].
kept:      598 -at(succ(A),B,s3) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(121,b,116,b)].
kept:      599 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(122,b,96,a)].
kept:      600 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(122,b,97,a)].
kept:      601 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(122,b,98,a)].
kept:      602 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(122,b,99,c)].
kept:      603 -at(succ(A),B,s3) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(122,b,101,c)].
kept:      604 -at(succ(A),B,s3) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s3).  [resolve(122,b,116,b)].
kept:      605 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(123,a,93,a)].
kept:      606 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(123,a,94,a)].
kept:      607 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(123,a,95,a)].
kept:      608 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(123,a,97,a)].
kept:      609 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(123,a,98,a)].
kept:      610 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(123,a,99,c)].
kept:      611 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(123,a,101,c)].
kept:      612 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(123,a,102,b)].
kept:      613 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(124,a,94,a)].
kept:      614 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(124,a,95,a)].
kept:      615 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(124,a,97,a)].
kept:      616 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(124,a,98,a)].
kept:      617 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(124,a,99,c)].
kept:      618 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(124,a,101,c)].
kept:      619 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(124,a,107,b)].
kept:      620 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(125,a,95,a)].
kept:      621 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(125,a,97,a)].
kept:      622 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(125,a,98,a)].
kept:      623 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(125,a,99,c)].
kept:      624 switch(A,s1) != s4 | -at(A,B,s1) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(125,a,101,c)].
kept:      625 switch(f1(A,B),s1) != s4 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(125,a,116,b)].
kept:      626 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(126,a,93,a)].
kept:      627 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(126,a,94,a)].
kept:      628 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(126,a,95,a)].
kept:      629 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(126,a,97,a)].
kept:      630 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(126,a,98,a)].
kept:      631 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(126,a,99,c)].
kept:      632 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(126,a,101,c)].
kept:      633 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(126,a,102,b)].
kept:      634 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(127,a,94,a)].
kept:      635 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(127,a,95,a)].
kept:      636 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(127,a,97,a)].
kept:      637 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(127,a,98,a)].
kept:      638 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(127,a,99,c)].
kept:      639 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(127,a,101,c)].
kept:      640 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(127,a,107,b)].
kept:      641 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(128,a,95,a)].
kept:      642 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(128,a,97,a)].
kept:      643 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | -at(succ(A),B,s1).  [resolve(128,a,98,a)].
kept:      644 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(128,a,99,c)].
kept:      645 switch(A,s2) != s4 | -at(A,B,s2) | at(succ(A),B,s4) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(128,a,101,c)].
kept:      646 switch(f1(A,B),s2) != s4 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,s4) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(128,a,116,b)].
kept:      647 -at(succ(A),B,s4) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(129,b,100,c)].
kept:      648 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(130,b,96,a)].
kept:      649 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(130,b,97,a)].
kept:      650 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(130,b,98,a)].
kept:      651 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(130,b,99,c)].
kept:      652 -at(succ(A),B,s4) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(130,b,101,c)].
kept:      653 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(130,b,129,b)].
kept:      654 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s4).  [resolve(131,b,96,a)].
kept:      655 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(131,b,97,a)].
kept:      656 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(131,b,98,a)].
kept:      657 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(131,b,99,c)].
kept:      658 -at(succ(A),B,s4) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(131,b,101,c)].
kept:      659 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s4).  [resolve(131,b,129,b)].
kept:      660 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(132,b,96,a)].
kept:      661 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(132,b,97,a)].
kept:      662 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(132,b,98,a)].
kept:      663 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(132,b,99,c)].
kept:      664 -at(succ(A),B,s4) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(132,b,101,c)].
kept:      665 -at(succ(A),B,s4) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(132,b,129,b)].
kept:      666 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s4).  [resolve(133,b,96,a)].
kept:      667 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(133,b,97,a)].
kept:      668 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(133,b,98,a)].
kept:      669 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(133,b,99,c)].
kept:      670 -at(succ(A),B,s4) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(133,b,101,c)].
kept:      671 -at(succ(A),B,s4) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s4).  [resolve(133,b,129,b)].
kept:      672 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(134,b,96,a)].
kept:      673 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(134,b,97,a)].
kept:      674 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(134,b,98,a)].
kept:      675 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(134,b,99,c)].
kept:      676 -at(succ(A),B,s4) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(134,b,101,c)].
kept:      677 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(134,b,129,b)].
kept:      678 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s4).  [resolve(135,b,96,a)].
kept:      679 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(135,b,97,a)].
kept:      680 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(135,b,98,a)].
kept:      681 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(135,b,99,c)].
kept:      682 -at(succ(A),B,s4) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(135,b,101,c)].
kept:      683 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s4).  [resolve(135,b,129,b)].
kept:      684 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(136,b,97,a)].
kept:      685 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(136,b,98,a)].
kept:      686 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(136,b,99,c)].
kept:      687 -at(succ(A),B,s4) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(136,b,101,c)].
kept:      688 -at(succ(A),B,s4) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(136,b,129,b)].
kept:      689 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(137,b,97,a)].
kept:      690 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(137,b,98,a)].
kept:      691 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(137,b,99,c)].
kept:      692 -at(succ(A),B,s4) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(137,b,101,c)].
kept:      693 -at(succ(A),B,s4) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s4).  [resolve(137,b,129,b)].
kept:      694 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(138,b,100,c)].
kept:      695 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(139,b,97,a)].
kept:      696 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(139,b,98,a)].
kept:      697 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(139,b,99,c)].
kept:      698 -at(succ(A),B,s2) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(139,b,101,c)].
kept:      699 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(139,b,138,b)].
kept:      700 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(140,b,97,a)].
kept:      701 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(140,b,98,a)].
kept:      702 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(140,b,99,c)].
kept:      703 -at(succ(A),B,s2) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(140,b,101,c)].
kept:      704 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(140,b,138,b)].
kept:      705 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(141,b,97,a)].
kept:      706 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(141,b,98,a)].
kept:      707 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(141,b,99,c)].
kept:      708 -at(succ(A),B,s2) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(141,b,101,c)].
kept:      709 -at(succ(A),B,s2) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(141,b,138,b)].
kept:      710 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(142,b,97,a)].
kept:      711 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(142,b,98,a)].
kept:      712 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(142,b,99,c)].
kept:      713 -at(succ(A),B,s2) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(142,b,101,c)].
kept:      714 -at(succ(A),B,s2) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(142,b,138,b)].
kept:      715 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(143,b,97,a)].
kept:      716 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(143,b,98,a)].
kept:      717 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(143,b,99,c)].
kept:      718 -at(succ(A),B,s2) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(143,b,101,c)].
kept:      719 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(143,b,138,b)].
kept:      720 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s2).  [resolve(144,b,97,a)].
kept:      721 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(144,b,98,a)].
kept:      722 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(144,b,99,c)].
kept:      723 -at(succ(A),B,s2) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(144,b,101,c)].
kept:      724 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s2).  [resolve(144,b,138,b)].
kept:      725 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(145,b,97,a)].
kept:      726 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(145,b,98,a)].
kept:      727 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(145,b,99,c)].
kept:      728 -at(succ(A),B,s2) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(145,b,101,c)].
kept:      729 -at(succ(A),B,s2) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(145,b,138,b)].
kept:      730 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s2).  [resolve(146,b,97,a)].
kept:      731 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(146,b,98,a)].
kept:      732 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(146,b,99,c)].
kept:      733 -at(succ(A),B,s2) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(146,b,101,c)].
kept:      734 -at(succ(A),B,s2) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s2).  [resolve(146,b,138,b)].
kept:      735 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(147,a,93,a)].
kept:      736 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(147,a,94,a)].
kept:      737 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s3).  [resolve(147,a,95,a)].
kept:      738 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s4).  [resolve(147,a,96,a)].
kept:      739 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(147,a,97,a)].
kept:      740 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(147,a,99,c)].
           741 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(147,a,101,c)].
kept:      742 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(741),merge(f)].
kept:      743 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(147,a,102,b)].
kept:      744 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(148,a,94,a)].
kept:      745 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s3).  [resolve(148,a,95,a)].
kept:      746 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s4).  [resolve(148,a,96,a)].
kept:      747 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(148,a,97,a)].
kept:      748 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(148,a,99,c)].
           749 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(148,a,101,c)].
kept:      750 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(749),merge(f)].
kept:      751 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(148,a,107,b)].
kept:      752 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s3).  [resolve(149,a,95,a)].
kept:      753 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s4).  [resolve(149,a,96,a)].
kept:      754 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | -at(succ(A),B,s2).  [resolve(149,a,97,a)].
kept:      755 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(149,a,99,c)].
           756 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(149,a,101,c)].
kept:      757 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s3) | at(succ(A),B,in1).  [copy(756),merge(f)].
kept:      758 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s3) | -at(succ(D),B,s3).  [resolve(149,a,116,b)].
kept:      759 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s4).  [resolve(150,a,96,a)].
kept:      760 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | -at(succ(A),B,s2).  [resolve(150,a,97,a)].
kept:      761 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(150,a,99,c)].
           762 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(150,a,101,c)].
kept:      763 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s4) | at(succ(A),B,in1).  [copy(762),merge(f)].
kept:      764 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s4) | -at(succ(D),B,s4).  [resolve(150,a,129,b)].
kept:      765 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(151,a,97,a)].
kept:      766 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(151,a,99,c)].
           767 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(151,a,101,c)].
kept:      768 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(767),merge(f)].
kept:      769 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(151,a,138,b)].
kept:      770 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(152,b,100,c)].
kept:      771 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(153,b,98,a)].
kept:      772 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(153,b,99,c)].
kept:      773 -at(succ(A),B,s1) | switch(C,s3) != out2 | -at(C,B,s3) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(153,b,101,c)].
kept:      774 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out2 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(153,b,152,b)].
kept:      775 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(154,b,98,a)].
kept:      776 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(154,b,99,c)].
kept:      777 -at(succ(A),B,s1) | switch(C,s4) != out2 | -at(C,B,s4) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(154,b,101,c)].
kept:      778 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out2 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(154,b,152,b)].
kept:      779 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(155,b,98,a)].
kept:      780 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(155,b,99,c)].
kept:      781 -at(succ(A),B,s1) | switch(C,s3) != out1 | -at(C,B,s3) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(155,b,101,c)].
kept:      782 -at(succ(A),B,s1) | switch(f1(C,B),s3) != out1 | -at(f1(C,B),B,s3) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(155,b,152,b)].
kept:      783 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(156,b,98,a)].
kept:      784 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(156,b,99,c)].
kept:      785 -at(succ(A),B,s1) | switch(C,s4) != out1 | -at(C,B,s4) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(156,b,101,c)].
kept:      786 -at(succ(A),B,s1) | switch(f1(C,B),s4) != out1 | -at(f1(C,B),B,s4) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(156,b,152,b)].
kept:      787 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(157,b,98,a)].
kept:      788 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(157,b,99,c)].
kept:      789 -at(succ(A),B,s1) | switch(C,s1) != s3 | -at(C,B,s1) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(157,b,101,c)].
kept:      790 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s3 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(157,b,152,b)].
kept:      791 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | -at(succ(C),B,s1).  [resolve(158,b,98,a)].
kept:      792 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(158,b,99,c)].
kept:      793 -at(succ(A),B,s1) | switch(C,s2) != s3 | -at(C,B,s2) | at(succ(C),B,s3) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(158,b,101,c)].
kept:      794 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s3 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s3) | -at(succ(D),B,s1).  [resolve(158,b,152,b)].
kept:      795 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(159,b,98,a)].
kept:      796 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(159,b,99,c)].
kept:      797 -at(succ(A),B,s1) | switch(C,s1) != s4 | -at(C,B,s1) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(159,b,101,c)].
kept:      798 -at(succ(A),B,s1) | switch(f1(C,B),s1) != s4 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(159,b,152,b)].
kept:      799 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | -at(succ(C),B,s1).  [resolve(160,b,98,a)].
kept:      800 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(160,b,99,c)].
kept:      801 -at(succ(A),B,s1) | switch(C,s2) != s4 | -at(C,B,s2) | at(succ(C),B,s4) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(160,b,101,c)].
kept:      802 -at(succ(A),B,s1) | switch(f1(C,B),s2) != s4 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,s4) | -at(succ(D),B,s1).  [resolve(160,b,152,b)].
kept:      803 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(161,b,99,c)].
           804 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(161,b,101,c)].
kept:      805 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(804),merge(f)].
kept:      806 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(161,b,152,b)].
kept:      807 A = B.  [back_unit_del(162),unit_del(a,461),unit_del(b,461)].

============================== PROOF =================================

% Proof 1 at 0.10 (+ 0.01) seconds.
% Length of proof is 8.
% Level of proof is 3.
% Maximum clause weight is 9.000.
% Given clauses 0.

1 (all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom) # label(non_clause).  [assumption].
49 path0 != path1 & path0 != path2 & path0 != path3 & path0 != path4 & path0 != path5 & path0 != path6 & path0 != path7 & path1 != path2 & path1 != path3 & path1 != path4 & path1 != path5 & path1 != path6 & path1 != path7 & path2 != path3 & path2 != path4 & path2 != path5 & path2 != path6 & path2 != path7 & path3 != path4 & path3 != path5 & path3 != path6 & path3 != path7 & path4 != path5 & path4 != path6 & path4 != path7 & path5 != path6 & path5 != path7 & path6 != path7 # label(routesExclusivity) # label(axiom) # label(non_clause).  [assumption].
73 (exists X exists Y (at(X,T,in2) & less(X,Y) -> open(Y,in2))) # label(willOpenin2) # label(conjecture) # label(non_clause) # label(goal).  [goal].
162 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
377 path7 != path6 # label(routesExclusivity) # label(axiom).  [clausify(49)].
461 less(A,B) # label(willOpenin2) # label(conjecture).  [deny(73)].
807 A = B.  [back_unit_del(162),unit_del(a,461),unit_del(b,461)].
808 $F.  [resolve(807,a,377,a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=648. Kept=636. proofs=1.
Usable=0. Sos=290. Demods=2. Limbo=340, Disabled=734. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=12. Back_subsumed=4.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=2 (0 lex), Back_demodulated=0. Back_unit_deleted=1.
Demod_attempts=13960. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=150. Nonunit_bsub_feature_tests=1522.
Megabytes=2.81.
User_CPU=0.10, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 25569 exit (max_proofs) Fri Jun  6 21:00:58 2014
