============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 16989 was started by zikesjan on Jan-MacBook-Pro-5.local,
Sun Jun  1 15:47:17 2014
The command was "/Users/zikesjan/Downloads/LADR-2009-11A/bin/prover9".
============================== end of head ===========================

============================== INPUT =================================
set(prolog_style_variables).

formulas(assumptions).
(all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom).
(all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom).
(all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom).
(all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom).
(all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom).
(all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = out2 & at(X,T,s1) | switch(X,s2) = out2 & at(X,T,s2)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = out1 & at(X,T,s1) | switch(X,s2) = out1 & at(X,T,s2)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom).
in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & s2 != s1 & s2 != out2 & s2 != out1 & s1 != out2 & s1 != out1 & out2 != out1 # label(nodesExclusivity) # label(axiom).
(all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom).
(all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom).
(all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom).
(all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom).
(all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom).
(all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom).
(all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom).
(all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom).
(all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom).
(all X (configuration(X,path0) <-> switch(X,s1) = out2)) # label(switchesConfiguration0) # label(axiom).
(all X (configuration(X,path1) <-> switch(X,s2) = out2)) # label(switchesConfiguration1) # label(axiom).
(all X (configuration(X,path2) <-> switch(X,s1) = out1)) # label(switchesConfiguration2) # label(axiom).
(all X (configuration(X,path3) <-> switch(X,s2) = out1)) # label(switchesConfiguration3) # label(axiom).
(all X all T (free(X,path0) <-> -at(X,T,s1))) # label(freeRoute0) # label(axiom).
(all X all T (free(X,path1) <-> -at(X,T,s2))) # label(freeRoute1) # label(axiom).
(all X all T (free(X,path2) <-> -at(X,T,s1))) # label(freeRoute2) # label(axiom).
(all X all T (free(X,path3) <-> -at(X,T,s2))) # label(freeRoute3) # label(axiom).
(all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2))) # label(nonconflicting0) # label(axiom).
(all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path3))) # label(nonconflicting1) # label(axiom).
(all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path3))) # label(nonconflicting2) # label(axiom).
(all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path1) & free(X,path2))) # label(nonconflicting3) # label(axiom).
path0 != path1 & path0 != path2 & path0 != path3 & path1 != path2 & path1 != path3 & path2 != path3 # label(routesExclusivity) # label(axiom).
(all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom).
(all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom).
(all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom).
(all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom).
(all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom).
(all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom).
(all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom).
(all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom).
(all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom).
(all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom).
(all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed2) # label(axiom).
(all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed3) # label(axiom).
(all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom).
(all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3))) # label(openGatein2) # label(axiom).
(all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2))) # label(openGatein1) # label(axiom).
end_of_list.

formulas(goals).
(all T1 all T2 all X (at(X,T1,out1) & T1 != T2 -> -at(X,T2,out1))) # label(no2Trains) # label(conjecture).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom) # label(non_clause).  [assumption].
2 (all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom) # label(non_clause).  [assumption].
3 (all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom) # label(non_clause).  [assumption].
4 (all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom) # label(non_clause).  [assumption].
5 (all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom) # label(non_clause).  [assumption].
6 (all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom) # label(non_clause).  [assumption].
7 (all X all T (train(T) & go(X,T) & (switch(X,s1) = out2 & at(X,T,s1) | switch(X,s2) = out2 & at(X,T,s2)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom) # label(non_clause).  [assumption].
8 (all X all T (train(T) & go(X,T) & (switch(X,s1) = out1 & at(X,T,s1) | switch(X,s2) = out1 & at(X,T,s2)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom) # label(non_clause).  [assumption].
9 (all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom) # label(non_clause).  [assumption].
10 (all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom) # label(non_clause).  [assumption].
11 in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & s2 != s1 & s2 != out2 & s2 != out1 & s1 != out2 & s1 != out1 & out2 != out1 # label(nodesExclusivity) # label(axiom) # label(non_clause).  [assumption].
12 (all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom) # label(non_clause).  [assumption].
13 (all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom) # label(non_clause).  [assumption].
14 (all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom) # label(non_clause).  [assumption].
15 (all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom) # label(non_clause).  [assumption].
16 (all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom) # label(non_clause).  [assumption].
17 (all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom) # label(non_clause).  [assumption].
18 (all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom) # label(non_clause).  [assumption].
19 (all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom) # label(non_clause).  [assumption].
20 (all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom) # label(non_clause).  [assumption].
21 (all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom) # label(non_clause).  [assumption].
22 (all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom) # label(non_clause).  [assumption].
23 (all X (configuration(X,path0) <-> switch(X,s1) = out2)) # label(switchesConfiguration0) # label(axiom) # label(non_clause).  [assumption].
24 (all X (configuration(X,path1) <-> switch(X,s2) = out2)) # label(switchesConfiguration1) # label(axiom) # label(non_clause).  [assumption].
25 (all X (configuration(X,path2) <-> switch(X,s1) = out1)) # label(switchesConfiguration2) # label(axiom) # label(non_clause).  [assumption].
26 (all X (configuration(X,path3) <-> switch(X,s2) = out1)) # label(switchesConfiguration3) # label(axiom) # label(non_clause).  [assumption].
27 (all X all T (free(X,path0) <-> -at(X,T,s1))) # label(freeRoute0) # label(axiom) # label(non_clause).  [assumption].
28 (all X all T (free(X,path1) <-> -at(X,T,s2))) # label(freeRoute1) # label(axiom) # label(non_clause).  [assumption].
29 (all X all T (free(X,path2) <-> -at(X,T,s1))) # label(freeRoute2) # label(axiom) # label(non_clause).  [assumption].
30 (all X all T (free(X,path3) <-> -at(X,T,s2))) # label(freeRoute3) # label(axiom) # label(non_clause).  [assumption].
31 (all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2))) # label(nonconflicting0) # label(axiom) # label(non_clause).  [assumption].
32 (all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path3))) # label(nonconflicting1) # label(axiom) # label(non_clause).  [assumption].
33 (all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path3))) # label(nonconflicting2) # label(axiom) # label(non_clause).  [assumption].
34 (all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path1) & free(X,path2))) # label(nonconflicting3) # label(axiom) # label(non_clause).  [assumption].
35 path0 != path1 & path0 != path2 & path0 != path3 & path1 != path2 & path1 != path3 & path2 != path3 # label(routesExclusivity) # label(axiom) # label(non_clause).  [assumption].
36 (all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom) # label(non_clause).  [assumption].
37 (all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom) # label(non_clause).  [assumption].
38 (all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom) # label(non_clause).  [assumption].
39 (all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom) # label(non_clause).  [assumption].
40 (all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom) # label(non_clause).  [assumption].
41 (all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom) # label(non_clause).  [assumption].
42 (all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom) # label(non_clause).  [assumption].
43 (all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom) # label(non_clause).  [assumption].
44 (all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom) # label(non_clause).  [assumption].
45 (all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom) # label(non_clause).  [assumption].
46 (all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed2) # label(axiom) # label(non_clause).  [assumption].
47 (all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed3) # label(axiom) # label(non_clause).  [assumption].
48 (all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom) # label(non_clause).  [assumption].
49 (all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3))) # label(openGatein2) # label(axiom) # label(non_clause).  [assumption].
50 (all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2))) # label(openGatein1) # label(axiom) # label(non_clause).  [assumption].
51 (all T1 all T2 all X (at(X,T1,out1) & T1 != T2 -> -at(X,T2,out1))) # label(no2Trains) # label(conjecture) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
-less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
-train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
-train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
-train(A) | -go(B,A) | switch(B,s1) != out2 | -at(B,A,s1) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s2) != out2 | -at(B,A,s2) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s1) != out1 | -at(B,A,s1) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | switch(B,s2) != out1 | -at(B,A,s2) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
-train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
-at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].
-at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].
-at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].
-at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].
-at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].
-at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
-at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(17)].
at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
-at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
-at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(18)].
at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].
succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].
-configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
-configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
-configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
-configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
-free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
-free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
-free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
-free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
-nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].
-nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].
-nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
-nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].
-nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].
-nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
-nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].
-nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].
-nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
-nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].
-nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].
-nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].
-available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
-available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
-available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
-available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
-available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
-available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
-available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
-available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
-wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
-wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
-wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
-wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
-wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
-wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
-wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
-wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
-toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
-toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
-toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
-toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
-toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
-toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
-toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
-toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
-toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
-toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
-toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
-toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
-configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
-configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].
configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
-open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].
open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
-open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].
open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
at(c3,c1,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
c2 != c1 # label(no2Trains) # label(conjecture).  [deny(51)].
at(c3,c2,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating train/1
52 train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
53 -train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
54 -train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
55 -train(A) | -go(B,A) | switch(B,s1) != out2 | -at(B,A,s1) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
56 -train(A) | -go(B,A) | switch(B,s2) != out2 | -at(B,A,s2) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
Derived: -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].
Derived: -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(52,a,54,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(52,a,55,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(52,a,56,a)].
57 -train(A) | -go(B,A) | switch(B,s1) != out1 | -at(B,A,s1) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(57,a,52,a)].
58 -train(A) | -go(B,A) | switch(B,s2) != out1 | -at(B,A,s2) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(58,a,52,a)].
59 train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].
Derived: -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(59,a,54,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(59,a,55,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(59,a,56,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(59,a,57,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(59,a,58,a)].
60 -train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2).  [resolve(60,a,52,a)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1).  [resolve(60,a,59,a)].
61 train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
Derived: -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].
Derived: -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(61,a,54,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(61,a,55,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(61,a,56,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(61,a,57,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(61,a,58,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(61,a,60,a)].
62 -train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(62,a,52,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(62,a,59,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(62,a,61,a)].
63 train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
Derived: -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].
Derived: -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(63,a,54,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(63,a,55,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(63,a,56,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(63,a,57,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(63,a,58,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(63,a,60,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(63,a,62,a)].

Eliminating go/2
64 -at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
65 go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
66 go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
67 go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
68 go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].
69 at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(17)].
70 -at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].
71 at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(18)].
Derived: at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].
72 -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(52,a,54,a)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].
73 -at(succ(A),B,out2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(52,a,55,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(73,b,66,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(73,b,67,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(73,b,68,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(73,b,72,b)].
74 -at(succ(A),B,out2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(52,a,56,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(74,b,66,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(74,b,67,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(74,b,68,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(74,b,72,b)].
75 -go(A,B) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(57,a,52,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(75,a,65,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(75,a,67,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(75,a,68,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].
Derived: switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(75,a,72,b)].
76 -go(A,B) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(58,a,52,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(76,a,65,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(76,a,67,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(76,a,68,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].
Derived: switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(76,a,72,b)].
77 -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(59,a,54,a)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].
78 -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(59,a,55,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(78,b,66,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(78,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(78,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(78,b,77,b)].
79 -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(59,a,56,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(79,b,66,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(79,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(79,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(79,b,77,b)].
80 -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(59,a,57,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(80,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(80,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(80,b,77,b)].
81 -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(59,a,58,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(81,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(81,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(81,b,77,b)].
82 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2).  [resolve(60,a,52,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(82,a,65,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(82,a,66,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(82,a,68,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(82,a,69,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(82,a,72,b)].
83 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1).  [resolve(60,a,59,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(83,a,66,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(83,a,68,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(83,a,69,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(83,a,77,b)].
84 -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(61,a,54,a)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].
85 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(61,a,55,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(85,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(85,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(85,b,84,b)].
86 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(61,a,56,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(86,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(86,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(86,b,84,b)].
87 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(61,a,57,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(87,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(87,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(87,b,84,b)].
88 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(61,a,58,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(88,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(88,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(88,b,84,b)].
89 -at(succ(A),B,s2) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(61,a,60,a)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(89,b,68,a)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(89,b,69,c)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].
Derived: -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s2).  [resolve(89,b,84,b)].
90 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(62,a,52,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(90,a,65,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(90,a,66,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(90,a,67,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(90,a,71,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(90,a,72,b)].
91 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(62,a,59,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(91,a,66,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(91,a,67,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(91,a,71,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(91,a,77,b)].
92 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(62,a,61,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(92,a,67,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(92,a,71,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(92,a,84,b)].
93 -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(63,a,54,a)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].
94 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(63,a,55,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(94,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(94,b,93,b)].
95 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(63,a,56,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(95,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(95,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(95,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(95,b,93,b)].
96 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(63,a,57,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(96,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(96,b,93,b)].
97 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(63,a,58,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(97,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(97,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(97,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(97,b,93,b)].
98 -at(succ(A),B,s1) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(63,a,60,a)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(98,b,68,a)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(98,b,69,c)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].
Derived: -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s1).  [resolve(98,b,93,b)].
99 -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(63,a,62,a)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(99,b,71,c)].
Derived: -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(99,b,93,b)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, open, free, toBeUsed, nonconflicting, configuration, available, less, at, appear, wantsToGo ]).
Function symbol precedence:  function_order([ s2, s1, out2, out1, in2, in1, path0, path1, path2, path3, c1, c2, c3, switch, f1, succ, clockOrder, goal, pred, f2, f3, f4, f5 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      100 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
kept:      101 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
kept:      102 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
kept:      103 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
kept:      104 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
kept:      105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      107 switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      108 switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      109 at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      110 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      111 switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      112 switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      113 at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      114 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      115 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
kept:      116 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
kept:      117 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
kept:      118 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
kept:      119 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      120 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      121 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      122 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      123 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      124 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      125 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      126 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      127 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
           128 s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      129 s1 != s2.  [copy(128),flip(a)].
           130 s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      131 out2 != s2.  [copy(130),flip(a)].
kept:      132 out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      133 out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      134 out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      135 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      136 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].
kept:      137 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].
kept:      138 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].
kept:      139 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].
kept:      140 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].
kept:      141 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
kept:      142 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
kept:      143 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
kept:      144 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
kept:      145 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
kept:      146 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
kept:      147 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].
kept:      148 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
kept:      149 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
kept:      150 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
kept:      151 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
kept:      152 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].
kept:      153 -configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
kept:      154 configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
kept:      155 -configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
kept:      156 configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
kept:      157 -configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
kept:      158 configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
kept:      159 -configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
kept:      160 configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
kept:      161 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
kept:      162 free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
kept:      163 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
kept:      164 free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
kept:      165 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
kept:      166 free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
kept:      167 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
kept:      168 free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
kept:      169 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      170 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      171 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      172 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      173 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      174 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      175 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      176 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      177 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      178 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      179 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      180 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      181 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      182 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      183 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      184 nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      185 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      186 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      187 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      188 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      189 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      190 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      191 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
kept:      192 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
kept:      193 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
kept:      194 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
kept:      195 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
kept:      196 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
kept:      197 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
kept:      198 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
kept:      199 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
kept:      200 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
kept:      201 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
kept:      202 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
kept:      203 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
kept:      204 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
kept:      205 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
kept:      206 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
kept:      207 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
kept:      208 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
kept:      209 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
kept:      210 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
kept:      211 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
kept:      212 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
kept:      213 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
kept:      214 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
kept:      215 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      216 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      217 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      218 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      219 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      220 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      221 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      222 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      223 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      224 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      225 -toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      226 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      227 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      228 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      229 -toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      230 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      231 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      232 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      233 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      234 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      235 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
kept:      236 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].
kept:      237 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
kept:      238 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
kept:      239 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].
kept:      240 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
kept:      241 at(c3,c1,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
kept:      242 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(51)].
kept:      243 at(c3,c2,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
kept:      244 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].
kept:      245 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].
kept:      246 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].
kept:      247 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].
kept:      248 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].
kept:      249 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].
kept:      250 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].
kept:      251 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].
kept:      252 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].
kept:      253 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].
kept:      254 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].
kept:      255 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].
kept:      256 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].
kept:      257 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].
kept:      258 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].
kept:      259 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].
kept:      260 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(73,b,66,a)].
kept:      261 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(73,b,67,a)].
kept:      262 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(73,b,68,a)].
kept:      263 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].
kept:      264 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].
kept:      265 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(73,b,72,b)].
kept:      266 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(74,b,66,a)].
kept:      267 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(74,b,67,a)].
kept:      268 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(74,b,68,a)].
kept:      269 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].
kept:      270 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].
kept:      271 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(74,b,72,b)].
kept:      272 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(75,a,65,a)].
kept:      273 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(75,a,67,a)].
kept:      274 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(75,a,68,a)].
kept:      275 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].
kept:      276 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].
kept:      277 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(75,a,72,b)].
kept:      278 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(76,a,65,a)].
kept:      279 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(76,a,67,a)].
kept:      280 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(76,a,68,a)].
kept:      281 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].
kept:      282 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].
kept:      283 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(76,a,72,b)].
kept:      284 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].
kept:      285 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].
kept:      286 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(78,b,66,a)].
kept:      287 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(78,b,67,a)].
kept:      288 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(78,b,68,a)].
kept:      289 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].
kept:      290 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].
kept:      291 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(78,b,77,b)].
kept:      292 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(79,b,66,a)].
kept:      293 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(79,b,67,a)].
kept:      294 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(79,b,68,a)].
kept:      295 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].
kept:      296 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].
kept:      297 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(79,b,77,b)].
kept:      298 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(80,b,67,a)].
kept:      299 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(80,b,68,a)].
kept:      300 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].
kept:      301 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].
kept:      302 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(80,b,77,b)].
kept:      303 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(81,b,67,a)].
kept:      304 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(81,b,68,a)].
kept:      305 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].
kept:      306 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].
kept:      307 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(81,b,77,b)].
kept:      308 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(82,a,65,a)].
kept:      309 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(82,a,66,a)].
kept:      310 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(82,a,68,a)].
           311 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(82,a,69,c)].
kept:      312 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(311),merge(f)].
kept:      313 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].
kept:      314 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(82,a,72,b)].
kept:      315 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(83,a,66,a)].
kept:      316 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(83,a,68,a)].
           317 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(83,a,69,c)].
kept:      318 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(317),merge(f)].
kept:      319 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].
kept:      320 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(83,a,77,b)].
kept:      321 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].
kept:      322 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].
kept:      323 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(85,b,67,a)].
kept:      324 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(85,b,68,a)].
kept:      325 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].
kept:      326 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].
kept:      327 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(85,b,84,b)].
kept:      328 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(86,b,67,a)].
kept:      329 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(86,b,68,a)].
kept:      330 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].
kept:      331 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].
kept:      332 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(86,b,84,b)].
kept:      333 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(87,b,67,a)].
kept:      334 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(87,b,68,a)].
kept:      335 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].
kept:      336 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].
kept:      337 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(87,b,84,b)].
kept:      338 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(88,b,67,a)].
kept:      339 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(88,b,68,a)].
kept:      340 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].
kept:      341 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].
kept:      342 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(88,b,84,b)].
kept:      343 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(89,b,68,a)].
           344 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(89,b,69,c)].
kept:      345 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(344),merge(f)].
kept:      346 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].
kept:      347 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s2).  [resolve(89,b,84,b)].
kept:      348 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(90,a,65,a)].
kept:      349 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(90,a,66,a)].
kept:      350 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(90,a,67,a)].
kept:      351 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].
           352 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(90,a,71,c)].
kept:      353 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(352),merge(f)].
kept:      354 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(90,a,72,b)].
kept:      355 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(91,a,66,a)].
kept:      356 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(91,a,67,a)].
kept:      357 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].
           358 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(91,a,71,c)].
kept:      359 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(358),merge(f)].
kept:      360 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(91,a,77,b)].
kept:      361 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(92,a,67,a)].
kept:      362 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].
           363 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(92,a,71,c)].
kept:      364 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(363),merge(f)].
kept:      365 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(92,a,84,b)].
kept:      366 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].
kept:      367 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].
kept:      368 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(94,b,68,a)].
kept:      369 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].
kept:      370 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].
kept:      371 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(94,b,93,b)].
kept:      372 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(95,b,68,a)].
kept:      373 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(95,b,69,c)].
kept:      374 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(95,b,71,c)].
kept:      375 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(95,b,93,b)].
kept:      376 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(96,b,68,a)].
kept:      377 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].
kept:      378 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].
kept:      379 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(96,b,93,b)].
kept:      380 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(97,b,68,a)].
kept:      381 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(97,b,69,c)].
kept:      382 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(97,b,71,c)].
kept:      383 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(97,b,93,b)].
kept:      384 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(98,b,68,a)].
           385 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(98,b,69,c)].
kept:      386 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(385),merge(f)].
kept:      387 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].
kept:      388 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s1).  [resolve(98,b,93,b)].
kept:      389 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].
           390 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(99,b,71,c)].
kept:      391 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(390),merge(f)].
kept:      392 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(99,b,93,b)].
kept:      393 less(A,A).  [factor(102,a,b)].
kept:      394 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(265,a,e)].
kept:      395 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(271,a,e)].
kept:      396 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(272,d,e)].
kept:      397 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(277,d,e)].
kept:      398 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(278,d,e)].
kept:      399 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(283,d,e)].
kept:      400 -at(succ(A),B,out1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(286,a,e)].
kept:      401 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(291,a,e)].
kept:      402 -at(succ(A),B,out1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(292,a,e)].
kept:      403 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(297,a,e)].
kept:      404 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(302,a,e)].
kept:      405 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(307,a,e)].
kept:      406 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(308,d,e)].
kept:      407 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(314,d,e)].
kept:      408 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(315,d,e)].
kept:      409 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(320,d,e)].
kept:      410 -at(succ(A),B,s2) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(323,a,e)].
kept:      411 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(327,a,e)].
kept:      412 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s2).  [factor(328,a,c)].
kept:      413 -at(succ(A),B,s2) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(328,a,e)].
kept:      414 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s1).  [factor(329,a,c)].
kept:      415 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(330,a,c)].
kept:      416 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(331,a,c)].
kept:      417 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(332,a,e)].
kept:      418 -at(succ(A),B,s2) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(333,a,e)].
kept:      419 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(337,a,e)].
kept:      420 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s2).  [factor(338,a,c)].
kept:      421 -at(succ(A),B,s2) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(338,a,e)].
kept:      422 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s1).  [factor(339,a,c)].
kept:      423 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(340,a,c)].
kept:      424 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(341,a,c)].
kept:      425 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(342,a,e)].
kept:      426 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(347,a,e)].
kept:      427 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(348,d,e)].
kept:      428 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(354,d,e)].
kept:      429 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(355,d,e)].
kept:      430 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(360,d,e)].
kept:      431 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(361,d,e)].
kept:      432 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(365,d,e)].
kept:      433 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s1).  [factor(368,a,c)].
kept:      434 -at(succ(A),B,s1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(368,a,e)].
kept:      435 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(369,a,c)].
kept:      436 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(370,a,c)].
kept:      437 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(371,a,e)].
kept:      438 -at(succ(A),B,s1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(372,a,e)].
kept:      439 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(375,a,e)].
kept:      440 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s1).  [factor(376,a,c)].
kept:      441 -at(succ(A),B,s1) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(376,a,e)].
kept:      442 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(377,a,c)].
kept:      443 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(378,a,c)].
kept:      444 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(379,a,e)].
kept:      445 -at(succ(A),B,s1) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(380,a,e)].
kept:      446 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(383,a,e)].
kept:      447 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(384,a,e)].
kept:      448 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(388,a,e)].
kept:      449 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(392,a,e)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
100 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
101 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
102 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
103 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
104 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
107 switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
108 switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
109 at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
110 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
111 switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
112 switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
113 at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
114 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
115 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
116 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
117 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
118 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
119 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
120 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
121 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
122 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
123 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
124 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
125 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
126 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
127 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
129 s1 != s2.  [copy(128),flip(a)].
131 out2 != s2.  [copy(130),flip(a)].
132 out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
133 out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
134 out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
135 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
136 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].
137 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].
138 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].
139 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].
140 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].
141 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
142 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
143 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
144 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
145 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
146 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
147 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].
148 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
149 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
150 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
151 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
152 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].
153 -configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
154 configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
155 -configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
156 configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
157 -configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
158 configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
159 -configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
160 configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
161 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
162 free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
163 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
164 free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
165 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
166 free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
167 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
168 free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
169 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].
170 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].
171 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
172 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
173 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].
174 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].
175 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
176 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
177 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].
178 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].
179 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
180 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
181 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].
182 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].
183 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
184 nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
185 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
186 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
187 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
188 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
189 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
190 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].
191 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
192 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
193 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
194 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
195 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
196 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
197 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
198 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
199 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
200 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
201 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
202 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
203 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
204 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
205 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
206 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
207 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
208 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
209 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
210 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
211 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
212 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
213 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
214 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
215 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
216 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
217 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
218 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
219 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
220 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
221 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
222 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
223 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
224 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
225 -toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
226 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
227 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
228 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
229 -toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
230 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
231 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
232 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
233 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].
234 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
235 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
236 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].
237 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
238 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
239 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].
240 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
241 at(c3,c1,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
242 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(51)].
243 at(c3,c2,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
244 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].
245 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].
246 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].
247 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].
248 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].
249 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].
250 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].
251 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].
252 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].
253 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].
254 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].
255 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].
256 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].
257 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].
258 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].
259 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].
263 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].
264 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].
269 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].
270 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].
275 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].
276 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].
281 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].
282 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].
284 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].
285 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].
289 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].
290 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].
295 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].
296 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].
300 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].
301 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].
305 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].
306 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].
312 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(311),merge(f)].
313 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].
318 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(317),merge(f)].
319 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].
321 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].
322 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].
325 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].
326 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].
330 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].
331 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].
335 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].
336 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].
340 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].
341 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].
345 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(344),merge(f)].
346 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].
351 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].
353 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(352),merge(f)].
357 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].
359 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(358),merge(f)].
362 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].
364 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(363),merge(f)].
366 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].
367 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].
369 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].
370 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].
373 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(95,b,69,c)].
374 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(95,b,71,c)].
377 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].
378 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].
381 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(97,b,69,c)].
382 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(97,b,71,c)].
386 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(385),merge(f)].
387 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].
389 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].
391 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(390),merge(f)].
393 less(A,A).  [factor(102,a,b)].
394 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(265,a,e)].
395 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(271,a,e)].
396 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(272,d,e)].
397 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(277,d,e)].
398 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(278,d,e)].
399 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(283,d,e)].
400 -at(succ(A),B,out1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(286,a,e)].
401 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(291,a,e)].
402 -at(succ(A),B,out1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(292,a,e)].
403 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(297,a,e)].
404 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(302,a,e)].
405 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(307,a,e)].
406 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(308,d,e)].
407 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(314,d,e)].
408 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(315,d,e)].
409 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(320,d,e)].
410 -at(succ(A),B,s2) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(323,a,e)].
411 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(327,a,e)].
413 -at(succ(A),B,s2) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(328,a,e)].
415 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(330,a,c)].
416 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(331,a,c)].
417 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(332,a,e)].
418 -at(succ(A),B,s2) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(333,a,e)].
419 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(337,a,e)].
421 -at(succ(A),B,s2) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(338,a,e)].
423 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(340,a,c)].
424 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(341,a,c)].
425 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(342,a,e)].
426 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(347,a,e)].
427 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(348,d,e)].
428 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(354,d,e)].
429 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(355,d,e)].
430 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(360,d,e)].
431 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(361,d,e)].
432 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(365,d,e)].
434 -at(succ(A),B,s1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(368,a,e)].
435 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(369,a,c)].
436 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(370,a,c)].
437 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(371,a,e)].
438 -at(succ(A),B,s1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(372,a,e)].
439 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(375,a,e)].
441 -at(succ(A),B,s1) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(376,a,e)].
442 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(377,a,c)].
443 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(378,a,c)].
444 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(379,a,e)].
445 -at(succ(A),B,s1) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(380,a,e)].
446 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(383,a,e)].
447 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(384,a,e)].
448 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(388,a,e)].
449 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(392,a,e)].
end_of_list.

formulas(demodulators).
105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.04 seconds.

given #1 (I,wt=9): 100 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].

given #2 (I,wt=9): 101 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].

given #3 (I,wt=6): 102 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].

given #4 (I,wt=4): 103 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].

given #5 (I,wt=7): 104 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].

given #6 (I,wt=5): 105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #7 (I,wt=5): 106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #8 (I,wt=15): 107 switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #9 (I,wt=14): 108 switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #10 (I,wt=14): 109 at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #11 (I,wt=13): 110 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #12 (I,wt=15): 111 switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #13 (I,wt=14): 112 switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #14 (I,wt=14): 113 at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #15 (I,wt=13): 114 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #16 (I,wt=8): 115 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].

given #17 (I,wt=9): 116 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].

given #18 (I,wt=8): 117 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].

given #19 (I,wt=9): 118 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].

given #20 (I,wt=3): 119 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #21 (I,wt=3): 120 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #22 (I,wt=3): 121 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #23 (I,wt=3): 122 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #24 (I,wt=3): 123 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #25 (I,wt=3): 124 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #26 (I,wt=3): 125 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #27 (I,wt=3): 126 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #28 (I,wt=3): 127 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #29 (I,wt=3): 129 s1 != s2.  [copy(128),flip(a)].

given #30 (I,wt=3): 131 out2 != s2.  [copy(130),flip(a)].

given #31 (I,wt=3): 132 out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #32 (I,wt=3): 133 out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #33 (I,wt=3): 134 out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #34 (I,wt=3): 135 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #35 (I,wt=9): 136 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].

given #36 (I,wt=9): 137 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].

given #37 (I,wt=11): 138 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].

given #38 (I,wt=11): 139 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].

given #39 (I,wt=11): 140 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].

given #40 (I,wt=13): 141 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].

given #41 (I,wt=9): 142 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].

given #42 (I,wt=12): 143 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].

given #43 (I,wt=13): 144 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].

given #44 (I,wt=9): 145 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].

given #45 (I,wt=12): 146 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].

given #46 (I,wt=8): 147 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].

given #47 (I,wt=13): 148 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].

given #48 (I,wt=13): 149 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].

given #49 (I,wt=13): 150 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].

given #50 (I,wt=13): 151 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].

given #51 (I,wt=8): 152 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].

given #52 (I,wt=8): 153 -configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].

given #53 (I,wt=8): 154 configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].

given #54 (I,wt=8): 155 -configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].

given #55 (I,wt=8): 156 configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].

given #56 (I,wt=8): 157 -configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].

given #57 (I,wt=8): 158 configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].

given #58 (I,wt=8): 159 -configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].

given #59 (I,wt=8): 160 configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].

given #60 (I,wt=7): 161 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].

given #61 (I,wt=7): 162 free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].

given #62 (I,wt=7): 163 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].

given #63 (I,wt=7): 164 free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].

given #64 (I,wt=7): 165 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].

given #65 (I,wt=7): 166 free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].

given #66 (I,wt=7): 167 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].

given #67 (I,wt=7): 168 free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].

given #68 (I,wt=6): 169 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #69 (I,wt=6): 170 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #70 (I,wt=6): 171 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #71 (I,wt=12): 172 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #72 (I,wt=6): 173 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #73 (I,wt=6): 174 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #74 (I,wt=6): 175 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #75 (I,wt=12): 176 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #76 (I,wt=6): 177 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #77 (I,wt=6): 178 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #78 (I,wt=6): 179 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #79 (I,wt=12): 180 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #80 (I,wt=6): 181 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #81 (I,wt=6): 182 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #82 (I,wt=6): 183 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #83 (I,wt=12): 184 nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #84 (I,wt=3): 185 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #85 (I,wt=3): 186 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #86 (I,wt=3): 187 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #87 (I,wt=3): 188 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #88 (I,wt=3): 189 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #89 (I,wt=3): 190 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #90 (I,wt=6): 191 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].

given #91 (I,wt=6): 192 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].

given #92 (I,wt=9): 193 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].

given #93 (I,wt=6): 194 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].

given #94 (I,wt=6): 195 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].

given #95 (I,wt=9): 196 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].

given #96 (I,wt=6): 197 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].

given #97 (I,wt=6): 198 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].

given #98 (I,wt=9): 199 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].

given #99 (I,wt=6): 200 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].

given #100 (I,wt=6): 201 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].

given #101 (I,wt=9): 202 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].

given #102 (I,wt=9): 203 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].

given #103 (I,wt=9): 204 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].

given #104 (I,wt=14): 205 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].

given #105 (I,wt=9): 206 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].

given #106 (I,wt=9): 207 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].

given #107 (I,wt=14): 208 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].

given #108 (I,wt=9): 209 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].

given #109 (I,wt=9): 210 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].

given #110 (I,wt=14): 211 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].

given #111 (I,wt=9): 212 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].

given #112 (I,wt=9): 213 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].

given #113 (I,wt=14): 214 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].

given #114 (I,wt=6): 215 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #115 (I,wt=7): 216 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #116 (I,wt=7): 217 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #117 (I,wt=14): 218 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #118 (I,wt=6): 219 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #119 (I,wt=7): 220 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #120 (I,wt=7): 221 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #121 (I,wt=14): 222 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #122 (I,wt=6): 223 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #123 (I,wt=7): 224 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #124 (I,wt=7): 225 -toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #125 (I,wt=14): 226 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #126 (I,wt=6): 227 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #127 (I,wt=7): 228 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #128 (I,wt=7): 229 -toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #129 (I,wt=14): 230 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #130 (I,wt=10): 231 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #131 (I,wt=10): 232 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #132 (I,wt=10): 233 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #133 (I,wt=7): 234 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #134 (I,wt=10): 235 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].

given #135 (I,wt=7): 236 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].

given #136 (I,wt=7): 237 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].

given #137 (I,wt=10): 238 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].

given #138 (I,wt=7): 239 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].

given #139 (I,wt=7): 240 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].

given #140 (I,wt=4): 241 at(c3,c1,out1) # label(no2Trains) # label(conjecture).  [deny(51)].

given #141 (I,wt=3): 242 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(51)].

given #142 (I,wt=4): 243 at(c3,c2,out1) # label(no2Trains) # label(conjecture).  [deny(51)].

given #143 (I,wt=10): 244 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].

given #144 (I,wt=10): 245 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].

given #145 (I,wt=10): 246 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].

given #146 (I,wt=10): 247 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].

given #147 (I,wt=17): 248 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].

given #148 (I,wt=17): 249 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].

given #149 (I,wt=17): 250 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].

given #150 (I,wt=17): 251 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].

given #151 (I,wt=17): 252 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].

given #152 (I,wt=17): 253 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].

given #153 (I,wt=17): 254 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].

given #154 (I,wt=17): 255 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].

given #155 (I,wt=21): 256 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].

given #156 (I,wt=21): 257 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].

given #157 (I,wt=23): 258 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].

given #158 (I,wt=23): 259 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].

given #159 (I,wt=28): 263 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].

given #160 (I,wt=28): 264 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].

given #161 (I,wt=28): 269 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].

given #162 (I,wt=28): 270 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].

given #163 (I,wt=28): 275 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].

given #164 (I,wt=28): 276 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].

given #165 (I,wt=28): 281 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].

given #166 (I,wt=28): 282 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].

given #167 (I,wt=23): 284 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].

given #168 (I,wt=23): 285 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].

given #169 (I,wt=28): 289 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].

given #170 (I,wt=28): 290 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].

given #171 (I,wt=28): 295 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].

given #172 (I,wt=28): 296 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].

given #173 (I,wt=28): 300 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].

given #174 (I,wt=28): 301 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].

given #175 (I,wt=28): 305 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].

given #176 (I,wt=28): 306 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].

given #177 (I,wt=22): 312 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(311),merge(f)].

given #178 (I,wt=26): 313 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].

given #179 (I,wt=22): 318 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(317),merge(f)].

given #180 (I,wt=26): 319 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].

given #181 (I,wt=23): 321 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].

given #182 (I,wt=23): 322 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].

given #183 (I,wt=28): 325 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].

given #184 (I,wt=28): 326 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].

given #185 (I,wt=28): 330 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].

given #186 (I,wt=28): 331 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].

given #187 (I,wt=28): 335 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].

given #188 (I,wt=28): 336 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].

given #189 (I,wt=28): 340 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].

given #190 (I,wt=28): 341 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].

given #191 (I,wt=22): 345 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(344),merge(f)].

given #192 (I,wt=26): 346 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].

given #193 (I,wt=26): 351 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].

given #194 (I,wt=22): 353 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(352),merge(f)].

given #195 (I,wt=26): 357 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].

given #196 (I,wt=22): 359 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(358),merge(f)].

given #197 (I,wt=26): 362 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].

given #198 (I,wt=22): 364 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(363),merge(f)].

given #199 (I,wt=23): 366 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].

given #200 (I,wt=23): 367 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].

given #201 (I,wt=28): 369 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].

given #202 (I,wt=28): 370 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].

given #203 (I,wt=28): 377 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].

given #204 (I,wt=28): 378 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].

given #205 (I,wt=22): 386 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(385),merge(f)].

given #206 (I,wt=26): 387 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].

given #207 (I,wt=26): 389 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].

given #208 (I,wt=22): 391 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(390),merge(f)].

given #209 (I,wt=3): 393 less(A,A).  [factor(102,a,b)].

given #210 (I,wt=25): 394 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(265,a,e)].

given #211 (I,wt=25): 395 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(271,a,e)].

given #212 (I,wt=19): 396 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(272,d,e)].

given #213 (I,wt=25): 397 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(277,d,e)].

given #214 (I,wt=19): 398 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(278,d,e)].

given #215 (I,wt=25): 399 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(283,d,e)].

given #216 (I,wt=19): 400 -at(succ(A),B,out1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(286,a,e)].

given #217 (I,wt=25): 401 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(291,a,e)].

given #218 (I,wt=19): 402 -at(succ(A),B,out1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(292,a,e)].

given #219 (I,wt=25): 403 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(297,a,e)].

given #220 (I,wt=25): 404 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(302,a,e)].

given #221 (I,wt=25): 405 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(307,a,e)].

given #222 (I,wt=17): 406 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(308,d,e)].

given #223 (I,wt=23): 407 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(314,d,e)].

given #224 (I,wt=17): 408 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(315,d,e)].

given #225 (I,wt=23): 409 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(320,d,e)].

given #226 (I,wt=19): 410 -at(succ(A),B,s2) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(323,a,e)].

given #227 (I,wt=25): 411 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(327,a,e)].

given #228 (I,wt=19): 413 -at(succ(A),B,s2) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(328,a,e)].

given #229 (I,wt=25): 417 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(332,a,e)].

given #230 (I,wt=19): 418 -at(succ(A),B,s2) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(333,a,e)].

given #231 (I,wt=25): 419 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(337,a,e)].

given #232 (I,wt=19): 421 -at(succ(A),B,s2) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(338,a,e)].

given #233 (I,wt=25): 425 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(342,a,e)].

given #234 (I,wt=23): 426 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(347,a,e)].

given #235 (I,wt=17): 427 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(348,d,e)].

given #236 (I,wt=23): 428 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(354,d,e)].

given #237 (I,wt=17): 429 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(355,d,e)].

given #238 (I,wt=23): 430 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(360,d,e)].

given #239 (I,wt=17): 431 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(361,d,e)].

given #240 (I,wt=23): 432 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(365,d,e)].

given #241 (I,wt=19): 434 -at(succ(A),B,s1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(368,a,e)].

given #242 (I,wt=25): 437 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(371,a,e)].

given #243 (I,wt=19): 438 -at(succ(A),B,s1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(372,a,e)].

given #244 (I,wt=19): 441 -at(succ(A),B,s1) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(376,a,e)].

given #245 (I,wt=25): 444 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(379,a,e)].

given #246 (I,wt=19): 445 -at(succ(A),B,s1) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(380,a,e)].

given #247 (I,wt=17): 447 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(384,a,e)].

given #248 (I,wt=23): 448 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(388,a,e)].

given #249 (I,wt=23): 449 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(392,a,e)].

given #250 (A,wt=9): 450 less(A,B) | -less(C,B) | less(C,A).  [resolve(102,a,101,b)].

given #251 (F,wt=9): 474 -at(pred(A),B,out2) | -at(A,B,out2).  [para(106(a,1),136(b,1))].

given #252 (F,wt=9): 475 -at(pred(A),B,out1) | -at(A,B,out1).  [para(106(a,1),137(b,1))].

given #253 (T,wt=4): 460 less(pred(A),A).  [para(106(a,1),103(a,2))].

given #254 (T,wt=6): 487 -free(A,path2) | free(A,path0).  [resolve(165,b,162,b)].

given #255 (T,wt=6): 488 free(A,path2) | -free(A,path0).  [resolve(166,b,161,b)].

given #256 (T,wt=6): 492 -free(A,path3) | free(A,path1).  [resolve(167,b,164,b)].

given #257 (A,wt=7): 451 -less(A,B) | less(A,succ(B)).  [resolve(103,a,101,b)].

given #258 (T,wt=5): 748 less(pred(A),succ(A)).  [resolve(451,a,460,a)].

given #259 (T,wt=5): 750 less(A,succ(succ(A))).  [resolve(451,a,103,a)].

given #260 (T,wt=5): 756 less(pred(pred(A)),A).  [para(106(a,1),748(a,2))].

given #261 (T,wt=6): 493 free(A,path3) | -free(A,path1).  [resolve(168,b,163,b)].

given #262 (A,wt=7): 452 -less(succ(A),B) | less(A,B).  [resolve(103,a,101,a)].

given #263 (T,wt=6): 751 less(pred(A),succ(succ(A))).  [resolve(748,a,451,a)].

given #264 (T,wt=6): 757 less(A,succ(succ(succ(A)))).  [resolve(750,a,451,a)].

given #265 (T,wt=6): 762 less(pred(pred(A)),succ(A)).  [resolve(756,a,451,a)].

given #266 (T,wt=6): 782 less(pred(pred(pred(A))),A).  [para(106(a,1),762(a,2))].

given #267 (A,wt=8): 453 -less(succ(A),A) | succ(A) = A.  [resolve(103,a,100,b),flip(b)].

given #268 (T,wt=7): 461 less(A,pred(B)) | less(B,A).  [para(106(a,1),104(b,1))].

given #269 (T,wt=7): 483 free(succ(A),path0) | open(A,in1).  [resolve(162,b,117,b)].

given #270 (T,wt=7): 486 free(succ(A),path1) | open(A,in2).  [resolve(164,b,115,b)].

given #271 (T,wt=7): 491 free(succ(A),path2) | open(A,in1).  [resolve(166,b,117,b)].

given #272 (A,wt=10): 454 less(succ(A),B) | -less(C,B) | less(C,A).  [resolve(104,a,101,b)].

given #273 (T,wt=7): 496 free(succ(A),path3) | open(A,in2).  [resolve(168,b,115,b)].

given #274 (T,wt=7): 501 -at(c3,c1,A) | out1 = A.  [resolve(241,a,138,b)].

given #275 (T,wt=3): 815 free(c3,path3).  [resolve(501,a,168,b),unit_del(a,132)].

given #276 (T,wt=3): 816 free(c3,path2).  [resolve(501,a,166,b),unit_del(a,134)].

given #277 (A,wt=10): 455 less(succ(A),B) | -less(A,C) | less(B,C).  [resolve(104,a,101,a)].

given #278 (T,wt=3): 817 free(c3,path1).  [resolve(501,a,164,b),unit_del(a,132)].

given #279 (T,wt=3): 818 free(c3,path0).  [resolve(501,a,162,b),unit_del(a,134)].

given #280 (T,wt=3): 819 nonconflicting(c3,path3).  [resolve(815,a,184,b),unit_del(b,817),unit_del(c,816)].

given #281 (T,wt=3): 820 nonconflicting(c3,path2).  [resolve(815,a,180,d),unit_del(b,816),unit_del(c,818)].

given #282 (A,wt=10): 456 less(succ(A),B) | -less(A,B) | B = A.  [resolve(104,a,100,b)].

given #283 (T,wt=3): 821 nonconflicting(c3,path1).  [resolve(815,a,176,d),unit_del(b,817),unit_del(c,818)].

given #284 (T,wt=3): 822 nonconflicting(c3,path0).  [resolve(816,a,172,d),unit_del(b,818),unit_del(c,817)].

given #285 (T,wt=7): 502 -at(c3,c2,A) | out1 = A.  [resolve(243,a,138,b)].

given #286 (T,wt=7): 742 less(A,succ(B)) | less(B,A).  [resolve(450,b,103,a)].

given #287 (A,wt=10): 457 less(succ(A),B) | -less(A,B) | A = B.  [resolve(104,a,100,a)].

given #288 (T,wt=7): 744 less(A,B) | less(pred(B),A).  [resolve(460,a,450,b)].

given #289 (T,wt=7): 745 -less(A,pred(B)) | less(A,B).  [resolve(460,a,101,b)].

given #290 (T,wt=7): 746 -less(A,B) | less(pred(A),B).  [resolve(460,a,101,a)].

given #291 (T,wt=7): 767 less(pred(A),succ(succ(succ(A)))).  [resolve(751,a,451,a)].

given #292 (A,wt=10): 458 less(A,B) | -less(C,succ(B)) | less(C,A).  [resolve(104,b,101,b)].

given #293 (T,wt=7): 772 less(A,succ(succ(succ(succ(A))))).  [resolve(757,a,452,a)].

given #294 (T,wt=7): 777 less(pred(pred(A)),succ(succ(A))).  [resolve(762,a,451,a)].

given #295 (T,wt=7): 783 less(pred(pred(pred(A))),succ(A)).  [resolve(782,a,451,a)].

given #296 (T,wt=7): 796 free(A,path0) | open(pred(A),in1).  [para(106(a,1),483(a,1))].

given #297 (A,wt=11): 459 less(A,B) | -less(A,succ(B)) | succ(B) = A.  [resolve(104,b,100,b)].

given #298 (T,wt=7): 797 free(A,path1) | open(pred(A),in2).  [para(106(a,1),486(a,1))].

given #299 (T,wt=7): 799 free(A,path2) | open(pred(A),in1).  [para(106(a,1),491(a,1))].

given #300 (T,wt=7): 814 free(A,path3) | open(pred(A),in2).  [para(106(a,1),496(a,1))].

given #301 (T,wt=7): 844 less(pred(pred(pred(pred(A)))),A).  [resolve(745,a,782,a)].

given #302 (A,wt=16): 462 switch(pred(A),s1) = out2 | switch(pred(A),s2) = out2 | -at(A,B,out2).  [para(106(a,1),107(c,1))].

given #303 (T,wt=8): 470 open(pred(A),in2) | -at(A,B,s2).  [para(106(a,1),115(b,1))].

given #304 (T,wt=8): 472 open(pred(A),in1) | -at(A,B,s1).  [para(106(a,1),117(b,1))].

given #305 (T,wt=8): 482 free(succ(A),path0) | at(A,B,in1).  [resolve(162,b,118,b)].

given #306 (T,wt=4): 884 free(succ(c3),path0).  [resolve(482,b,502,a),flip(b),unit_del(b,127)].

given #307 (A,wt=15): 463 switch(pred(A),s1) = out2 | at(pred(A),B,s2) | -at(A,B,out2).  [para(106(a,1),108(c,1))].

given #308 (T,wt=4): 896 free(succ(c3),path2).  [resolve(884,a,488,b)].

given #309 (T,wt=8): 485 free(succ(A),path1) | at(A,B,in2).  [resolve(164,b,116,b)].

given #310 (T,wt=4): 898 free(succ(c3),path1).  [resolve(485,b,502,a),flip(b),unit_del(b,123)].

given #311 (T,wt=4): 910 nonconflicting(succ(c3),path0).  [back_unit_del(897),unit_del(b,898)].

given #312 (A,wt=15): 464 at(pred(A),B,s1) | switch(pred(A),s2) = out2 | -at(A,B,out2).  [para(106(a,1),109(c,1))].

given #313 (T,wt=4): 911 free(succ(c3),path3).  [resolve(898,a,493,b)].

given #314 (T,wt=4): 912 nonconflicting(succ(c3),path3).  [resolve(911,a,184,b),unit_del(b,898),unit_del(c,896)].

given #315 (T,wt=4): 913 nonconflicting(succ(c3),path2).  [resolve(911,a,180,d),unit_del(b,896),unit_del(c,884)].

given #316 (T,wt=4): 914 nonconflicting(succ(c3),path1).  [resolve(911,a,176,d),unit_del(b,898),unit_del(c,884)].

given #317 (A,wt=14): 465 at(pred(A),B,s1) | at(pred(A),B,s2) | -at(A,B,out2).  [para(106(a,1),110(c,1))].

given #318 (T,wt=8): 490 free(succ(A),path2) | at(A,B,in1).  [resolve(166,b,118,b)].

given #319 (T,wt=8): 495 free(succ(A),path3) | at(A,B,in2).  [resolve(168,b,116,b)].

given #320 (T,wt=8): 747 -less(A,pred(A)) | pred(A) = A.  [resolve(460,a,100,b)].

given #321 (T,wt=8): 749 less(succ(A),succ(B)) | less(B,A).  [resolve(451,a,104,b)].

given #322 (A,wt=16): 466 switch(pred(A),s1) = out1 | switch(pred(A),s2) = out1 | -at(A,B,out1).  [para(106(a,1),111(c,1))].

given #323 (T,wt=8): 752 less(A,succ(B)) | less(pred(B),A).  [resolve(748,a,450,b)].

given #324 (T,wt=8): 753 -less(A,pred(B)) | less(A,succ(B)).  [resolve(748,a,101,b)].

given #325 (T,wt=8): 754 -less(succ(A),B) | less(pred(A),B).  [resolve(748,a,101,a)].

given #326 (T,wt=8): 758 less(A,succ(succ(B))) | less(B,A).  [resolve(750,a,450,b)].

given #327 (A,wt=15): 467 switch(pred(A),s1) = out1 | at(pred(A),B,s2) | -at(A,B,out1).  [para(106(a,1),112(c,1))].

given #328 (T,wt=8): 759 -less(A,B) | less(A,succ(succ(B))).  [resolve(750,a,101,b)].

given #329 (T,wt=8): 760 -less(succ(succ(A)),B) | less(A,B).  [resolve(750,a,101,a)].

given #330 (T,wt=8): 763 less(A,B) | less(pred(pred(B)),A).  [resolve(756,a,450,b)].

given #331 (T,wt=8): 764 -less(A,pred(pred(B))) | less(A,B).  [resolve(756,a,101,b)].

given #332 (A,wt=15): 468 at(pred(A),B,s1) | switch(pred(A),s2) = out1 | -at(A,B,out1).  [para(106(a,1),113(c,1))].

given #333 (T,wt=8): 765 -less(A,B) | less(pred(pred(A)),B).  [resolve(756,a,101,a)].

given #334 (T,wt=8): 788 less(A,succ(B)) | less(B,pred(A)).  [resolve(461,a,452,a)].

given #335 (T,wt=8): 809 less(succ(A),B) | less(pred(B),A).  [resolve(454,b,460,a)].

given #336 (T,wt=8): 831 less(A,succ(B)) | less(B,succ(A)).  [resolve(742,a,452,a)].

given #337 (A,wt=14): 469 at(pred(A),B,s1) | at(pred(A),B,s2) | -at(A,B,out1).  [para(106(a,1),114(c,1))].

given #338 (T,wt=8): 839 less(pred(A),succ(B)) | less(B,A).  [resolve(744,a,452,a)].

given #339 (T,wt=8): 845 less(pred(A),B) | less(pred(B),A).  [resolve(745,a,744,b)].

given #340 (T,wt=8): 846 less(A,B) | less(pred(B),pred(A)).  [resolve(745,a,461,b)].

given #341 (T,wt=8): 847 less(pred(pred(A)),succ(succ(succ(A)))).  [resolve(767,a,746,a)].

given #342 (A,wt=9): 471 at(pred(A),B,in2) | -at(A,B,s2).  [para(106(a,1),116(b,1))].

given #343 (T,wt=8): 849 less(pred(A),succ(succ(succ(succ(A))))).  [resolve(767,a,451,a)].

given #344 (T,wt=8): 855 less(A,succ(succ(succ(succ(succ(A)))))).  [resolve(772,a,452,a)].

given #345 (T,wt=8): 860 less(pred(pred(pred(A))),succ(succ(A))).  [resolve(777,a,746,a)].

given #346 (T,wt=8): 866 less(pred(pred(pred(pred(A)))),succ(A)).  [resolve(783,a,746,a)].

given #347 (A,wt=9): 473 at(pred(A),B,in1) | -at(A,B,s1).  [para(106(a,1),118(b,1))].

given #348 (T,wt=8): 878 less(pred(pred(pred(pred(pred(A))))),A).  [resolve(844,a,746,a)].

given #349 (T,wt=8): 1076 at(pred(A),B,in2) | free(A,path3).  [resolve(471,b,168,b)].

given #350 (T,wt=8): 1077 at(pred(A),B,in2) | free(A,path1).  [resolve(471,b,164,b)].

given #351 (T,wt=8): 1103 at(pred(A),B,in1) | free(A,path2).  [resolve(473,b,166,b)].

given #352 (A,wt=14): 476 -at(A,B,in2) | appear(pred(A),B,in2) | at(pred(A),B,in2).  [para(106(a,1),141(a,1))].

given #353 (T,wt=8): 1104 at(pred(A),B,in1) | free(A,path0).  [resolve(473,b,162,b)].

given #354 (T,wt=9): 503 -at(A,B,out2) | less(C,f1(C,B)).  [para(106(a,1),244(a,1))].

given #355 (T,wt=9): 504 -at(A,B,out1) | less(C,f1(C,B)).  [para(106(a,1),245(a,1))].

given #356 (T,wt=5): 1135 less(A,f1(A,c2)).  [resolve(504,a,243,a)].

given #357 (A,wt=14): 477 -at(A,B,in1) | appear(pred(A),B,in1) | at(pred(A),B,in1).  [para(106(a,1),144(a,1))].

given #358 (T,wt=5): 1136 less(A,f1(A,c1)).  [resolve(504,a,241,a)].

given #359 (T,wt=6): 1141 less(pred(A),f1(A,c2)).  [resolve(1135,a,746,a)].

given #360 (T,wt=6): 1145 less(A,f1(succ(A),c2)).  [resolve(1135,a,452,a)].

given #361 (T,wt=6): 1146 less(A,succ(f1(A,c2))).  [resolve(1135,a,451,a)].

given #362 (A,wt=13): 478 pred(A) = A | clockOrder(pred(A)) = in2 | clockOrder(A) != in1.  [para(106(a,1),149(c,1,1)),rewrite([106(2)]),flip(a)].

given #363 (T,wt=6): 1159 less(pred(A),f1(A,c1)).  [resolve(1136,a,746,a)].

given #364 (T,wt=6): 1163 less(A,f1(succ(A),c1)).  [resolve(1136,a,452,a)].

given #365 (T,wt=6): 1164 less(A,succ(f1(A,c1))).  [resolve(1136,a,451,a)].

given #366 (T,wt=7): 1137 less(pred(pred(A)),f1(A,c2)).  [resolve(1135,a,765,a)].

given #367 (A,wt=13): 479 pred(A) = A | clockOrder(pred(A)) = in1 | clockOrder(A) != in2.  [para(106(a,1),151(c,1,1)),rewrite([106(2)]),flip(a)].

given #368 (T,wt=7): 1138 less(A,f1(succ(succ(A)),c2)).  [resolve(1135,a,760,a)].

given #369 (T,wt=7): 1139 less(A,succ(succ(f1(A,c2)))).  [resolve(1135,a,759,a)].

given #370 (T,wt=7): 1140 less(pred(A),f1(succ(A),c2)).  [resolve(1135,a,754,a)].

given #371 (T,wt=7): 1155 less(pred(pred(A)),f1(A,c1)).  [resolve(1136,a,765,a)].

given #372 (A,wt=13): 480 clockOrder(A) = in2 | succ(A) = A | clockOrder(succ(A)) = in2.  [resolve(152,b,150,b)].

given #373 (T,wt=7): 1156 less(A,f1(succ(succ(A)),c1)).  [resolve(1136,a,760,a)].

given #374 (T,wt=7): 1157 less(A,succ(succ(f1(A,c1)))).  [resolve(1136,a,759,a)].

given #375 (T,wt=7): 1158 less(pred(A),f1(succ(A),c1)).  [resolve(1136,a,754,a)].

given #376 (T,wt=7): 1172 less(pred(A),succ(f1(A,c2))).  [resolve(1141,a,451,a)].

given #377 (A,wt=10): 481 free(A,path0) | -at(A,B,C) | s1 = C.  [resolve(162,b,138,b)].

given #378 (T,wt=6): 1306 free(A,path0) | free(A,path3).  [resolve(481,b,168,b),unit_del(b,129)].

given #379 (T,wt=6): 1307 free(A,path0) | free(A,path1).  [resolve(481,b,164,b),unit_del(b,129)].

given #380 (T,wt=7): 1182 less(A,succ(f1(succ(A),c2))).  [resolve(1145,a,451,a)].

given #381 (T,wt=7): 1202 less(pred(A),succ(f1(A,c1))).  [resolve(1159,a,451,a)].

given #382 (A,wt=10): 484 free(A,path1) | -at(A,B,C) | s2 = C.  [resolve(164,b,138,b)].

given #383 (T,wt=6): 1332 free(A,path1) | free(A,path2).  [resolve(484,b,166,b),flip(b),unit_del(b,129)].

given #384 (T,wt=7): 1212 less(A,succ(f1(succ(A),c1))).  [resolve(1163,a,451,a)].

given #385 (T,wt=7): 1298 free(pred(A),path0) | free(A,path0).  [resolve(481,b,1104,a),flip(b),unit_del(b,125)].

given #386 (T,wt=7): 1299 free(pred(A),path0) | free(A,path2).  [resolve(481,b,1103,a),flip(b),unit_del(b,125)].

given #387 (A,wt=10): 489 free(A,path2) | -at(A,B,C) | s1 = C.  [resolve(166,b,138,b)].

given #388 (T,wt=6): 1350 free(A,path2) | free(A,path3).  [resolve(489,b,168,b),unit_del(b,129)].

given #389 (T,wt=7): 1300 free(pred(A),path0) | free(A,path1).  [resolve(481,b,1077,a),flip(b),unit_del(b,121)].

given #390 (T,wt=7): 1301 free(pred(A),path0) | free(A,path3).  [resolve(481,b,1076,a),flip(b),unit_del(b,121)].

given #391 (T,wt=7): 1302 free(A,path0) | free(succ(A),path3).  [resolve(481,b,495,b),flip(b),unit_del(b,121)].

given #392 (A,wt=10): 494 free(A,path3) | -at(A,B,C) | s2 = C.  [resolve(168,b,138,b)].

given #393 (T,wt=7): 1303 free(A,path0) | free(succ(A),path2).  [resolve(481,b,490,b),flip(b),unit_del(b,125)].

given #394 (T,wt=7): 1304 free(A,path0) | free(succ(A),path1).  [resolve(481,b,485,b),flip(b),unit_del(b,121)].

given #395 (T,wt=7): 1305 free(A,path0) | free(succ(A),path0).  [resolve(481,b,482,b),flip(b),unit_del(b,125)].

given #396 (T,wt=7): 1324 free(pred(A),path1) | free(A,path0).  [resolve(484,b,1104,a),flip(b),unit_del(b,124)].

given #397 (A,wt=11): 497 -configuration(A,B) | configuration(pred(A),B) | toBeUsed(pred(A),B).  [para(106(a,1),231(a,1))].

given #398 (T,wt=7): 1325 free(pred(A),path1) | free(A,path2).  [resolve(484,b,1103,a),flip(b),unit_del(b,124)].

given #399 (T,wt=7): 1326 free(pred(A),path1) | free(A,path1).  [resolve(484,b,1077,a),flip(b),unit_del(b,120)].

given #400 (T,wt=7): 1327 free(pred(A),path1) | free(A,path3).  [resolve(484,b,1076,a),flip(b),unit_del(b,120)].

given #401 (T,wt=7): 1328 free(A,path1) | free(succ(A),path3).  [resolve(484,b,495,b),flip(b),unit_del(b,120)].

given #402 (A,wt=11): 498 -configuration(A,B) | -free(pred(A),B) | toBeUsed(pred(A),B).  [para(106(a,1),232(a,1))].

given #403 (T,wt=7): 1329 free(A,path1) | free(succ(A),path2).  [resolve(484,b,490,b),flip(b),unit_del(b,124)].

given #404 (T,wt=7): 1330 free(A,path1) | free(succ(A),path1).  [resolve(484,b,485,b),flip(b),unit_del(b,120)].

given #405 (T,wt=7): 1331 free(A,path1) | free(succ(A),path0).  [resolve(484,b,482,b),flip(b),unit_del(b,124)].

given #406 (T,wt=7): 1342 free(A,path0) | free(pred(A),path2).  [resolve(1298,a,488,b)].

given #407 (A,wt=11): 499 -open(A,in2) | toBeUsed(pred(A),path1) | toBeUsed(pred(A),path3).  [para(106(a,1),235(a,1))].

given #408 (T,wt=7): 1343 free(A,path2) | free(pred(A),path2).  [resolve(1299,a,488,b)].

given #409 (T,wt=7): 1344 free(pred(A),path2) | free(A,path1).  [resolve(489,b,1077,a),flip(b),unit_del(b,121)].

given #410 (T,wt=7): 1345 free(pred(A),path2) | free(A,path3).  [resolve(489,b,1076,a),flip(b),unit_del(b,121)].

given #411 (T,wt=7): 1346 free(A,path2) | free(succ(A),path3).  [resolve(489,b,495,b),flip(b),unit_del(b,121)].

given #412 (A,wt=11): 500 -open(A,in1) | toBeUsed(pred(A),path0) | toBeUsed(pred(A),path2).  [para(106(a,1),238(a,1))].

given #413 (T,wt=7): 1347 free(A,path2) | free(succ(A),path2).  [resolve(489,b,490,b),flip(b),unit_del(b,125)].

given #414 (T,wt=7): 1348 free(A,path2) | free(succ(A),path1).  [resolve(489,b,485,b),flip(b),unit_del(b,121)].

given #415 (T,wt=7): 1349 free(A,path2) | free(succ(A),path0).  [resolve(489,b,482,b),flip(b),unit_del(b,125)].

given #416 (T,wt=7): 1354 free(pred(A),path3) | free(A,path0).  [resolve(494,b,1104,a),flip(b),unit_del(b,124)].

given #417 (A,wt=9): 505 less(A,f1(A,B)) | free(succ(C),path3).  [resolve(246,a,168,b)].

given #418 (T,wt=7): 1355 free(pred(A),path3) | free(A,path2).  [resolve(494,b,1103,a),flip(b),unit_del(b,124)].

given #419 (T,wt=7): 1356 free(pred(A),path3) | free(A,path1).  [resolve(494,b,1077,a),flip(b),unit_del(b,120)].

given #420 (T,wt=7): 1357 free(pred(A),path3) | free(A,path3).  [resolve(494,b,1076,a),flip(b),unit_del(b,120)].

given #421 (T,wt=7): 1358 free(A,path3) | free(succ(A),path3).  [resolve(494,b,495,b),flip(b),unit_del(b,120)].

given #422 (A,wt=9): 506 less(A,f1(A,B)) | free(succ(C),path1).  [resolve(246,a,164,b)].

given #423 (T,wt=7): 1359 free(A,path3) | free(succ(A),path2).  [resolve(494,b,490,b),flip(b),unit_del(b,124)].

given #424 (T,wt=7): 1360 free(A,path3) | free(succ(A),path1).  [resolve(494,b,485,b),flip(b),unit_del(b,120)].

given #425 (T,wt=7): 1361 free(A,path3) | free(succ(A),path0).  [resolve(494,b,482,b),flip(b),unit_del(b,124)].

given #426 (T,wt=8): 1147 less(A,f1(B,c2)) | less(B,A).  [resolve(1135,a,450,b)].

given #427 (A,wt=9): 507 -at(A,B,s2) | less(C,f1(C,B)).  [para(106(a,1),246(a,1))].

given #428 (T,wt=8): 1148 -less(A,B) | less(A,f1(B,c2)).  [resolve(1135,a,101,b)].

given #429 (T,wt=7): 1453 less(A,f1(f1(A,c1),c2)).  [resolve(1148,a,1136,a)].

given #430 (T,wt=7): 1454 less(A,f1(f1(A,c2),c2)).  [resolve(1148,a,1135,a)].

given #431 (T,wt=8): 1149 -less(f1(A,c2),B) | less(A,B).  [resolve(1135,a,101,a)].

given #432 (A,wt=9): 508 less(A,f1(A,B)) | free(succ(C),path2).  [resolve(247,a,166,b)].

given #433 (T,wt=7): 1499 less(A,f1(f1(A,c2),c1)).  [resolve(1149,a,1136,a)].

given #434 (T,wt=8): 1165 less(A,f1(B,c1)) | less(B,A).  [resolve(1136,a,450,b)].

given #435 (T,wt=8): 1166 -less(A,B) | less(A,f1(B,c1)).  [resolve(1136,a,101,b)].

given #436 (T,wt=7): 1564 less(A,f1(f1(A,c1),c1)).  [resolve(1166,a,1136,a)].

given #437 (A,wt=9): 509 less(A,f1(A,B)) | free(succ(C),path0).  [resolve(247,a,162,b)].

given #438 (T,wt=8): 1167 -less(f1(A,c1),B) | less(A,B).  [resolve(1136,a,101,a)].

given #439 (T,wt=8): 1169 less(pred(pred(pred(A))),f1(A,c2)).  [resolve(1141,a,765,a)].

given #440 (T,wt=8): 1170 less(pred(A),succ(succ(f1(A,c2)))).  [resolve(1141,a,759,a)].

given #441 (T,wt=8): 1177 less(pred(pred(A)),f1(succ(A),c2)).  [resolve(1145,a,765,a)].

given #442 (A,wt=9): 510 -at(A,B,s1) | less(C,f1(C,B)).  [para(106(a,1),247(a,1))].

given #443 (T,wt=8): 1178 less(A,f1(succ(succ(succ(A))),c2)).  [resolve(1145,a,760,a)].

given #444 (T,wt=8): 1179 less(A,succ(succ(f1(succ(A),c2)))).  [resolve(1145,a,759,a)].

given #445 (T,wt=8): 1180 less(pred(A),f1(succ(succ(A)),c2)).  [resolve(1145,a,754,a)].

given #446 (T,wt=8): 1187 less(pred(pred(A)),succ(f1(A,c2))).  [resolve(1146,a,765,a)].

given #447 (A,wt=17): 511 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,out2).  [para(106(a,1),248(a,1)),rewrite([106(10)])].

given #448 (T,wt=8): 1188 less(A,succ(f1(succ(succ(A)),c2))).  [resolve(1146,a,760,a)].

given #449 (T,wt=8): 1189 less(A,succ(succ(succ(f1(A,c2))))).  [resolve(1146,a,759,a)].

given #450 (T,wt=8): 1190 less(pred(A),succ(f1(succ(A),c2))).  [resolve(1146,a,754,a)].

given #451 (T,wt=8): 1199 less(pred(pred(pred(A))),f1(A,c1)).  [resolve(1159,a,765,a)].

given #452 (A,wt=17): 512 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,out1).  [para(106(a,1),249(a,1)),rewrite([106(10)])].

given #453 (T,wt=8): 1200 less(pred(A),succ(succ(f1(A,c1)))).  [resolve(1159,a,759,a)].

given #454 (T,wt=8): 1207 less(pred(pred(A)),f1(succ(A),c1)).  [resolve(1163,a,765,a)].

given #455 (T,wt=8): 1208 less(A,f1(succ(succ(succ(A))),c1)).  [resolve(1163,a,760,a)].

given #456 (T,wt=8): 1209 less(A,succ(succ(f1(succ(A),c1)))).  [resolve(1163,a,759,a)].

given #457 (A,wt=17): 513 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,s2).  [para(106(a,1),250(a,1)),rewrite([106(10)])].

given #458 (T,wt=8): 1210 less(pred(A),f1(succ(succ(A)),c1)).  [resolve(1163,a,754,a)].

given #459 (T,wt=8): 1217 less(pred(pred(A)),succ(f1(A,c1))).  [resolve(1164,a,765,a)].

given #460 (T,wt=8): 1218 less(A,succ(f1(succ(succ(A)),c1))).  [resolve(1164,a,760,a)].

given #461 (T,wt=8): 1219 less(A,succ(succ(succ(f1(A,c1))))).  [resolve(1164,a,759,a)].

given #462 (A,wt=17): 514 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,s1).  [para(106(a,1),251(a,1)),rewrite([106(10)])].

given #463 (T,wt=8): 1220 less(pred(A),succ(f1(succ(A),c1))).  [resolve(1164,a,754,a)].

given #464 (T,wt=8): 1431 less(A,f1(A,B)) | free(C,path3).  [resolve(507,a,168,b)].

given #465 (T,wt=8): 1432 less(A,f1(A,B)) | free(C,path1).  [resolve(507,a,164,b)].

given #466 (T,wt=8): 1437 less(A,f1(succ(f1(A,c1)),c2)).  [resolve(1148,a,1164,a)].

given #467 (A,wt=17): 515 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,out2).  [para(106(a,1),252(a,1)),rewrite([106(10)])].

given #468 (T,wt=8): 1438 less(A,f1(f1(succ(A),c1),c2)).  [resolve(1148,a,1163,a)].

given #469 (T,wt=8): 1439 less(pred(A),f1(f1(A,c1),c2)).  [resolve(1148,a,1159,a)].

given #470 (T,wt=8): 1446 less(A,f1(succ(f1(A,c2)),c2)).  [resolve(1148,a,1146,a)].

given #471 (T,wt=8): 1447 less(A,f1(f1(succ(A),c2),c2)).  [resolve(1148,a,1145,a)].

given #472 (A,wt=17): 516 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,out1).  [para(106(a,1),253(a,1)),rewrite([106(10)])].

given #473 (T,wt=8): 1448 less(pred(A),f1(f1(A,c2),c2)).  [resolve(1148,a,1141,a)].

given #474 (T,wt=8): 1478 less(A,succ(f1(f1(A,c1),c2))).  [resolve(1453,a,451,a)].

given #475 (T,wt=8): 1488 less(A,succ(f1(f1(A,c2),c2))).  [resolve(1454,a,451,a)].

given #476 (T,wt=8): 1495 less(A,succ(f1(f1(A,c2),c1))).  [resolve(1149,a,1164,a)].

given #477 (A,wt=17): 517 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,s2).  [para(106(a,1),254(a,1)),rewrite([106(10)])].

given #478 (T,wt=8): 1496 less(A,f1(succ(f1(A,c2)),c1)).  [resolve(1149,a,1163,a)].

given #479 (T,wt=8): 1527 less(pred(A),f1(f1(A,c2),c1)).  [resolve(1499,a,746,a)].

given #480 (T,wt=8): 1531 less(A,f1(f1(succ(A),c2),c1)).  [resolve(1499,a,452,a)].

given #481 (T,wt=8): 1557 less(A,f1(succ(f1(A,c1)),c1)).  [resolve(1166,a,1164,a)].

given #482 (A,wt=17): 518 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,s1).  [para(106(a,1),255(a,1)),rewrite([106(10)])].

given #483 (T,wt=8): 1558 less(A,f1(f1(succ(A),c1),c1)).  [resolve(1166,a,1163,a)].

given #484 (T,wt=8): 1559 less(pred(A),f1(f1(A,c1),c1)).  [resolve(1166,a,1159,a)].

given #485 (T,wt=8): 1590 less(A,succ(f1(f1(A,c1),c1))).  [resolve(1564,a,451,a)].

given #486 (T,wt=8): 1646 less(A,f1(A,B)) | free(C,path2).  [resolve(510,a,166,b)].

given #487 (A,wt=22): 519 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | at(A,B,in2) | -at(pred(A),B,in2).  [para(106(a,1),256(a,1)),rewrite([106(10)])].

given #488 (T,wt=8): 1647 less(A,f1(A,B)) | free(C,path0).  [resolve(510,a,162,b)].

given #489 (T,wt=9): 743 less(A,B) | less(C,A) | less(B,C).  [resolve(450,b,102,b)].

given #490 (T,wt=9): 768 less(A,succ(succ(B))) | less(pred(B),A).  [resolve(751,a,450,b)].

given #491 (T,wt=9): 769 -less(A,pred(B)) | less(A,succ(succ(B))).  [resolve(751,a,101,b)].

given #492 (A,wt=22): 520 at(A,B,in1) | -at(pred(A),B,in1) | -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2).  [para(106(a,1),257(c,1)),rewrite([106(2)])].

given #493 (T,wt=9): 770 -less(succ(succ(A)),B) | less(pred(A),B).  [resolve(751,a,101,a)].

given #494 (T,wt=9): 773 less(A,succ(succ(succ(B)))) | less(B,A).  [resolve(757,a,450,b)].

given #495 (T,wt=9): 774 -less(A,B) | less(A,succ(succ(succ(B)))).  [resolve(757,a,101,b)].

given #496 (T,wt=9): 775 -less(succ(succ(succ(A))),B) | less(A,B).  [resolve(757,a,101,a)].

given #497 (A,wt=22): 521 -at(A,B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),258(a,1))].

given #498 (T,wt=9): 778 less(A,succ(B)) | less(pred(pred(B)),A).  [resolve(762,a,450,b)].

given #499 (T,wt=9): 779 -less(A,pred(pred(B))) | less(A,succ(B)).  [resolve(762,a,101,b)].

given #500 (T,wt=9): 780 -less(succ(A),B) | less(pred(pred(A)),B).  [resolve(762,a,101,a)].

given #501 (T,wt=9): 784 less(A,B) | less(pred(pred(pred(B))),A).  [resolve(782,a,450,b)].

given #502 (A,wt=22): 522 -at(A,B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),259(a,1))].

given #503 (T,wt=9): 785 -less(A,pred(pred(pred(B)))) | less(A,B).  [resolve(782,a,101,b)].

given #504 (T,wt=9): 786 -less(A,B) | less(pred(pred(pred(A))),B).  [resolve(782,a,101,a)].

given #505 (T,wt=9): 803 less(succ(A),B) | less(pred(pred(B)),A).  [resolve(454,b,756,a)].

given #506 (T,wt=9): 805 less(succ(A),succ(succ(B))) | less(B,A).  [resolve(454,b,750,a)].

given #507 (A,wt=22): 531 -at(A,B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),284(a,1))].

given #508 (T,wt=9): 806 less(succ(A),succ(B)) | less(pred(B),A).  [resolve(454,b,748,a)].

given #509 (T,wt=9): 952 less(pred(A),B) | less(pred(B),succ(A)).  [resolve(752,a,746,a)].

given #510 (T,wt=9): 955 less(pred(A),succ(B)) | less(B,succ(A)).  [resolve(752,a,452,a)].

given #511 (T,wt=9): 960 less(pred(pred(pred(pred(pred(A))))),succ(A)).  [resolve(753,a,844,a)].

given #512 (A,wt=22): 532 -at(A,B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),285(a,1))].

given #513 (T,wt=9): 962 less(A,succ(B)) | less(pred(B),pred(A)).  [resolve(753,a,461,b)].

given #514 (T,wt=9): 963 less(pred(A),succ(succ(succ(succ(succ(A)))))).  [resolve(754,a,772,a)].

given #515 (T,wt=9): 965 less(A,B) | less(pred(B),succ(succ(A))).  [resolve(758,a,746,a)].

given #516 (T,wt=9): 968 less(A,succ(B)) | less(B,succ(succ(A))).  [resolve(758,a,452,a)].

given #517 (A,wt=21): 541 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out2) | at(succ(A),B,in2).  [para(106(a,1),312(d,1))].

given #518 (T,wt=9): 975 less(pred(pred(pred(pred(A)))),succ(succ(A))).  [resolve(759,a,844,a)].

given #519 (T,wt=9): 976 less(pred(pred(pred(A))),succ(succ(succ(A)))).  [resolve(759,a,783,a)].

given #520 (T,wt=9): 977 less(pred(pred(A)),succ(succ(succ(succ(A))))).  [resolve(759,a,777,a)].

given #521 (T,wt=9): 978 less(A,succ(succ(succ(succ(succ(succ(A))))))).  [resolve(759,a,772,a)].

given #522 (A,wt=25): 542 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [para(106(a,1),313(d,1))].

given #523 (T,wt=9): 980 less(A,succ(succ(B))) | less(B,pred(A)).  [resolve(759,a,461,b)].

given #524 (T,wt=9): 983 less(pred(pred(A)),B) | less(pred(B),A).  [resolve(763,a,746,a)].

given #525 (T,wt=9): 986 less(pred(pred(A)),succ(B)) | less(B,A).  [resolve(763,a,452,a)].

given #526 (T,wt=9): 991 less(pred(pred(pred(pred(pred(pred(A)))))),A).  [resolve(764,a,844,a)].

given #527 (A,wt=21): 543 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out1) | at(succ(A),B,in2).  [para(106(a,1),318(d,1))].

given #528 (T,wt=9): 993 less(A,B) | less(pred(pred(B)),pred(A)).  [resolve(764,a,461,b)].

given #529 (T,wt=9): 1143 less(succ(A),B) | less(B,f1(A,c2)).  [resolve(1135,a,455,b)].

given #530 (T,wt=9): 1144 less(succ(A),f1(B,c2)) | less(B,A).  [resolve(1135,a,454,b)].

given #531 (T,wt=9): 1161 less(succ(A),B) | less(B,f1(A,c1)).  [resolve(1136,a,455,b)].

given #532 (A,wt=25): 544 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [para(106(a,1),319(d,1))].

given #533 (T,wt=9): 1162 less(succ(A),f1(B,c1)) | less(B,A).  [resolve(1136,a,454,b)].

given #534 (T,wt=9): 1173 less(A,f1(B,c2)) | less(pred(B),A).  [resolve(1141,a,450,b)].

given #535 (T,wt=9): 1174 -less(A,pred(B)) | less(A,f1(B,c2)).  [resolve(1141,a,101,b)].

given #536 (T,wt=9): 1175 -less(f1(A,c2),B) | less(pred(A),B).  [resolve(1141,a,101,a)].

given #537 (A,wt=22): 545 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path3).  [resolve(321,a,168,b)].

given #538 (T,wt=9): 1183 less(A,f1(succ(B),c2)) | less(B,A).  [resolve(1145,a,450,b)].

given #539 (T,wt=9): 1184 -less(A,B) | less(A,f1(succ(B),c2)).  [resolve(1145,a,101,b)].

given #540 (T,wt=9): 1185 -less(f1(succ(A),c2),B) | less(A,B).  [resolve(1145,a,101,a)].

given #541 (T,wt=9): 1194 less(A,succ(f1(B,c2))) | less(B,A).  [resolve(1146,a,450,b)].

given #542 (A,wt=22): 546 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path1).  [resolve(321,a,164,b)].

given #543 (T,wt=9): 1195 -less(A,B) | less(A,succ(f1(B,c2))).  [resolve(1146,a,101,b)].

given #544 (T,wt=9): 1196 -less(succ(f1(A,c2)),B) | less(A,B).  [resolve(1146,a,101,a)].

given #545 (T,wt=9): 1203 less(A,f1(B,c1)) | less(pred(B),A).  [resolve(1159,a,450,b)].

given #546 (T,wt=9): 1204 -less(A,pred(B)) | less(A,f1(B,c1)).  [resolve(1159,a,101,b)].

given #547 (A,wt=22): 547 -at(A,B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),321(a,1))].

given #548 (T,wt=9): 1205 -less(f1(A,c1),B) | less(pred(A),B).  [resolve(1159,a,101,a)].

given #549 (T,wt=9): 1213 less(A,f1(succ(B),c1)) | less(B,A).  [resolve(1163,a,450,b)].

given #550 (T,wt=9): 1214 -less(A,B) | less(A,f1(succ(B),c1)).  [resolve(1163,a,101,b)].

given #551 (T,wt=9): 1215 -less(f1(succ(A),c1),B) | less(A,B).  [resolve(1163,a,101,a)].

given #552 (A,wt=22): 548 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path3).  [resolve(322,a,168,b)].

given #553 (T,wt=9): 1224 less(A,succ(f1(B,c1))) | less(B,A).  [resolve(1164,a,450,b)].

given #554 (T,wt=9): 1225 -less(A,B) | less(A,succ(f1(B,c1))).  [resolve(1164,a,101,b)].

given #555 (T,wt=9): 1226 -less(succ(f1(A,c1)),B) | less(A,B).  [resolve(1164,a,101,a)].

given #556 (T,wt=9): 1228 less(pred(pred(pred(pred(A)))),f1(A,c2)).  [resolve(1137,a,765,a)].

given #557 (A,wt=22): 549 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path1).  [resolve(322,a,164,b)].

given #558 (T,wt=9): 1229 less(pred(pred(A)),succ(succ(f1(A,c2)))).  [resolve(1137,a,759,a)].

given #559 (T,wt=9): 1235 less(pred(pred(A)),f1(succ(succ(A)),c2)).  [resolve(1138,a,765,a)].

given #560 (T,wt=9): 1236 less(A,f1(succ(succ(succ(succ(A)))),c2)).  [resolve(1138,a,760,a)].

given #561 (T,wt=9): 1237 less(A,succ(succ(f1(succ(succ(A)),c2)))).  [resolve(1138,a,759,a)].

given #562 (A,wt=22): 550 -at(A,B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),322(a,1))].

given #563 (T,wt=9): 1238 less(pred(A),f1(succ(succ(succ(A))),c2)).  [resolve(1138,a,754,a)].

given #564 (T,wt=9): 1244 less(A,succ(succ(succ(succ(f1(A,c2)))))).  [resolve(1139,a,759,a)].

given #565 (T,wt=9): 1245 less(pred(A),succ(succ(f1(succ(A),c2)))).  [resolve(1139,a,754,a)].

given #566 (T,wt=9): 1253 less(pred(pred(pred(A))),f1(succ(A),c2)).  [resolve(1140,a,765,a)].

given #567 (A,wt=23): 560 -at(A,B,s2) | switch(A,s2) != out2 | at(succ(A),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(559,a,c)].

given #568 (T,wt=9): 1259 less(pred(pred(pred(pred(A)))),f1(A,c1)).  [resolve(1155,a,765,a)].

given #569 (T,wt=9): 1260 less(pred(pred(A)),succ(succ(f1(A,c1)))).  [resolve(1155,a,759,a)].

given #570 (T,wt=9): 1267 less(pred(pred(A)),f1(succ(succ(A)),c1)).  [resolve(1156,a,765,a)].

given #571 (T,wt=9): 1268 less(A,f1(succ(succ(succ(succ(A)))),c1)).  [resolve(1156,a,760,a)].

given #572 (A,wt=23): 564 -at(A,B,s2) | switch(A,s2) != out2 | at(succ(A),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(563,a,c)].

given #573 (T,wt=9): 1269 less(A,succ(succ(f1(succ(succ(A)),c1)))).  [resolve(1156,a,759,a)].

given #574 (T,wt=9): 1270 less(pred(A),f1(succ(succ(succ(A))),c1)).  [resolve(1156,a,754,a)].

given #575 (T,wt=9): 1276 less(A,succ(succ(succ(succ(f1(A,c1)))))).  [resolve(1157,a,759,a)].

given #576 (T,wt=9): 1277 less(pred(A),succ(succ(f1(succ(A),c1)))).  [resolve(1157,a,754,a)].

given #577 (A,wt=23): 574 -at(A,B,s2) | switch(A,s2) != out1 | at(succ(A),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(573,a,c)].

given #578 (T,wt=9): 1285 less(pred(pred(pred(A))),f1(succ(A),c1)).  [resolve(1158,a,765,a)].

given #579 (T,wt=9): 1291 less(pred(pred(pred(A))),succ(f1(A,c2))).  [resolve(1172,a,765,a)].

given #580 (T,wt=9): 1292 less(pred(A),succ(succ(succ(f1(A,c2))))).  [resolve(1172,a,759,a)].

given #581 (T,wt=9): 1308 less(pred(pred(A)),succ(f1(succ(A),c2))).  [resolve(1182,a,765,a)].

given #582 (A,wt=23): 578 -at(A,B,s2) | switch(A,s2) != out1 | at(succ(A),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(577,a,c)].

given #583 (T,wt=9): 1309 less(A,succ(f1(succ(succ(succ(A))),c2))).  [resolve(1182,a,760,a)].

given #584 (T,wt=9): 1310 less(A,succ(succ(succ(f1(succ(A),c2))))).  [resolve(1182,a,759,a)].

given #585 (T,wt=9): 1311 less(pred(A),succ(f1(succ(succ(A)),c2))).  [resolve(1182,a,754,a)].

given #586 (T,wt=9): 1317 less(pred(pred(pred(A))),succ(f1(A,c1))).  [resolve(1202,a,765,a)].

given #587 (A,wt=21): 579 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path3).  [resolve(345,a,168,b)].

given #588 (T,wt=9): 1318 less(pred(A),succ(succ(succ(f1(A,c1))))).  [resolve(1202,a,759,a)].

given #589 (T,wt=9): 1333 less(pred(pred(A)),succ(f1(succ(A),c1))).  [resolve(1212,a,765,a)].

given #590 (T,wt=9): 1334 less(A,succ(f1(succ(succ(succ(A))),c1))).  [resolve(1212,a,760,a)].

given #591 (T,wt=9): 1335 less(A,succ(succ(succ(f1(succ(A),c1))))).  [resolve(1212,a,759,a)].

given #592 (A,wt=21): 580 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path1).  [resolve(345,a,164,b)].

given #593 (T,wt=9): 1336 less(pred(A),succ(f1(succ(succ(A)),c1))).  [resolve(1212,a,754,a)].

given #594 (T,wt=9): 1422 less(A,B) | less(pred(B),f1(A,c2)).  [resolve(1147,a,746,a)].

given #595 (T,wt=9): 1425 less(A,succ(B)) | less(B,f1(A,c2)).  [resolve(1147,a,452,a)].

given #596 (T,wt=9): 1433 less(A,f1(succ(f1(succ(A),c1)),c2)).  [resolve(1148,a,1212,a)].

given #597 (A,wt=21): 581 -at(A,B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [para(106(a,1),345(a,1))].

given #598 (T,wt=9): 1434 less(pred(A),f1(succ(f1(A,c1)),c2)).  [resolve(1148,a,1202,a)].

given #599 (T,wt=9): 1435 less(A,f1(succ(f1(succ(A),c2)),c2)).  [resolve(1148,a,1182,a)].

given #600 (T,wt=9): 1436 less(pred(A),f1(succ(f1(A,c2)),c2)).  [resolve(1148,a,1172,a)].

given #601 (T,wt=9): 1440 less(pred(A),f1(f1(succ(A),c1),c2)).  [resolve(1148,a,1158,a)].

given #602 (A,wt=25): 582 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path3).  [resolve(346,a,168,b)].

given #603 (T,wt=9): 1441 less(A,f1(succ(succ(f1(A,c1))),c2)).  [resolve(1148,a,1157,a)].

given #604 (T,wt=9): 1442 less(A,f1(f1(succ(succ(A)),c1),c2)).  [resolve(1148,a,1156,a)].

given #605 (T,wt=9): 1443 less(pred(pred(A)),f1(f1(A,c1),c2)).  [resolve(1148,a,1155,a)].

given #606 (T,wt=9): 1449 less(pred(A),f1(f1(succ(A),c2),c2)).  [resolve(1148,a,1140,a)].

given #607 (A,wt=25): 583 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path1).  [resolve(346,a,164,b)].

given #608 (T,wt=9): 1450 less(A,f1(succ(succ(f1(A,c2))),c2)).  [resolve(1148,a,1139,a)].

given #609 (T,wt=9): 1451 less(A,f1(f1(succ(succ(A)),c2),c2)).  [resolve(1148,a,1138,a)].

given #610 (T,wt=9): 1452 less(pred(pred(A)),f1(f1(A,c2),c2)).  [resolve(1148,a,1137,a)].

given #611 (T,wt=9): 1471 less(A,f1(B,c2)) | less(B,pred(A)).  [resolve(1148,a,461,b)].

given #612 (A,wt=25): 584 -at(A,B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [para(106(a,1),346(a,1))].

given #613 (T,wt=9): 1472 less(A,f1(pred(B),c2)) | less(B,A).  [resolve(1148,a,461,a)].

given #614 (T,wt=9): 1473 less(A,f1(f1(f1(A,c1),c2),c2)).  [resolve(1453,a,1148,a)].

given #615 (T,wt=9): 1474 less(A,succ(succ(f1(f1(A,c1),c2)))).  [resolve(1453,a,759,a)].

given #616 (T,wt=9): 1483 less(A,f1(f1(f1(A,c2),c2),c2)).  [resolve(1454,a,1148,a)].

given #617 (A,wt=25): 585 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [para(106(a,1),351(d,1))].

given #618 (T,wt=9): 1484 less(A,succ(succ(f1(f1(A,c2),c2)))).  [resolve(1454,a,759,a)].

given #619 (T,wt=9): 1492 less(A,f1(f1(f1(A,c2),c1),c2)).  [resolve(1149,a,1453,a)].

given #620 (T,wt=9): 1493 less(A,succ(f1(succ(f1(A,c2)),c1))).  [resolve(1149,a,1212,a)].

given #621 (T,wt=9): 1494 less(A,succ(f1(succ(f1(A,c2)),c2))).  [resolve(1149,a,1182,a)].

given #622 (A,wt=21): 586 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out2) | at(succ(A),B,in1).  [para(106(a,1),353(d,1))].

given #623 (T,wt=9): 1497 less(A,succ(succ(f1(f1(A,c2),c1)))).  [resolve(1149,a,1157,a)].

given #624 (T,wt=9): 1498 less(A,f1(succ(succ(f1(A,c2))),c1)).  [resolve(1149,a,1156,a)].

given #625 (T,wt=9): 1506 less(A,B) | less(B,pred(f1(A,c2))).  [resolve(1149,a,461,b)].

given #626 (T,wt=9): 1523 less(A,f1(f1(f1(A,c2),c2),c1)).  [resolve(1499,a,1149,a)].

given #627 (A,wt=25): 587 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [para(106(a,1),357(d,1))].

given #628 (T,wt=9): 1524 less(pred(pred(A)),f1(f1(A,c2),c1)).  [resolve(1499,a,765,a)].

given #629 (T,wt=9): 1525 less(A,f1(f1(succ(succ(A)),c2),c1)).  [resolve(1499,a,760,a)].

given #630 (T,wt=9): 1526 less(pred(A),f1(f1(succ(A),c2),c1)).  [resolve(1499,a,754,a)].

given #631 (T,wt=9): 1540 less(A,B) | less(pred(B),f1(A,c1)).  [resolve(1165,a,746,a)].

given #632 (A,wt=21): 588 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out1) | at(succ(A),B,in1).  [para(106(a,1),359(d,1))].

given #633 (T,wt=9): 1543 less(A,succ(B)) | less(B,f1(A,c1)).  [resolve(1165,a,452,a)].

given #634 (T,wt=9): 1549 less(A,f1(f1(f1(A,c2),c1),c1)).  [resolve(1166,a,1499,a)].

given #635 (T,wt=9): 1550 less(A,f1(f1(f1(A,c1),c2),c1)).  [resolve(1166,a,1453,a)].

given #636 (T,wt=9): 1551 less(A,f1(succ(f1(succ(A),c1)),c1)).  [resolve(1166,a,1212,a)].

given #637 (A,wt=25): 589 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path3).  [resolve(362,d,168,b)].

given #638 (T,wt=9): 1552 less(pred(A),f1(succ(f1(A,c1)),c1)).  [resolve(1166,a,1202,a)].

given #639 (T,wt=9): 1553 less(A,f1(succ(f1(succ(A),c2)),c1)).  [resolve(1166,a,1182,a)].

given #640 (T,wt=9): 1554 less(pred(A),f1(succ(f1(A,c2)),c1)).  [resolve(1166,a,1172,a)].

given #641 (T,wt=9): 1560 less(pred(A),f1(f1(succ(A),c1),c1)).  [resolve(1166,a,1158,a)].

given #642 (A,wt=25): 590 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path1).  [resolve(362,d,164,b)].

given #643 (T,wt=9): 1561 less(A,f1(succ(succ(f1(A,c1))),c1)).  [resolve(1166,a,1157,a)].

given #644 (T,wt=9): 1562 less(A,f1(f1(succ(succ(A)),c1),c1)).  [resolve(1166,a,1156,a)].

given #645 (T,wt=9): 1563 less(pred(pred(A)),f1(f1(A,c1),c1)).  [resolve(1166,a,1155,a)].

given #646 (T,wt=9): 1582 less(A,f1(B,c1)) | less(B,pred(A)).  [resolve(1166,a,461,b)].

given #647 (A,wt=25): 591 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [para(106(a,1),362(d,1))].

given #648 (T,wt=9): 1583 less(A,f1(pred(B),c1)) | less(B,A).  [resolve(1166,a,461,a)].

given #649 (T,wt=9): 1584 less(A,f1(f1(f1(A,c1),c1),c1)).  [resolve(1564,a,1166,a)].

given #650 (T,wt=9): 1585 less(A,f1(f1(f1(A,c1),c1),c2)).  [resolve(1564,a,1148,a)].

given #651 (T,wt=9): 1586 less(A,succ(succ(f1(f1(A,c1),c1)))).  [resolve(1564,a,759,a)].

given #652 (A,wt=21): 592 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path3).  [resolve(364,d,168,b)].

given #653 (T,wt=9): 1611 less(A,succ(f1(succ(f1(A,c1)),c1))).  [resolve(1167,a,1212,a)].

given #654 (T,wt=9): 1612 less(A,succ(f1(succ(f1(A,c1)),c2))).  [resolve(1167,a,1182,a)].

given #655 (T,wt=9): 1621 less(A,B) | less(B,pred(f1(A,c1))).  [resolve(1167,a,461,b)].

given #656 (T,wt=9): 1832 free(A,path3) | less(pred(B),f1(B,C)).  [resolve(1431,a,746,a)].

given #657 (A,wt=21): 593 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path1).  [resolve(364,d,164,b)].

given #658 (T,wt=9): 1836 free(A,path3) | less(B,f1(succ(B),C)).  [resolve(1431,a,452,a)].

given #659 (T,wt=9): 1837 free(A,path3) | less(B,succ(f1(B,C))).  [resolve(1431,a,451,a)].

given #660 (T,wt=9): 1850 free(A,path1) | less(pred(B),f1(B,C)).  [resolve(1432,a,746,a)].

given #661 (T,wt=9): 1854 free(A,path1) | less(B,f1(succ(B),C)).  [resolve(1432,a,452,a)].

given #662 (A,wt=21): 594 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,s2) | at(succ(A),B,in1).  [para(106(a,1),364(d,1))].

given #663 (T,wt=9): 1855 free(A,path1) | less(B,succ(f1(B,C))).  [resolve(1432,a,451,a)].

given #664 (T,wt=9): 1881 less(A,succ(f1(f1(succ(A),c1),c2))).  [resolve(1438,a,451,a)].

given #665 (T,wt=9): 1890 less(pred(A),succ(f1(f1(A,c1),c2))).  [resolve(1439,a,451,a)].

given #666 (T,wt=9): 1910 less(A,succ(f1(f1(succ(A),c2),c2))).  [resolve(1447,a,451,a)].

given #667 (A,wt=22): 595 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path2).  [resolve(366,a,166,b)].

given #668 (T,wt=9): 1923 less(pred(A),succ(f1(f1(A,c2),c2))).  [resolve(1448,a,451,a)].

given #669 (T,wt=9): 1960 less(pred(A),succ(f1(f1(A,c2),c1))).  [resolve(1495,a,746,a)].

given #670 (T,wt=9): 1964 less(A,succ(f1(f1(succ(A),c2),c1))).  [resolve(1495,a,452,a)].

given #671 (T,wt=9): 2014 less(A,succ(f1(f1(succ(A),c1),c1))).  [resolve(1558,a,451,a)].

given #672 (A,wt=22): 596 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path0).  [resolve(366,a,162,b)].

given #673 (T,wt=9): 2023 less(pred(A),succ(f1(f1(A,c1),c1))).  [resolve(1559,a,451,a)].

given #674 (T,wt=9): 2048 free(A,path2) | less(pred(B),f1(B,C)).  [resolve(1646,a,746,a)].

given #675 (T,wt=9): 2052 free(A,path2) | less(B,f1(succ(B),C)).  [resolve(1646,a,452,a)].

given #676 (T,wt=9): 2053 free(A,path2) | less(B,succ(f1(B,C))).  [resolve(1646,a,451,a)].

given #677 (A,wt=22): 597 -at(A,B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),366(a,1))].

given #678 (T,wt=9): 2068 free(A,path0) | less(pred(B),f1(B,C)).  [resolve(1647,a,746,a)].

given #679 (T,wt=9): 2072 free(A,path0) | less(B,f1(succ(B),C)).  [resolve(1647,a,452,a)].

given #680 (T,wt=9): 2073 free(A,path0) | less(B,succ(f1(B,C))).  [resolve(1647,a,451,a)].

given #681 (T,wt=10): 741 less(A,B) | less(succ(C),A) | less(B,C).  [resolve(450,b,104,b)].

given #682 (A,wt=22): 598 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path2).  [resolve(367,a,166,b)].

given #683 (T,wt=10): 755 -less(succ(A),pred(A)) | pred(A) = succ(A).  [resolve(748,a,100,b)].

given #684 (T,wt=10): 761 -less(succ(succ(A)),A) | succ(succ(A)) = A.  [resolve(750,a,100,b),flip(b)].

given #685 (T,wt=10): 766 -less(A,pred(pred(A))) | pred(pred(A)) = A.  [resolve(756,a,100,b)].

given #686 (T,wt=10): 789 less(A,B) | less(C,pred(A)) | less(B,C).  [resolve(461,a,450,b)].

given #687 (A,wt=22): 599 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path0).  [resolve(367,a,162,b)].

given #688 (T,wt=10): 790 less(A,B) | -less(C,B) | less(C,pred(A)).  [resolve(461,a,101,b)].

given #689 (T,wt=10): 791 less(A,B) | -less(pred(A),C) | less(B,C).  [resolve(461,a,101,a)].

given #690 (T,wt=10): 793 less(A,pred(B)) | -less(C,B) | less(C,A).  [resolve(461,b,101,b)].

given #691 (T,wt=10): 794 less(A,pred(B)) | -less(A,B) | B = A.  [resolve(461,b,100,b)].

given #692 (A,wt=22): 600 -at(A,B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),367(a,1))].

given #693 (T,wt=10): 795 less(A,pred(B)) | -less(A,B) | A = B.  [resolve(461,b,100,a)].

given #694 (T,wt=10): 800 less(succ(A),B) | less(pred(pred(pred(B))),A).  [resolve(454,b,782,a)].

given #695 (T,wt=10): 801 less(succ(A),succ(B)) | less(pred(pred(B)),A).  [resolve(454,b,762,a)].

given #696 (T,wt=10): 802 less(succ(A),succ(succ(succ(B)))) | less(B,A).  [resolve(454,b,757,a)].

given #697 (A,wt=23): 604 -at(A,B,s1) | switch(A,s1) != out2 | at(succ(A),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(603,a,c)].

given #698 (T,wt=10): 804 less(succ(A),succ(succ(B))) | less(pred(B),A).  [resolve(454,b,751,a)].

given #699 (T,wt=10): 832 less(A,B) | less(C,succ(A)) | less(B,C).  [resolve(742,a,450,b)].

given #700 (T,wt=10): 833 less(A,B) | -less(C,B) | less(C,succ(A)).  [resolve(742,a,101,b)].

given #701 (T,wt=10): 834 less(A,B) | -less(succ(A),C) | less(B,C).  [resolve(742,a,101,a)].

given #702 (A,wt=23): 608 -at(A,B,s1) | switch(A,s1) != out2 | at(succ(A),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(607,a,c)].

given #703 (T,wt=10): 835 less(A,succ(B)) | -less(C,B) | less(C,A).  [resolve(742,b,101,b)].

given #704 (T,wt=10): 840 less(pred(A),B) | less(C,A) | less(B,C).  [resolve(744,a,450,b)].

given #705 (T,wt=10): 841 less(pred(A),B) | -less(C,B) | less(C,A).  [resolve(744,a,101,b)].

given #706 (T,wt=10): 842 less(pred(A),B) | -less(A,C) | less(B,C).  [resolve(744,a,101,a)].

given #707 (A,wt=23): 612 -at(A,B,s1) | switch(A,s1) != out1 | at(succ(A),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(611,a,c)].

given #708 (T,wt=10): 843 less(A,B) | -less(C,pred(B)) | less(C,A).  [resolve(744,b,101,b)].

given #709 (T,wt=10): 850 less(A,succ(succ(succ(B)))) | less(pred(B),A).  [resolve(767,a,450,b)].

given #710 (T,wt=10): 851 -less(A,pred(B)) | less(A,succ(succ(succ(B)))).  [resolve(767,a,101,b)].

given #711 (T,wt=10): 852 -less(succ(succ(succ(A))),B) | less(pred(A),B).  [resolve(767,a,101,a)].

given #712 (A,wt=23): 616 -at(A,B,s1) | switch(A,s1) != out1 | at(succ(A),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(615,a,c)].

given #713 (T,wt=10): 856 less(A,succ(succ(succ(succ(B))))) | less(B,A).  [resolve(772,a,450,b)].

given #714 (T,wt=10): 857 -less(A,B) | less(A,succ(succ(succ(succ(B))))).  [resolve(772,a,101,b)].

given #715 (T,wt=10): 858 -less(succ(succ(succ(succ(A)))),B) | less(A,B).  [resolve(772,a,101,a)].

given #716 (T,wt=10): 862 less(A,succ(succ(B))) | less(pred(pred(B)),A).  [resolve(777,a,450,b)].

given #717 (A,wt=21): 617 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path2).  [resolve(386,a,166,b)].

given #718 (T,wt=10): 863 -less(A,pred(pred(B))) | less(A,succ(succ(B))).  [resolve(777,a,101,b)].

given #719 (T,wt=10): 864 -less(succ(succ(A)),B) | less(pred(pred(A)),B).  [resolve(777,a,101,a)].

given #720 (T,wt=10): 868 less(A,succ(B)) | less(pred(pred(pred(B))),A).  [resolve(783,a,450,b)].

given #721 (T,wt=10): 869 -less(A,pred(pred(pred(B)))) | less(A,succ(B)).  [resolve(783,a,101,b)].

given #722 (A,wt=21): 618 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path0).  [resolve(386,a,162,b)].

given #723 (T,wt=10): 870 -less(succ(A),B) | less(pred(pred(pred(A))),B).  [resolve(783,a,101,a)].

given #724 (T,wt=10): 880 less(A,B) | less(pred(pred(pred(pred(B)))),A).  [resolve(844,a,450,b)].

given #725 (T,wt=10): 881 -less(A,pred(pred(pred(pred(B))))) | less(A,B).  [resolve(844,a,101,b)].

given #726 (T,wt=10): 882 -less(A,B) | less(pred(pred(pred(pred(A)))),B).  [resolve(844,a,101,a)].

given #727 (A,wt=21): 619 -at(A,B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [para(106(a,1),386(a,1))].

given #728 (T,wt=10): 961 less(pred(A),succ(B)) | less(pred(B),succ(A)).  [resolve(753,a,752,b)].

given #729 (T,wt=10): 964 less(A,succ(B)) | less(pred(B),succ(succ(A))).  [resolve(758,a,754,a)].

given #730 (T,wt=10): 979 less(A,succ(succ(B))) | less(B,succ(succ(A))).  [resolve(759,a,758,b)].

given #731 (T,wt=10): 981 less(pred(pred(A)),succ(succ(B))) | less(B,A).  [resolve(763,a,760,a)].

given #732 (A,wt=25): 620 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path2).  [resolve(387,a,166,b)].

given #733 (T,wt=10): 982 less(pred(pred(A)),succ(B)) | less(pred(B),A).  [resolve(763,a,754,a)].

given #734 (T,wt=10): 992 less(pred(pred(A)),B) | less(pred(pred(B)),A).  [resolve(764,a,763,b)].

given #735 (T,wt=10): 996 less(A,pred(B)) | less(B,succ(succ(succ(A)))).  [resolve(788,a,759,a)].

given #736 (T,wt=10): 1004 less(A,succ(B)) | less(pred(pred(B)),pred(A)).  [resolve(788,b,765,a)].

given #737 (A,wt=25): 621 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path0).  [resolve(387,a,162,b)].

given #738 (T,wt=10): 1005 less(A,succ(succ(B))) | less(pred(B),pred(A)).  [resolve(788,b,754,a)].

given #739 (T,wt=10): 1022 less(A,succ(B)) | less(pred(pred(B)),succ(A)).  [resolve(831,a,765,a)].

given #740 (T,wt=10): 1023 less(A,succ(succ(succ(B)))) | less(B,succ(A)).  [resolve(831,a,760,a)].

given #741 (T,wt=10): 1024 less(A,succ(succ(B))) | less(pred(B),succ(A)).  [resolve(831,a,754,a)].

given #742 (A,wt=25): 622 -at(A,B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [para(106(a,1),387(a,1))].

given #743 (T,wt=10): 1030 at(pred(c3),c2,s1) | at(pred(c3),c2,s2).  [resolve(469,c,243,a)].

given #744 (T,wt=9): 6878 at(pred(c3),c2,s2) | -free(pred(c3),path2).  [resolve(1030,a,165,b)].

given #745 (T,wt=9): 6879 at(pred(c3),c2,s2) | -free(pred(c3),path0).  [resolve(1030,a,161,b)].

given #746 (T,wt=10): 1031 at(pred(c3),c1,s1) | at(pred(c3),c1,s2).  [resolve(469,c,241,a)].

given #747 (A,wt=25): 623 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path2).  [resolve(389,a,166,b)].

given #748 (T,wt=9): 6883 at(pred(c3),c1,s2) | -free(pred(c3),path2).  [resolve(1031,a,165,b)].

given #749 (T,wt=9): 6884 at(pred(c3),c1,s2) | -free(pred(c3),path0).  [resolve(1031,a,161,b)].

given #750 (T,wt=10): 1032 less(A,B) | less(pred(pred(pred(B))),succ(A)).  [resolve(839,a,765,a)].

given #751 (T,wt=10): 1033 less(A,B) | less(pred(B),succ(succ(succ(A)))).  [resolve(839,a,759,a)].

given #752 (A,wt=25): 624 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path0).  [resolve(389,a,162,b)].

given #753 (T,wt=10): 1039 less(pred(A),succ(B)) | less(pred(pred(B)),A).  [resolve(839,b,765,a)].

given #754 (T,wt=10): 1040 less(pred(A),succ(succ(B))) | less(pred(B),A).  [resolve(839,b,754,a)].

given #755 (T,wt=10): 1047 less(pred(A),B) | less(pred(pred(pred(B))),A).  [resolve(845,a,765,a)].

given #756 (T,wt=10): 1053 less(pred(pred(pred(A))),pred(B)) | less(B,A).  [resolve(846,a,764,a)].

given #757 (A,wt=25): 625 -at(A,B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [para(106(a,1),389(a,1))].

given #758 (T,wt=10): 1069 less(pred(pred(pred(pred(A)))),succ(succ(succ(A)))).  [resolve(847,a,765,a)].

given #759 (T,wt=10): 1070 less(pred(pred(A)),succ(succ(succ(succ(succ(A)))))).  [resolve(847,a,759,a)].

given #760 (T,wt=10): 1078 less(pred(pred(pred(A))),succ(succ(succ(succ(A))))).  [resolve(849,a,765,a)].

given #761 (T,wt=10): 1079 less(pred(A),succ(succ(succ(succ(succ(succ(A))))))).  [resolve(849,a,759,a)].

given #762 (A,wt=21): 626 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path2).  [resolve(391,a,166,b)].

given #763 (T,wt=10): 1085 less(A,succ(succ(succ(succ(succ(succ(succ(A)))))))).  [resolve(855,a,760,a)].

given #764 (T,wt=10): 1091 less(pred(pred(pred(pred(pred(A))))),succ(succ(A))).  [resolve(860,a,765,a)].

given #765 (T,wt=10): 1097 less(pred(pred(pred(pred(pred(pred(A)))))),succ(A)).  [resolve(866,a,765,a)].

given #766 (T,wt=10): 1105 less(pred(pred(pred(pred(pred(pred(pred(A))))))),A).  [resolve(878,a,765,a)].

given #767 (A,wt=21): 627 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path0).  [resolve(391,a,162,b)].

given #768 (T,wt=10): 1150 -less(f1(A,c2),A) | f1(A,c2) = A.  [resolve(1135,a,100,b),flip(b)].

given #769 (T,wt=10): 1168 -less(f1(A,c1),A) | f1(A,c1) = A.  [resolve(1136,a,100,b),flip(b)].

given #770 (T,wt=10): 1171 less(succ(A),f1(B,c2)) | less(pred(B),A).  [resolve(1141,a,454,b)].

given #771 (T,wt=10): 1181 less(succ(A),f1(succ(B),c2)) | less(B,A).  [resolve(1145,a,454,b)].

given #772 (A,wt=21): 628 -at(A,B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [para(106(a,1),391(a,1))].

given #773 (T,wt=10): 1192 less(succ(A),B) | less(B,succ(f1(A,c2))).  [resolve(1146,a,455,b)].

given #774 (T,wt=10): 1193 less(succ(A),succ(f1(B,c2))) | less(B,A).  [resolve(1146,a,454,b)].

given #775 (T,wt=10): 1201 less(succ(A),f1(B,c1)) | less(pred(B),A).  [resolve(1159,a,454,b)].

given #776 (T,wt=10): 1211 less(succ(A),f1(succ(B),c1)) | less(B,A).  [resolve(1163,a,454,b)].

given #777 (A,wt=24): 629 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path2).  [resolve(394,c,166,b)].

given #778 (T,wt=10): 1222 less(succ(A),B) | less(B,succ(f1(A,c1))).  [resolve(1164,a,455,b)].

given #779 (T,wt=10): 1223 less(succ(A),succ(f1(B,c1))) | less(B,A).  [resolve(1164,a,454,b)].

given #780 (T,wt=10): 1231 less(A,f1(B,c2)) | less(pred(pred(B)),A).  [resolve(1137,a,450,b)].

given #781 (T,wt=10): 1232 -less(A,pred(pred(B))) | less(A,f1(B,c2)).  [resolve(1137,a,101,b)].

given #782 (A,wt=24): 630 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path0).  [resolve(394,c,162,b)].

given #783 (T,wt=10): 1233 -less(f1(A,c2),B) | less(pred(pred(A)),B).  [resolve(1137,a,101,a)].

given #784 (T,wt=10): 1240 less(A,f1(succ(succ(B)),c2)) | less(B,A).  [resolve(1138,a,450,b)].

given #785 (T,wt=10): 1241 -less(A,B) | less(A,f1(succ(succ(B)),c2)).  [resolve(1138,a,101,b)].

given #786 (T,wt=10): 1242 -less(f1(succ(succ(A)),c2),B) | less(A,B).  [resolve(1138,a,101,a)].

given #787 (A,wt=24): 632 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path3).  [resolve(395,c,168,b)].

given #788 (T,wt=10): 1249 less(A,succ(succ(f1(B,c2)))) | less(B,A).  [resolve(1139,a,450,b)].

given #789 (T,wt=10): 1250 -less(A,B) | less(A,succ(succ(f1(B,c2)))).  [resolve(1139,a,101,b)].

given #790 (T,wt=10): 1251 -less(succ(succ(f1(A,c2))),B) | less(A,B).  [resolve(1139,a,101,a)].

given #791 (T,wt=10): 1255 less(A,f1(succ(B),c2)) | less(pred(B),A).  [resolve(1140,a,450,b)].

given #792 (A,wt=24): 633 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path1).  [resolve(395,c,164,b)].

given #793 (T,wt=10): 1256 -less(A,pred(B)) | less(A,f1(succ(B),c2)).  [resolve(1140,a,101,b)].

given #794 (T,wt=10): 1257 -less(f1(succ(A),c2),B) | less(pred(A),B).  [resolve(1140,a,101,a)].

given #795 (T,wt=10): 1262 less(A,f1(B,c1)) | less(pred(pred(B)),A).  [resolve(1155,a,450,b)].

given #796 (T,wt=10): 1263 -less(A,pred(pred(B))) | less(A,f1(B,c1)).  [resolve(1155,a,101,b)].

given #797 (A,wt=19): 635 switch(pred(A),s1) != out1 | -at(pred(A),B,s1) | at(A,B,out1) | -at(A,B,out2).  [para(106(a,1),396(d,1)),rewrite([106(10)])].

given #798 (T,wt=10): 1264 -less(f1(A,c1),B) | less(pred(pred(A)),B).  [resolve(1155,a,101,a)].

given #799 (T,wt=10): 1272 less(A,f1(succ(succ(B)),c1)) | less(B,A).  [resolve(1156,a,450,b)].

given #800 (T,wt=10): 1273 -less(A,B) | less(A,f1(succ(succ(B)),c1)).  [resolve(1156,a,101,b)].

given #801 (T,wt=10): 1274 -less(f1(succ(succ(A)),c1),B) | less(A,B).  [resolve(1156,a,101,a)].

given #802 (A,wt=24): 636 switch(f1(A,B),s1) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path2).  [resolve(397,b,166,b)].

given #803 (T,wt=10): 1281 less(A,succ(succ(f1(B,c1)))) | less(B,A).  [resolve(1157,a,450,b)].

given #804 (T,wt=10): 1282 -less(A,B) | less(A,succ(succ(f1(B,c1)))).  [resolve(1157,a,101,b)].

given #805 (T,wt=10): 1283 -less(succ(succ(f1(A,c1))),B) | less(A,B).  [resolve(1157,a,101,a)].

given #806 (T,wt=10): 1287 less(A,f1(succ(B),c1)) | less(pred(B),A).  [resolve(1158,a,450,b)].

given #807 (A,wt=24): 637 switch(f1(A,B),s1) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path0).  [resolve(397,b,162,b)].

given #808 (T,wt=10): 1288 -less(A,pred(B)) | less(A,f1(succ(B),c1)).  [resolve(1158,a,101,b)].

given #809 (T,wt=10): 1289 -less(f1(succ(A),c1),B) | less(pred(A),B).  [resolve(1158,a,101,a)].

given #810 (T,wt=10): 1294 less(A,succ(f1(B,c2))) | less(pred(B),A).  [resolve(1172,a,450,b)].

given #811 (T,wt=10): 1295 -less(A,pred(B)) | less(A,succ(f1(B,c2))).  [resolve(1172,a,101,b)].

given #812 (A,wt=19): 639 switch(pred(A),s2) != out1 | -at(pred(A),B,s2) | at(A,B,out1) | -at(A,B,out2).  [para(106(a,1),398(d,1)),rewrite([106(10)])].

given #813 (T,wt=10): 1296 -less(succ(f1(A,c2)),B) | less(pred(A),B).  [resolve(1172,a,101,a)].

given #814 (T,wt=10): 1313 less(A,succ(f1(succ(B),c2))) | less(B,A).  [resolve(1182,a,450,b)].

given #815 (T,wt=10): 1314 -less(A,B) | less(A,succ(f1(succ(B),c2))).  [resolve(1182,a,101,b)].

given #816 (T,wt=10): 1315 -less(succ(f1(succ(A),c2)),B) | less(A,B).  [resolve(1182,a,101,a)].

given #817 (A,wt=24): 640 switch(f1(A,B),s2) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path3).  [resolve(399,b,168,b)].

given #818 (T,wt=10): 1320 less(A,succ(f1(B,c1))) | less(pred(B),A).  [resolve(1202,a,450,b)].

given #819 (T,wt=10): 1321 -less(A,pred(B)) | less(A,succ(f1(B,c1))).  [resolve(1202,a,101,b)].

given #820 (T,wt=10): 1322 -less(succ(f1(A,c1)),B) | less(pred(A),B).  [resolve(1202,a,101,a)].

given #821 (T,wt=10): 1338 less(A,succ(f1(succ(B),c1))) | less(B,A).  [resolve(1212,a,450,b)].

given #822 (A,wt=24): 641 switch(f1(A,B),s2) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path1).  [resolve(399,b,164,b)].

given #823 (T,wt=10): 1339 -less(A,B) | less(A,succ(f1(succ(B),c1))).  [resolve(1212,a,101,b)].

given #824 (T,wt=10): 1340 -less(succ(f1(succ(A),c1)),B) | less(A,B).  [resolve(1212,a,101,a)].

given #825 (T,wt=10): 1419 less(A,B) | less(pred(pred(B)),f1(A,c2)).  [resolve(1147,a,765,a)].

given #826 (T,wt=10): 1420 less(A,succ(succ(B))) | less(B,f1(A,c2)).  [resolve(1147,a,760,a)].

given #827 (A,wt=19): 643 -at(A,B,out1) | switch(pred(A),s1) != out2 | -at(pred(A),B,s1) | at(A,B,out2).  [para(106(a,1),400(a,1)),rewrite([106(12)])].

given #828 (T,wt=10): 1421 less(A,succ(B)) | less(pred(B),f1(A,c2)).  [resolve(1147,a,754,a)].

given #829 (T,wt=10): 1444 less(A,f1(B,c2)) | less(B,f1(A,c2)).  [resolve(1148,a,1147,b)].

given #830 (T,wt=10): 1445 less(A,f1(f1(B,c2),c2)) | less(B,A).  [resolve(1148,a,1147,a)].

given #831 (T,wt=10): 1455 less(pred(pred(pred(pred(pred(A))))),f1(A,c2)).  [resolve(1148,a,878,a)].

given #832 (A,wt=24): 644 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path2).  [resolve(401,c,166,b)].

given #833 (T,wt=10): 1456 less(pred(pred(pred(pred(A)))),f1(succ(A),c2)).  [resolve(1148,a,866,a)].

given #834 (T,wt=10): 1457 less(pred(pred(pred(A))),f1(succ(succ(A)),c2)).  [resolve(1148,a,860,a)].

given #835 (T,wt=10): 1458 less(A,f1(succ(succ(succ(succ(succ(A))))),c2)).  [resolve(1148,a,855,a)].

given #836 (T,wt=10): 1459 less(pred(A),f1(succ(succ(succ(succ(A)))),c2)).  [resolve(1148,a,849,a)].

given #837 (A,wt=24): 645 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path0).  [resolve(401,c,162,b)].

given #838 (T,wt=10): 1460 less(pred(pred(A)),f1(succ(succ(succ(A))),c2)).  [resolve(1148,a,847,a)].

given #839 (T,wt=10): 1461 less(pred(A),f1(pred(B),c2)) | less(B,A).  [resolve(1148,a,846,b)].

given #840 (T,wt=10): 1462 less(A,f1(B,c2)) | less(pred(B),pred(A)).  [resolve(1148,a,846,a)].

given #841 (T,wt=10): 1463 less(pred(A),f1(B,c2)) | less(pred(B),A).  [resolve(1148,a,845,b)].

given #842 (A,wt=19): 647 -at(A,B,out1) | switch(pred(A),s2) != out2 | -at(pred(A),B,s2) | at(A,B,out2).  [para(106(a,1),402(a,1)),rewrite([106(12)])].

given #843 (T,wt=10): 1464 less(A,f1(B,c2)) | less(pred(B),succ(A)).  [resolve(1148,a,839,b)].

given #844 (T,wt=10): 1465 less(pred(A),f1(succ(B),c2)) | less(B,A).  [resolve(1148,a,839,a)].

given #845 (T,wt=10): 1466 less(A,f1(succ(B),c2)) | less(B,succ(A)).  [resolve(1148,a,831,b)].

given #846 (T,wt=10): 1467 less(pred(A),f1(B,c2)) | less(succ(B),A).  [resolve(1148,a,809,b)].

given #847 (A,wt=24): 648 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path3).  [resolve(403,c,168,b)].

given #848 (T,wt=10): 1468 less(A,f1(pred(B),c2)) | less(B,succ(A)).  [resolve(1148,a,788,b)].

given #849 (T,wt=10): 1469 less(A,f1(succ(B),c2)) | less(B,pred(A)).  [resolve(1148,a,788,a)].

given #850 (T,wt=10): 1470 less(A,f1(B,c2)) | less(succ(B),succ(A)).  [resolve(1148,a,749,b)].

given #851 (T,wt=10): 1479 less(A,f1(f1(B,c1),c2)) | less(B,A).  [resolve(1453,a,450,b)].

given #852 (A,wt=24): 649 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path1).  [resolve(403,c,164,b)].

given #853 (T,wt=10): 1480 -less(A,B) | less(A,f1(f1(B,c1),c2)).  [resolve(1453,a,101,b)].

given #854 (T,wt=10): 1481 -less(f1(f1(A,c1),c2),B) | less(A,B).  [resolve(1453,a,101,a)].

given #855 (T,wt=10): 1489 -less(A,B) | less(A,f1(f1(B,c2),c2)).  [resolve(1454,a,101,b)].

given #856 (T,wt=10): 1490 -less(f1(f1(A,c2),c2),B) | less(A,B).  [resolve(1454,a,101,a)].

given #857 (A,wt=24): 651 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path2).  [resolve(404,c,166,b)].

given #858 (T,wt=10): 1500 less(A,succ(succ(succ(succ(succ(f1(A,c2))))))).  [resolve(1149,a,855,a)].

given #859 (T,wt=10): 1501 less(A,B) | less(pred(B),pred(f1(A,c2))).  [resolve(1149,a,846,a)].

given #860 (T,wt=10): 1502 less(A,B) | less(pred(B),succ(f1(A,c2))).  [resolve(1149,a,839,b)].

given #861 (T,wt=10): 1503 less(A,succ(B)) | less(B,succ(f1(A,c2))).  [resolve(1149,a,831,b)].

given #862 (A,wt=24): 652 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path0).  [resolve(404,c,162,b)].

given #863 (T,wt=10): 1504 less(A,pred(B)) | less(B,succ(f1(A,c2))).  [resolve(1149,a,788,b)].

given #864 (T,wt=10): 1505 less(A,succ(B)) | less(B,pred(f1(A,c2))).  [resolve(1149,a,788,a)].

given #865 (T,wt=10): 1532 less(A,f1(f1(B,c2),c1)) | less(B,A).  [resolve(1499,a,450,b)].

given #866 (T,wt=10): 1533 -less(A,B) | less(A,f1(f1(B,c2),c1)).  [resolve(1499,a,101,b)].

given #867 (A,wt=24): 654 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path3).  [resolve(405,c,168,b)].

given #868 (T,wt=10): 1534 -less(f1(f1(A,c2),c1),B) | less(A,B).  [resolve(1499,a,101,a)].

given #869 (T,wt=10): 1536 less(A,f1(B,c2)) | less(B,f1(A,c1)).  [resolve(1165,a,1149,a)].

given #870 (T,wt=10): 1537 less(A,B) | less(pred(pred(B)),f1(A,c1)).  [resolve(1165,a,765,a)].

given #871 (T,wt=10): 1538 less(A,succ(succ(B))) | less(B,f1(A,c1)).  [resolve(1165,a,760,a)].

given #872 (A,wt=24): 655 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path1).  [resolve(405,c,164,b)].

given #873 (T,wt=10): 1539 less(A,succ(B)) | less(pred(B),f1(A,c1)).  [resolve(1165,a,754,a)].

given #874 (T,wt=10): 1555 less(A,f1(B,c1)) | less(B,f1(A,c1)).  [resolve(1166,a,1165,b)].

given #875 (T,wt=10): 1556 less(A,f1(f1(B,c1),c1)) | less(B,A).  [resolve(1166,a,1165,a)].

given #876 (T,wt=10): 1565 less(pred(pred(pred(pred(pred(A))))),f1(A,c1)).  [resolve(1166,a,878,a)].

given #877 (A,wt=17): 657 -open(pred(A),in2) | -at(pred(A),B,in2) | at(A,B,s2) | -at(A,B,out2).  [para(106(a,1),406(d,1)),rewrite([106(8)])].

given #878 (T,wt=10): 1566 less(pred(pred(pred(pred(A)))),f1(succ(A),c1)).  [resolve(1166,a,866,a)].

given #879 (T,wt=10): 1567 less(pred(pred(pred(A))),f1(succ(succ(A)),c1)).  [resolve(1166,a,860,a)].

given #880 (T,wt=10): 1568 less(A,f1(succ(succ(succ(succ(succ(A))))),c1)).  [resolve(1166,a,855,a)].

given #881 (T,wt=10): 1569 less(pred(A),f1(succ(succ(succ(succ(A)))),c1)).  [resolve(1166,a,849,a)].

Low Water (keep): wt=21.000, iters=6669

given #882 (A,wt=22): 658 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(C,B,out2).  [para(106(a,1),407(d,1))].

given #883 (T,wt=10): 1570 less(pred(pred(A)),f1(succ(succ(succ(A))),c1)).  [resolve(1166,a,847,a)].

given #884 (T,wt=10): 1571 less(pred(A),f1(pred(B),c1)) | less(B,A).  [resolve(1166,a,846,b)].

Low Water (keep): wt=20.000, iters=6708

given #885 (T,wt=10): 1572 less(A,f1(B,c1)) | less(pred(B),pred(A)).  [resolve(1166,a,846,a)].

given #886 (T,wt=10): 1573 less(pred(A),f1(B,c1)) | less(pred(B),A).  [resolve(1166,a,845,b)].

given #887 (A,wt=17): 659 -open(pred(A),in2) | -at(pred(A),B,in2) | at(A,B,s2) | -at(A,B,out1).  [para(106(a,1),408(d,1)),rewrite([106(8)])].

given #888 (T,wt=10): 1574 less(A,f1(B,c1)) | less(pred(B),succ(A)).  [resolve(1166,a,839,b)].

Low Water (keep): wt=18.000, iters=6671

given #889 (T,wt=10): 1575 less(pred(A),f1(succ(B),c1)) | less(B,A).  [resolve(1166,a,839,a)].

given #890 (T,wt=10): 1576 less(A,f1(succ(B),c1)) | less(B,succ(A)).  [resolve(1166,a,831,b)].

given #891 (T,wt=10): 1577 less(pred(A),f1(B,c1)) | less(succ(B),A).  [resolve(1166,a,809,b)].

given #892 (A,wt=22): 660 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(C,B,out1).  [para(106(a,1),409(d,1))].

given #893 (T,wt=10): 1578 less(A,f1(pred(B),c1)) | less(B,succ(A)).  [resolve(1166,a,788,b)].

Low Water (keep): wt=17.000, iters=6693

given #894 (T,wt=10): 1579 less(A,f1(succ(B),c1)) | less(B,pred(A)).  [resolve(1166,a,788,a)].

given #895 (T,wt=10): 1580 less(A,f1(B,c1)) | less(succ(B),succ(A)).  [resolve(1166,a,749,b)].

Low Water (keep): wt=16.000, iters=6690

given #896 (T,wt=10): 1591 -less(A,B) | less(A,f1(f1(B,c1),c1)).  [resolve(1564,a,101,b)].

given #897 (A,wt=18): 661 switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2) | free(succ(A),path3).  [resolve(410,a,168,b)].

given #898 (T,wt=10): 1592 -less(f1(f1(A,c1),c1),B) | less(A,B).  [resolve(1564,a,101,a)].

given #899 (T,wt=10): 1613 less(A,succ(succ(succ(succ(succ(f1(A,c1))))))).  [resolve(1167,a,855,a)].

Low Water (keep): wt=14.000, iters=6688

given #900 (T,wt=10): 1614 less(A,B) | less(pred(B),pred(f1(A,c1))).  [resolve(1167,a,846,a)].

given #901 (T,wt=10): 1615 less(A,B) | less(pred(B),succ(f1(A,c1))).  [resolve(1167,a,839,b)].

given #902 (A,wt=18): 662 switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2) | free(succ(A),path1).  [resolve(410,a,164,b)].

given #903 (T,wt=10): 1616 less(A,succ(B)) | less(B,succ(f1(A,c1))).  [resolve(1167,a,831,b)].

given #904 (T,wt=10): 1617 less(A,pred(B)) | less(B,succ(f1(A,c1))).  [resolve(1167,a,788,b)].

given #905 (T,wt=10): 1618 less(A,succ(B)) | less(B,pred(f1(A,c1))).  [resolve(1167,a,788,a)].

given #906 (T,wt=10): 1622 less(pred(pred(pred(A))),f1(f1(A,c2),c1)).  [resolve(1169,a,1166,a)].

given #907 (A,wt=19): 663 -at(A,B,s2) | switch(pred(A),s1) != out2 | -at(pred(A),B,s1) | at(A,B,out2).  [para(106(a,1),410(a,1)),rewrite([106(12)])].

given #908 (T,wt=10): 1623 less(pred(pred(pred(A))),f1(f1(A,c2),c2)).  [resolve(1169,a,1148,a)].

given #909 (T,wt=10): 1624 less(pred(pred(pred(A))),succ(succ(f1(A,c2)))).  [resolve(1169,a,759,a)].

given #910 (T,wt=10): 1630 less(pred(A),f1(succ(succ(f1(A,c2))),c1)).  [resolve(1170,a,1166,a)].

given #911 (T,wt=10): 1631 less(pred(A),f1(succ(succ(f1(A,c2))),c2)).  [resolve(1170,a,1148,a)].

given #912 (A,wt=24): 666 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path2).  [resolve(411,c,166,b)].

given #913 (T,wt=10): 1632 less(pred(A),succ(succ(succ(succ(f1(A,c2)))))).  [resolve(1170,a,759,a)].

given #914 (T,wt=10): 1638 less(pred(pred(A)),f1(f1(succ(A),c2),c1)).  [resolve(1177,a,1166,a)].

given #915 (T,wt=10): 1639 less(pred(pred(A)),f1(f1(succ(A),c2),c2)).  [resolve(1177,a,1148,a)].

given #916 (T,wt=10): 1640 less(pred(pred(A)),succ(succ(f1(succ(A),c2)))).  [resolve(1177,a,759,a)].

given #917 (A,wt=24): 667 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path0).  [resolve(411,c,162,b)].

given #918 (T,wt=10): 1648 less(A,f1(succ(succ(succ(f1(A,c1)))),c2)).  [resolve(1178,a,1167,a)].

given #919 (T,wt=10): 1649 less(A,f1(f1(succ(succ(succ(A))),c2),c1)).  [resolve(1178,a,1166,a)].

given #920 (T,wt=10): 1650 less(A,f1(succ(succ(succ(f1(A,c2)))),c2)).  [resolve(1178,a,1149,a)].

given #921 (T,wt=10): 1651 less(A,f1(f1(succ(succ(succ(A))),c2),c2)).  [resolve(1178,a,1148,a)].

given #922 (A,wt=18): 669 switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2) | free(succ(A),path3).  [resolve(413,a,168,b)].

given #923 (T,wt=10): 1652 less(A,succ(succ(f1(succ(succ(succ(A))),c2)))).  [resolve(1178,a,759,a)].

given #924 (T,wt=10): 1658 less(A,succ(succ(f1(succ(f1(A,c1)),c2)))).  [resolve(1179,a,1167,a)].

given #925 (T,wt=10): 1659 less(A,f1(succ(succ(f1(succ(A),c2))),c1)).  [resolve(1179,a,1166,a)].

given #926 (T,wt=10): 1660 less(A,succ(succ(f1(succ(f1(A,c2)),c2)))).  [resolve(1179,a,1149,a)].

given #927 (A,wt=18): 670 switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2) | free(succ(A),path1).  [resolve(413,a,164,b)].

given #928 (T,wt=10): 1661 less(A,f1(succ(succ(f1(succ(A),c2))),c2)).  [resolve(1179,a,1148,a)].

given #929 (T,wt=10): 1662 less(A,succ(succ(succ(succ(f1(succ(A),c2)))))).  [resolve(1179,a,759,a)].

given #930 (T,wt=10): 1663 less(pred(A),succ(succ(f1(succ(succ(A)),c2)))).  [resolve(1179,a,754,a)].

given #931 (T,wt=10): 1669 less(pred(A),f1(f1(succ(succ(A)),c2),c1)).  [resolve(1180,a,1166,a)].

given #932 (A,wt=19): 671 -at(A,B,s2) | switch(pred(A),s2) != out2 | -at(pred(A),B,s2) | at(A,B,out2).  [para(106(a,1),413(a,1)),rewrite([106(12)])].

given #933 (T,wt=10): 1670 less(pred(A),f1(f1(succ(succ(A)),c2),c2)).  [resolve(1180,a,1148,a)].

given #934 (T,wt=10): 1676 less(pred(pred(A)),f1(succ(f1(A,c2)),c1)).  [resolve(1187,a,1166,a)].

given #935 (T,wt=10): 1677 less(pred(pred(A)),f1(succ(f1(A,c2)),c2)).  [resolve(1187,a,1148,a)].

given #936 (T,wt=10): 1678 less(pred(pred(pred(pred(A)))),succ(f1(A,c2))).  [resolve(1187,a,765,a)].

given #937 (A,wt=24): 674 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path3).  [resolve(417,c,168,b)].

given #938 (T,wt=10): 1679 less(pred(pred(A)),succ(succ(succ(f1(A,c2))))).  [resolve(1187,a,759,a)].

given #939 (T,wt=10): 1689 less(A,succ(f1(succ(succ(f1(A,c1))),c2))).  [resolve(1188,a,1167,a)].

given #940 (T,wt=10): 1690 less(A,f1(succ(f1(succ(succ(A)),c2)),c1)).  [resolve(1188,a,1166,a)].

given #941 (T,wt=10): 1691 less(A,succ(f1(succ(succ(f1(A,c2))),c2))).  [resolve(1188,a,1149,a)].

given #942 (A,wt=24): 675 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path1).  [resolve(417,c,164,b)].

given #943 (T,wt=10): 1692 less(A,f1(succ(f1(succ(succ(A)),c2)),c2)).  [resolve(1188,a,1148,a)].

given #944 (T,wt=10): 1693 less(pred(pred(A)),succ(f1(succ(succ(A)),c2))).  [resolve(1188,a,765,a)].

given #945 (T,wt=10): 1694 less(A,succ(f1(succ(succ(succ(succ(A)))),c2))).  [resolve(1188,a,760,a)].

given #946 (T,wt=10): 1695 less(A,succ(succ(succ(f1(succ(succ(A)),c2))))).  [resolve(1188,a,759,a)].

given #947 (A,wt=20): 677 -at(f1(A,B),B,s2) | switch(f1(A,B),s2) != out2 | at(succ(f1(A,B)),B,out2).  [factor(676,a,c)].

given #948 (T,wt=10): 1696 less(pred(A),succ(f1(succ(succ(succ(A))),c2))).  [resolve(1188,a,754,a)].

given #949 (T,wt=10): 1702 less(A,succ(succ(succ(f1(f1(A,c1),c2))))).  [resolve(1189,a,1167,a)].

given #950 (T,wt=10): 1703 less(A,f1(succ(succ(succ(f1(A,c2)))),c1)).  [resolve(1189,a,1166,a)].

given #951 (T,wt=10): 1704 less(A,succ(succ(succ(f1(f1(A,c2),c2))))).  [resolve(1189,a,1149,a)].

given #952 (A,wt=18): 678 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | free(succ(A),path3).  [resolve(418,a,168,b)].

given #953 (T,wt=10): 1705 less(pred(A),succ(succ(succ(f1(succ(A),c2))))).  [resolve(1189,a,754,a)].

given #954 (T,wt=10): 1713 less(pred(A),f1(succ(f1(succ(A),c2)),c1)).  [resolve(1190,a,1166,a)].

given #955 (T,wt=10): 1714 less(pred(A),f1(succ(f1(succ(A),c2)),c2)).  [resolve(1190,a,1148,a)].

given #956 (T,wt=10): 1715 less(pred(pred(pred(A))),succ(f1(succ(A),c2))).  [resolve(1190,a,765,a)].

given #957 (A,wt=18): 679 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | free(succ(A),path1).  [resolve(418,a,164,b)].

given #958 (T,wt=10): 1721 less(pred(pred(pred(A))),f1(f1(A,c1),c1)).  [resolve(1199,a,1166,a)].

given #959 (T,wt=10): 1722 less(pred(pred(pred(A))),f1(f1(A,c1),c2)).  [resolve(1199,a,1148,a)].

given #960 (T,wt=10): 1723 less(pred(pred(pred(A))),succ(succ(f1(A,c1)))).  [resolve(1199,a,759,a)].

given #961 (T,wt=10): 1733 less(pred(A),f1(succ(succ(f1(A,c1))),c1)).  [resolve(1200,a,1166,a)].

given #962 (A,wt=19): 680 -at(A,B,s2) | switch(pred(A),s1) != out1 | -at(pred(A),B,s1) | at(A,B,out1).  [para(106(a,1),418(a,1)),rewrite([106(12)])].

given #963 (T,wt=10): 1734 less(pred(A),f1(succ(succ(f1(A,c1))),c2)).  [resolve(1200,a,1148,a)].

given #964 (T,wt=10): 1735 less(pred(A),succ(succ(succ(succ(f1(A,c1)))))).  [resolve(1200,a,759,a)].

given #965 (T,wt=10): 1741 less(pred(pred(A)),f1(f1(succ(A),c1),c1)).  [resolve(1207,a,1166,a)].

given #966 (T,wt=10): 1742 less(pred(pred(A)),f1(f1(succ(A),c1),c2)).  [resolve(1207,a,1148,a)].

given #967 (A,wt=24): 683 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path2).  [resolve(419,c,166,b)].

given #968 (T,wt=10): 1743 less(pred(pred(A)),succ(succ(f1(succ(A),c1)))).  [resolve(1207,a,759,a)].

given #969 (T,wt=10): 1749 less(A,f1(succ(succ(succ(f1(A,c1)))),c1)).  [resolve(1208,a,1167,a)].

given #970 (T,wt=10): 1750 less(A,f1(f1(succ(succ(succ(A))),c1),c1)).  [resolve(1208,a,1166,a)].

given #971 (T,wt=10): 1751 less(A,f1(f1(succ(succ(succ(A))),c1),c2)).  [resolve(1208,a,1148,a)].

given #972 (A,wt=24): 684 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path0).  [resolve(419,c,162,b)].

given #973 (T,wt=10): 1752 less(A,succ(succ(f1(succ(succ(succ(A))),c1)))).  [resolve(1208,a,759,a)].

given #974 (T,wt=10): 1758 less(A,succ(succ(f1(succ(f1(A,c1)),c1)))).  [resolve(1209,a,1167,a)].

given #975 (T,wt=10): 1759 less(A,f1(succ(succ(f1(succ(A),c1))),c1)).  [resolve(1209,a,1166,a)].

given #976 (T,wt=10): 1760 less(A,succ(succ(f1(succ(f1(A,c2)),c1)))).  [resolve(1209,a,1149,a)].

given #977 (A,wt=18): 686 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | free(succ(A),path3).  [resolve(421,a,168,b)].

given #978 (T,wt=10): 1761 less(A,f1(succ(succ(f1(succ(A),c1))),c2)).  [resolve(1209,a,1148,a)].

given #979 (T,wt=10): 1762 less(A,succ(succ(succ(succ(f1(succ(A),c1)))))).  [resolve(1209,a,759,a)].

given #980 (T,wt=10): 1763 less(pred(A),succ(succ(f1(succ(succ(A)),c1)))).  [resolve(1209,a,754,a)].

given #981 (T,wt=10): 1773 less(pred(A),f1(f1(succ(succ(A)),c1),c1)).  [resolve(1210,a,1166,a)].

given #982 (A,wt=18): 687 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | free(succ(A),path1).  [resolve(421,a,164,b)].

given #983 (T,wt=10): 1774 less(pred(A),f1(f1(succ(succ(A)),c1),c2)).  [resolve(1210,a,1148,a)].

given #984 (T,wt=10): 1780 less(pred(pred(A)),f1(succ(f1(A,c1)),c1)).  [resolve(1217,a,1166,a)].

given #985 (T,wt=10): 1781 less(pred(pred(A)),f1(succ(f1(A,c1)),c2)).  [resolve(1217,a,1148,a)].

given #986 (T,wt=10): 1782 less(pred(pred(pred(pred(A)))),succ(f1(A,c1))).  [resolve(1217,a,765,a)].

given #987 (A,wt=19): 688 -at(A,B,s2) | switch(pred(A),s2) != out1 | -at(pred(A),B,s2) | at(A,B,out1).  [para(106(a,1),421(a,1)),rewrite([106(12)])].

given #988 (T,wt=10): 1783 less(pred(pred(A)),succ(succ(succ(f1(A,c1))))).  [resolve(1217,a,759,a)].

given #989 (T,wt=10): 1789 less(A,succ(f1(succ(succ(f1(A,c1))),c1))).  [resolve(1218,a,1167,a)].

given #990 (T,wt=10): 1790 less(A,f1(succ(f1(succ(succ(A)),c1)),c1)).  [resolve(1218,a,1166,a)].

given #991 (T,wt=10): 1791 less(A,succ(f1(succ(succ(f1(A,c2))),c1))).  [resolve(1218,a,1149,a)].

given #992 (A,wt=24): 691 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path3).  [resolve(425,c,168,b)].

given #993 (T,wt=10): 1792 less(A,f1(succ(f1(succ(succ(A)),c1)),c2)).  [resolve(1218,a,1148,a)].

given #994 (T,wt=10): 1793 less(pred(pred(A)),succ(f1(succ(succ(A)),c1))).  [resolve(1218,a,765,a)].

given #995 (T,wt=10): 1794 less(A,succ(f1(succ(succ(succ(succ(A)))),c1))).  [resolve(1218,a,760,a)].

given #996 (T,wt=10): 1795 less(A,succ(succ(succ(f1(succ(succ(A)),c1))))).  [resolve(1218,a,759,a)].

given #997 (A,wt=24): 692 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path1).  [resolve(425,c,164,b)].

given #998 (T,wt=10): 1796 less(pred(A),succ(f1(succ(succ(succ(A))),c1))).  [resolve(1218,a,754,a)].

given #999 (T,wt=10): 1802 less(A,succ(succ(succ(f1(f1(A,c1),c1))))).  [resolve(1219,a,1167,a)].

given #1000 (T,wt=10): 1803 less(A,succ(succ(succ(f1(f1(A,c2),c1))))).  [resolve(1219,a,1149,a)].

given #1001 (T,wt=10): 1804 less(pred(A),succ(succ(succ(f1(succ(A),c1))))).  [resolve(1219,a,754,a)].

given #1002 (A,wt=20): 694 -at(f1(A,B),B,s2) | switch(f1(A,B),s2) != out1 | at(succ(f1(A,B)),B,out1).  [factor(693,a,c)].

given #1003 (T,wt=10): 1816 less(pred(A),f1(succ(f1(succ(A),c1)),c1)).  [resolve(1220,a,1166,a)].

given #1004 (T,wt=10): 1817 less(pred(A),f1(succ(f1(succ(A),c1)),c2)).  [resolve(1220,a,1148,a)].

given #1005 (T,wt=10): 1818 less(pred(pred(pred(A))),succ(f1(succ(A),c1))).  [resolve(1220,a,765,a)].

given #1006 (T,wt=10): 1824 free(A,path3) | less(B,f1(f1(B,c1),C)).  [resolve(1431,a,1167,a)].

given #1007 (A,wt=22): 695 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | free(succ(C),path3).  [resolve(426,a,168,b)].

given #1008 (T,wt=10): 1825 free(A,path3) | less(B,f1(f1(B,C),c1)).  [resolve(1431,a,1166,a)].

given #1009 (T,wt=10): 1826 free(A,path3) | less(B,f1(f1(B,c2),C)).  [resolve(1431,a,1149,a)].

given #1010 (T,wt=10): 1827 free(A,path3) | less(B,f1(f1(B,C),c2)).  [resolve(1431,a,1148,a)].

given #1011 (T,wt=10): 1828 free(A,path3) | less(pred(pred(B)),f1(B,C)).  [resolve(1431,a,765,a)].

given #1012 (A,wt=22): 696 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | free(succ(C),path1).  [resolve(426,a,164,b)].

given #1013 (T,wt=10): 1829 free(A,path3) | less(B,f1(succ(succ(B)),C)).  [resolve(1431,a,760,a)].

given #1014 (T,wt=10): 1830 free(A,path3) | less(B,succ(succ(f1(B,C)))).  [resolve(1431,a,759,a)].

given #1015 (T,wt=10): 1831 free(A,path3) | less(pred(B),f1(succ(B),C)).  [resolve(1431,a,754,a)].

given #1016 (T,wt=10): 1842 free(A,path1) | less(B,f1(f1(B,c1),C)).  [resolve(1432,a,1167,a)].

given #1017 (A,wt=22): 697 -at(A,B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [para(106(a,1),426(a,1))].

given #1018 (T,wt=10): 1843 free(A,path1) | less(B,f1(f1(B,C),c1)).  [resolve(1432,a,1166,a)].

given #1019 (T,wt=10): 1844 free(A,path1) | less(B,f1(f1(B,c2),C)).  [resolve(1432,a,1149,a)].

given #1020 (T,wt=10): 1845 free(A,path1) | less(B,f1(f1(B,C),c2)).  [resolve(1432,a,1148,a)].

given #1021 (T,wt=10): 1846 free(A,path1) | less(pred(pred(B)),f1(B,C)).  [resolve(1432,a,765,a)].

given #1022 (A,wt=17): 698 -open(pred(A),in1) | -at(pred(A),B,in1) | at(A,B,s1) | -at(A,B,out2).  [para(106(a,1),427(d,1)),rewrite([106(8)])].

given #1023 (T,wt=10): 1847 free(A,path1) | less(B,f1(succ(succ(B)),C)).  [resolve(1432,a,760,a)].

given #1024 (T,wt=10): 1848 free(A,path1) | less(B,succ(succ(f1(B,C)))).  [resolve(1432,a,759,a)].

given #1025 (T,wt=10): 1849 free(A,path1) | less(pred(B),f1(succ(B),C)).  [resolve(1432,a,754,a)].

given #1026 (T,wt=10): 1860 less(A,f1(succ(f1(f1(A,c1),c1)),c2)).  [resolve(1437,a,1167,a)].

given #1027 (A,wt=22): 699 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(C,B,out2).  [para(106(a,1),428(d,1))].

given #1028 (T,wt=10): 1861 less(A,f1(f1(succ(f1(A,c1)),c2),c1)).  [resolve(1437,a,1166,a)].

given #1029 (T,wt=10): 1862 less(A,f1(succ(f1(f1(A,c2),c1)),c2)).  [resolve(1437,a,1149,a)].

given #1030 (T,wt=10): 1863 less(A,f1(f1(succ(f1(A,c1)),c2),c2)).  [resolve(1437,a,1148,a)].

given #1031 (T,wt=10): 1875 less(A,f1(f1(succ(f1(A,c1)),c1),c2)).  [resolve(1438,a,1167,a)].

given #1032 (A,wt=17): 700 -open(pred(A),in1) | -at(pred(A),B,in1) | at(A,B,s1) | -at(A,B,out1).  [para(106(a,1),429(d,1)),rewrite([106(8)])].

given #1033 (T,wt=10): 1876 less(A,f1(f1(f1(succ(A),c1),c2),c1)).  [resolve(1438,a,1166,a)].

given #1034 (T,wt=10): 1877 less(A,f1(f1(succ(f1(A,c2)),c1),c2)).  [resolve(1438,a,1149,a)].

given #1035 (T,wt=10): 1878 less(A,f1(f1(f1(succ(A),c1),c2),c2)).  [resolve(1438,a,1148,a)].

given #1036 (T,wt=10): 1879 less(A,succ(succ(f1(f1(succ(A),c1),c2)))).  [resolve(1438,a,759,a)].

given #1037 (A,wt=22): 701 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(C,B,out1).  [para(106(a,1),430(d,1))].

given #1038 (T,wt=10): 1886 less(pred(A),f1(f1(f1(A,c1),c2),c1)).  [resolve(1439,a,1166,a)].

given #1039 (T,wt=10): 1887 less(pred(A),f1(f1(f1(A,c1),c2),c2)).  [resolve(1439,a,1148,a)].

given #1040 (T,wt=10): 1888 less(pred(A),succ(succ(f1(f1(A,c1),c2)))).  [resolve(1439,a,759,a)].

given #1041 (T,wt=10): 1895 less(A,f1(succ(f1(f1(A,c1),c2)),c2)).  [resolve(1446,a,1167,a)].

given #1042 (A,wt=16): 702 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | free(succ(A),path3).  [resolve(431,d,168,b)].

given #1043 (T,wt=10): 1896 less(A,f1(f1(succ(f1(A,c2)),c2),c1)).  [resolve(1446,a,1166,a)].

given #1044 (T,wt=10): 1897 less(A,f1(succ(f1(f1(A,c2),c2)),c2)).  [resolve(1446,a,1149,a)].

given #1045 (T,wt=10): 1898 less(A,f1(f1(succ(f1(A,c2)),c2),c2)).  [resolve(1446,a,1148,a)].

given #1046 (T,wt=10): 1906 less(A,f1(f1(f1(succ(A),c2),c2),c1)).  [resolve(1447,a,1166,a)].

given #1047 (A,wt=16): 703 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | free(succ(A),path1).  [resolve(431,d,164,b)].

given #1048 (T,wt=10): 1907 less(A,f1(f1(f1(succ(A),c2),c2),c2)).  [resolve(1447,a,1148,a)].

given #1049 (T,wt=10): 1908 less(A,succ(succ(f1(f1(succ(A),c2),c2)))).  [resolve(1447,a,759,a)].

given #1050 (T,wt=10): 1919 less(pred(A),f1(f1(f1(A,c2),c2),c1)).  [resolve(1448,a,1166,a)].

given #1051 (T,wt=10): 1920 less(pred(A),f1(f1(f1(A,c2),c2),c2)).  [resolve(1448,a,1148,a)].

given #1052 (A,wt=17): 704 -open(pred(A),in1) | -at(pred(A),B,in1) | at(A,B,s1) | -at(A,B,s2).  [para(106(a,1),431(d,1)),rewrite([106(8)])].

given #1053 (T,wt=10): 1921 less(pred(A),succ(succ(f1(f1(A,c2),c2)))).  [resolve(1448,a,759,a)].

given #1054 (T,wt=10): 1928 less(A,succ(f1(f1(f1(A,c1),c1),c2))).  [resolve(1478,a,1167,a)].

given #1055 (T,wt=10): 1929 less(A,f1(succ(f1(f1(A,c1),c2)),c1)).  [resolve(1478,a,1166,a)].

given #1056 (T,wt=10): 1930 less(A,succ(f1(f1(f1(A,c2),c1),c2))).  [resolve(1478,a,1149,a)].

given #1057 (A,wt=22): 705 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | free(succ(C),path3).  [resolve(432,d,168,b)].

given #1058 (T,wt=10): 1931 less(pred(pred(A)),succ(f1(f1(A,c1),c2))).  [resolve(1478,a,765,a)].

given #1059 (T,wt=10): 1932 less(A,succ(f1(f1(succ(succ(A)),c1),c2))).  [resolve(1478,a,760,a)].

given #1060 (T,wt=10): 1933 less(pred(A),succ(f1(f1(succ(A),c1),c2))).  [resolve(1478,a,754,a)].

given #1061 (T,wt=10): 1941 less(A,succ(f1(f1(f1(A,c1),c2),c2))).  [resolve(1488,a,1167,a)].

given #1062 (A,wt=22): 706 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | free(succ(C),path1).  [resolve(432,d,164,b)].

given #1063 (T,wt=10): 1942 less(A,f1(succ(f1(f1(A,c2),c2)),c1)).  [resolve(1488,a,1166,a)].

given #1064 (T,wt=10): 1943 less(A,succ(f1(f1(f1(A,c2),c2),c2))).  [resolve(1488,a,1149,a)].

given #1065 (T,wt=10): 1944 less(pred(pred(A)),succ(f1(f1(A,c2),c2))).  [resolve(1488,a,765,a)].

given #1066 (T,wt=10): 1945 less(A,succ(f1(f1(succ(succ(A)),c2),c2))).  [resolve(1488,a,760,a)].

given #1067 (A,wt=22): 707 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(C,B,s2).  [para(106(a,1),432(d,1))].

given #1068 (T,wt=10): 1946 less(pred(A),succ(f1(f1(succ(A),c2),c2))).  [resolve(1488,a,754,a)].

given #1069 (T,wt=10): 1954 less(A,succ(f1(f1(f1(A,c1),c2),c1))).  [resolve(1495,a,1167,a)].

given #1070 (T,wt=10): 1955 less(A,f1(succ(f1(f1(A,c2),c1)),c1)).  [resolve(1495,a,1166,a)].

given #1071 (T,wt=10): 1956 less(A,succ(f1(f1(f1(A,c2),c2),c1))).  [resolve(1495,a,1149,a)].

given #1072 (A,wt=18): 708 switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2) | free(succ(A),path2).  [resolve(434,a,166,b)].

given #1073 (T,wt=10): 1957 less(pred(pred(A)),succ(f1(f1(A,c2),c1))).  [resolve(1495,a,765,a)].

given #1074 (T,wt=10): 1958 less(A,succ(f1(f1(succ(succ(A)),c2),c1))).  [resolve(1495,a,760,a)].

given #1075 (T,wt=10): 1959 less(pred(A),succ(f1(f1(succ(A),c2),c1))).  [resolve(1495,a,754,a)].

given #1076 (T,wt=10): 1973 less(A,f1(f1(succ(f1(A,c2)),c1),c1)).  [resolve(1496,a,1166,a)].

given #1077 (A,wt=18): 709 switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2) | free(succ(A),path0).  [resolve(434,a,162,b)].

given #1078 (T,wt=10): 1981 less(pred(A),f1(f1(f1(A,c2),c1),c1)).  [resolve(1527,a,1166,a)].

given #1079 (T,wt=10): 1982 less(pred(A),f1(f1(f1(A,c2),c1),c2)).  [resolve(1527,a,1148,a)].

given #1080 (T,wt=10): 1983 less(pred(A),succ(succ(f1(f1(A,c2),c1)))).  [resolve(1527,a,759,a)].

given #1081 (T,wt=10): 1989 less(A,f1(f1(f1(succ(A),c2),c1),c1)).  [resolve(1531,a,1166,a)].

given #1082 (A,wt=19): 710 -at(A,B,s1) | switch(pred(A),s1) != out2 | -at(pred(A),B,s1) | at(A,B,out2).  [para(106(a,1),434(a,1)),rewrite([106(12)])].

given #1083 (T,wt=10): 1990 less(A,f1(f1(f1(succ(A),c2),c1),c2)).  [resolve(1531,a,1148,a)].

given #1084 (T,wt=10): 1991 less(A,succ(succ(f1(f1(succ(A),c2),c1)))).  [resolve(1531,a,759,a)].

given #1085 (T,wt=10): 1997 less(A,f1(succ(f1(f1(A,c1),c1)),c1)).  [resolve(1557,a,1167,a)].

given #1086 (T,wt=10): 1998 less(A,f1(f1(succ(f1(A,c1)),c1),c1)).  [resolve(1557,a,1166,a)].

given #1087 (A,wt=24): 713 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path2).  [resolve(437,c,166,b)].

given #1088 (T,wt=10): 2010 less(A,f1(f1(f1(succ(A),c1),c1),c1)).  [resolve(1558,a,1166,a)].

given #1089 (T,wt=10): 2011 less(A,f1(f1(f1(succ(A),c1),c1),c2)).  [resolve(1558,a,1148,a)].

given #1090 (T,wt=10): 2012 less(A,succ(succ(f1(f1(succ(A),c1),c1)))).  [resolve(1558,a,759,a)].

given #1091 (T,wt=10): 2019 less(pred(A),f1(f1(f1(A,c1),c1),c1)).  [resolve(1559,a,1166,a)].

given #1092 (A,wt=24): 714 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path0).  [resolve(437,c,162,b)].

given #1093 (T,wt=10): 2020 less(pred(A),f1(f1(f1(A,c1),c1),c2)).  [resolve(1559,a,1148,a)].

given #1094 (T,wt=10): 2021 less(pred(A),succ(succ(f1(f1(A,c1),c1)))).  [resolve(1559,a,759,a)].

given #1095 (T,wt=10): 2028 less(A,succ(f1(f1(f1(A,c1),c1),c1))).  [resolve(1590,a,1167,a)].

given #1096 (T,wt=10): 2029 less(A,succ(f1(f1(f1(A,c2),c1),c1))).  [resolve(1590,a,1149,a)].

given #1097 (A,wt=20): 716 -at(f1(A,B),B,s1) | switch(f1(A,B),s1) != out2 | at(succ(f1(A,B)),B,out2).  [factor(715,a,c)].

given #1098 (T,wt=10): 2030 less(pred(pred(A)),succ(f1(f1(A,c1),c1))).  [resolve(1590,a,765,a)].

given #1099 (T,wt=10): 2031 less(A,succ(f1(f1(succ(succ(A)),c1),c1))).  [resolve(1590,a,760,a)].

given #1100 (T,wt=10): 2032 less(pred(A),succ(f1(f1(succ(A),c1),c1))).  [resolve(1590,a,754,a)].

given #1101 (T,wt=10): 2040 free(A,path2) | less(B,f1(f1(B,c1),C)).  [resolve(1646,a,1167,a)].

given #1102 (A,wt=18): 717 switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2) | free(succ(A),path2).  [resolve(438,a,166,b)].

given #1103 (T,wt=10): 2041 free(A,path2) | less(B,f1(f1(B,C),c1)).  [resolve(1646,a,1166,a)].

given #1104 (T,wt=10): 2042 free(A,path2) | less(B,f1(f1(B,c2),C)).  [resolve(1646,a,1149,a)].

given #1105 (T,wt=10): 2043 free(A,path2) | less(B,f1(f1(B,C),c2)).  [resolve(1646,a,1148,a)].

given #1106 (T,wt=10): 2044 free(A,path2) | less(pred(pred(B)),f1(B,C)).  [resolve(1646,a,765,a)].

given #1107 (A,wt=18): 718 switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2) | free(succ(A),path0).  [resolve(438,a,162,b)].

given #1108 (T,wt=10): 2045 free(A,path2) | less(B,f1(succ(succ(B)),C)).  [resolve(1646,a,760,a)].

given #1109 (T,wt=10): 2046 free(A,path2) | less(B,succ(succ(f1(B,C)))).  [resolve(1646,a,759,a)].

given #1110 (T,wt=10): 2047 free(A,path2) | less(pred(B),f1(succ(B),C)).  [resolve(1646,a,754,a)].

given #1111 (T,wt=10): 2060 free(A,path0) | less(B,f1(f1(B,c1),C)).  [resolve(1647,a,1167,a)].

given #1112 (A,wt=19): 719 -at(A,B,s1) | switch(pred(A),s2) != out2 | -at(pred(A),B,s2) | at(A,B,out2).  [para(106(a,1),438(a,1)),rewrite([106(12)])].

given #1113 (T,wt=10): 2061 free(A,path0) | less(B,f1(f1(B,C),c1)).  [resolve(1647,a,1166,a)].

given #1114 (T,wt=10): 2062 free(A,path0) | less(B,f1(f1(B,c2),C)).  [resolve(1647,a,1149,a)].

given #1115 (T,wt=10): 2063 free(A,path0) | less(B,f1(f1(B,C),c2)).  [resolve(1647,a,1148,a)].

given #1116 (T,wt=10): 2064 free(A,path0) | less(pred(pred(B)),f1(B,C)).  [resolve(1647,a,765,a)].

given #1117 (A,wt=18): 720 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | free(succ(A),path2).  [resolve(441,a,166,b)].

given #1118 (T,wt=10): 2065 free(A,path0) | less(B,f1(succ(succ(B)),C)).  [resolve(1647,a,760,a)].

given #1119 (T,wt=10): 2066 free(A,path0) | less(B,succ(succ(f1(B,C)))).  [resolve(1647,a,759,a)].

given #1120 (T,wt=10): 2067 free(A,path0) | less(pred(B),f1(succ(B),C)).  [resolve(1647,a,754,a)].

given #1121 (T,wt=10): 2705 less(pred(A),succ(f1(succ(f1(A,c2)),c1))).  [resolve(1175,a,1212,a)].

given #1122 (A,wt=18): 721 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | free(succ(A),path0).  [resolve(441,a,162,b)].

given #1123 (T,wt=10): 2709 less(pred(A),succ(f1(succ(f1(A,c2)),c2))).  [resolve(1175,a,1182,a)].

given #1124 (T,wt=10): 2727 less(pred(A),B) | less(B,pred(f1(A,c2))).  [resolve(1175,a,461,b)].

given #1125 (T,wt=10): 2820 less(A,succ(f1(succ(f1(succ(A),c2)),c1))).  [resolve(1185,a,1212,a)].

given #1126 (T,wt=10): 2824 less(A,succ(f1(succ(f1(succ(A),c2)),c2))).  [resolve(1185,a,1182,a)].

given #1127 (A,wt=19): 722 -at(A,B,s1) | switch(pred(A),s1) != out1 | -at(pred(A),B,s1) | at(A,B,out1).  [para(106(a,1),441(a,1)),rewrite([106(12)])].

given #1128 (T,wt=10): 2841 less(A,B) | less(B,pred(f1(succ(A),c2))).  [resolve(1185,a,461,b)].

given #1129 (T,wt=10): 2887 less(A,succ(f1(succ(f1(succ(A),c1)),c2))).  [resolve(1195,a,1212,a)].

given #1130 (T,wt=10): 2889 less(pred(A),succ(f1(succ(f1(A,c1)),c2))).  [resolve(1195,a,1202,a)].

given #1131 (T,wt=10): 2927 less(A,succ(f1(pred(B),c2))) | less(B,A).  [resolve(1195,a,461,a)].

given #1132 (A,wt=24): 725 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path2).  [resolve(444,c,166,b)].

given #1133 (T,wt=10): 2995 less(pred(A),succ(f1(succ(f1(A,c1)),c1))).  [resolve(1205,a,1212,a)].

given #1134 (T,wt=10): 3014 less(pred(A),B) | less(B,pred(f1(A,c1))).  [resolve(1205,a,461,b)].

given #1135 (T,wt=10): 3099 less(A,succ(f1(succ(f1(succ(A),c1)),c1))).  [resolve(1215,a,1212,a)].

given #1136 (T,wt=10): 3117 less(A,B) | less(B,pred(f1(succ(A),c1))).  [resolve(1215,a,461,b)].

given #1137 (A,wt=24): 726 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path0).  [resolve(444,c,162,b)].

given #1138 (T,wt=10): 3200 less(A,succ(f1(pred(B),c1))) | less(B,A).  [resolve(1225,a,461,a)].

given #1139 (T,wt=10): 4600 free(A,path3) | less(pred(B),succ(f1(B,C))).  [resolve(1832,b,451,a)].

given #1140 (T,wt=10): 4624 free(A,path3) | less(B,succ(f1(succ(B),C))).  [resolve(1836,b,451,a)].

given #1141 (T,wt=10): 4666 free(A,path1) | less(pred(B),succ(f1(B,C))).  [resolve(1850,b,451,a)].

given #1142 (A,wt=20): 728 -at(f1(A,B),B,s1) | switch(f1(A,B),s1) != out1 | at(succ(f1(A,B)),B,out1).  [factor(727,a,c)].

given #1143 (T,wt=10): 4690 free(A,path1) | less(B,succ(f1(succ(B),C))).  [resolve(1854,b,451,a)].

given #1144 (T,wt=10): 4766 free(A,path2) | less(pred(B),succ(f1(B,C))).  [resolve(2048,b,451,a)].

given #1145 (T,wt=10): 4790 free(A,path2) | less(B,succ(f1(succ(B),C))).  [resolve(2052,b,451,a)].

given #1146 (T,wt=10): 4834 free(A,path0) | less(pred(B),succ(f1(B,C))).  [resolve(2068,b,451,a)].

given #1147 (A,wt=18): 729 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | free(succ(A),path2).  [resolve(445,a,166,b)].

given #1148 (T,wt=10): 4858 free(A,path0) | less(B,succ(f1(succ(B),C))).  [resolve(2072,b,451,a)].

given #1149 (T,wt=10): 6877 at(pred(c3),c2,s2) | open(pred(pred(c3)),in1).  [resolve(1030,a,472,b)].

given #1150 (T,wt=9): 13887 open(pred(pred(c3)),in1) | -free(pred(c3),path3).  [resolve(6877,a,167,b)].

given #1151 (T,wt=9): 13888 open(pred(pred(c3)),in1) | -free(pred(c3),path1).  [resolve(6877,a,163,b)].

given #1152 (A,wt=18): 730 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | free(succ(A),path0).  [resolve(445,a,162,b)].

given #1153 (T,wt=10): 6882 at(pred(c3),c1,s2) | open(pred(pred(c3)),in1).  [resolve(1031,a,472,b)].

given #1154 (T,wt=10): 13886 open(pred(pred(c3)),in1) | open(pred(pred(c3)),in2).  [resolve(6877,a,470,b)].

given #1155 (T,wt=11): 792 less(A,B) | -less(pred(A),B) | pred(A) = B.  [resolve(461,a,100,b),flip(c)].

given #1156 (T,wt=11): 807 less(succ(A),B) | less(C,A) | less(B,pred(C)).  [resolve(454,b,461,b)].

given #1157 (A,wt=19): 731 -at(A,B,s1) | switch(pred(A),s2) != out1 | -at(pred(A),B,s2) | at(A,B,out1).  [para(106(a,1),445(a,1)),rewrite([106(12)])].

given #1158 (T,wt=11): 808 less(succ(A),pred(B)) | less(C,A) | less(B,C).  [resolve(454,b,461,a)].

given #1159 (T,wt=11): 810 less(succ(A),B) | less(succ(C),A) | less(B,C).  [resolve(454,b,104,b)].

given #1160 (T,wt=11): 823 less(succ(A),B) | less(B,C) | less(C,pred(A)).  [resolve(455,b,461,b)].

given #1161 (T,wt=11): 824 less(succ(succ(A)),B) | less(B,C) | less(C,A).  [resolve(455,b,104,b)].

given #1162 (A,wt=16): 732 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | free(succ(A),path2).  [resolve(447,a,166,b)].

given #1163 (T,wt=11): 825 less(succ(A),B) | B = A | less(B,pred(A)).  [resolve(456,b,461,b)].

given #1164 (T,wt=11): 828 less(succ(A),B) | B = A | less(succ(B),A).  [resolve(456,b,104,a)].

given #1165 (T,wt=11): 829 less(A,B) | less(succ(B),C) | less(C,succ(A)).  [resolve(742,a,455,b)].

given #1166 (T,wt=11): 830 less(A,B) | less(succ(C),succ(A)) | less(B,C).  [resolve(742,a,454,b)].

given #1167 (A,wt=16): 733 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | free(succ(A),path0).  [resolve(447,a,162,b)].

given #1168 (T,wt=11): 836 less(succ(A),B) | A = B | less(B,pred(A)).  [resolve(457,b,461,b)].

given #1169 (T,wt=11): 837 less(pred(A),B) | less(succ(B),C) | less(C,A).  [resolve(744,a,455,b)].

given #1170 (T,wt=11): 838 less(pred(A),B) | less(succ(C),A) | less(B,C).  [resolve(744,a,454,b)].

given #1171 (T,wt=11): 848 less(succ(A),succ(succ(succ(B)))) | less(pred(B),A).  [resolve(767,a,454,b)].

given #1172 (A,wt=17): 734 -at(A,B,s1) | -open(pred(A),in2) | -at(pred(A),B,in2) | at(A,B,s2).  [para(106(a,1),447(a,1)),rewrite([106(10)])].

given #1173 (T,wt=11): 854 less(succ(A),succ(succ(succ(succ(B))))) | less(B,A).  [resolve(772,a,454,b)].

given #1174 (T,wt=11): 861 less(succ(A),succ(succ(B))) | less(pred(pred(B)),A).  [resolve(777,a,454,b)].

given #1175 (T,wt=11): 867 less(succ(A),succ(B)) | less(pred(pred(pred(B))),A).  [resolve(783,a,454,b)].

given #1176 (T,wt=11): 879 less(succ(A),B) | less(pred(pred(pred(pred(B)))),A).  [resolve(844,a,454,b)].

given #1177 (A,wt=22): 735 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | free(succ(C),path2).  [resolve(448,a,166,b)].

given #1178 (T,wt=11): 893 free(succ(A),path0) | -at(A,B,in1) | C = B.  [resolve(482,b,140,c)].

given #1179 (T,wt=6): 13898 free(A,path0) | B = C.  [resolve(893,b,1104,a),rewrite([106(2)]),merge(c)].

given #1180 (T,wt=6): 13901 A = B | free(C,path2).  [resolve(13898,a,488,b)].

given #1181 (T,wt=8): 13899 A = B | at(pred(c3),c1,s2).  [resolve(13898,a,6884,b)].

given #1182 (A,wt=22): 736 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | free(succ(C),path0).  [resolve(448,a,162,b)].

given #1183 (T,wt=7): 13906 A = B | -free(pred(c3),path3).  [resolve(13899,b,167,b)].

given #1184 (T,wt=7): 13907 A = B | -free(pred(c3),path1).  [resolve(13899,b,163,b)].

given #1185 (T,wt=8): 13900 A = B | at(pred(c3),c2,s2).  [resolve(13898,a,6879,b)].

given #1186 (T,wt=8): 13905 A = B | open(pred(pred(c3)),in2).  [resolve(13899,b,470,b)].

given #1187 (A,wt=22): 737 -at(A,B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [para(106(a,1),448(a,1))].

given #1188 (T,wt=8): 13909 s2 = A | -at(pred(c3),c1,A).  [factor(13908,a,c)].

given #1189 (T,wt=4): 13915 free(pred(c3),path2).  [resolve(13909,b,166,b),flip(a),unit_del(a,129)].

given #1190 (T,wt=4): 13916 free(pred(c3),path0).  [resolve(13909,b,162,b),flip(a),unit_del(a,129)].

given #1191 (T,wt=5): 13914 at(pred(c3),c1,s2).  [resolve(13909,b,1031,a),flip(a),unit_del(a,129)].

given #1192 (A,wt=22): 738 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | free(succ(C),path2).  [resolve(449,a,166,b)].

given #1193 (F,wt=4): 13922 -free(pred(c3),path3).  [resolve(13914,a,167,b)].

given #1194 (F,wt=4): 13923 -free(pred(c3),path1).  [resolve(13914,a,163,b)].

given #1195 (T,wt=5): 13917 at(pred(c3),c2,s2).  [back_unit_del(6878),unit_del(b,13915)].

given #1196 (T,wt=5): 13921 open(pred(pred(c3)),in2).  [resolve(13914,a,470,b)].

given #1197 (T,wt=6): 13920 at(pred(pred(c3)),c1,in2).  [resolve(13914,a,471,b)].

given #1198 (T,wt=5): 13927 free(pred(pred(c3)),path3).  [resolve(13920,a,494,b),flip(b),unit_del(b,120)].

given #1199 (A,wt=22): 739 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | free(succ(C),path0).  [resolve(449,a,162,b)].

given #1200 (T,wt=5): 13928 free(pred(pred(c3)),path1).  [resolve(13920,a,484,b),flip(b),unit_del(b,120)].

given #1201 (T,wt=6): 13925 at(pred(pred(c3)),c2,in2).  [resolve(13917,a,471,b)].

given #1202 (T,wt=8): 13913 s2 = A | -at(pred(c3),c2,A).  [factor(13912,a,c)].

given #1203 (T,wt=9): 13929 -at(pred(pred(c3)),A,in2) | c1 = A.  [resolve(13920,a,139,c)].

============================== PROOF =================================

% Proof 1 at 2.23 (+ 0.05) seconds.
% Length of proof is 48.
% Level of proof is 11.
% Maximum clause weight is 14.000.
% Given clauses 1203.

5 (all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom) # label(non_clause).  [assumption].
8 (all X all T (train(T) & go(X,T) & (switch(X,s1) = out1 & at(X,T,s1) | switch(X,s2) = out1 & at(X,T,s2)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom) # label(non_clause).  [assumption].
9 (all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom) # label(non_clause).  [assumption].
10 (all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom) # label(non_clause).  [assumption].
11 in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & s2 != s1 & s2 != out2 & s2 != out1 & s1 != out2 & s1 != out1 & out2 != out1 # label(nodesExclusivity) # label(axiom) # label(non_clause).  [assumption].
14 (all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom) # label(non_clause).  [assumption].
15 (all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom) # label(non_clause).  [assumption].
16 (all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom) # label(non_clause).  [assumption].
27 (all X all T (free(X,path0) <-> -at(X,T,s1))) # label(freeRoute0) # label(axiom) # label(non_clause).  [assumption].
29 (all X all T (free(X,path2) <-> -at(X,T,s1))) # label(freeRoute2) # label(axiom) # label(non_clause).  [assumption].
51 (all T1 all T2 all X (at(X,T1,out1) & T1 != T2 -> -at(X,T2,out1))) # label(no2Trains) # label(conjecture) # label(non_clause) # label(goal).  [goal].
106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
114 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
116 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
118 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
128 s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
129 s1 != s2.  [copy(128),flip(a)].
138 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].
139 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].
140 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].
161 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
162 free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
165 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
166 free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
241 at(c3,c1,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
242 c2 != c1 # label(no2Trains) # label(conjecture).  [deny(51)].
243 at(c3,c2,out1) # label(no2Trains) # label(conjecture).  [deny(51)].
469 at(pred(A),B,s1) | at(pred(A),B,s2) | -at(A,B,out1).  [para(106(a,1),114(c,1))].
471 at(pred(A),B,in2) | -at(A,B,s2).  [para(106(a,1),116(b,1))].
473 at(pred(A),B,in1) | -at(A,B,s1).  [para(106(a,1),118(b,1))].
482 free(succ(A),path0) | at(A,B,in1).  [resolve(162,b,118,b)].
893 free(succ(A),path0) | -at(A,B,in1) | C = B.  [resolve(482,b,140,c)].
1030 at(pred(c3),c2,s1) | at(pred(c3),c2,s2).  [resolve(469,c,243,a)].
1031 at(pred(c3),c1,s1) | at(pred(c3),c1,s2).  [resolve(469,c,241,a)].
1104 at(pred(A),B,in1) | free(A,path0).  [resolve(473,b,162,b)].
6878 at(pred(c3),c2,s2) | -free(pred(c3),path2).  [resolve(1030,a,165,b)].
6884 at(pred(c3),c1,s2) | -free(pred(c3),path0).  [resolve(1031,a,161,b)].
13898 free(A,path0) | B = C.  [resolve(893,b,1104,a),rewrite([106(2)]),merge(c)].
13899 A = B | at(pred(c3),c1,s2).  [resolve(13898,a,6884,b)].
13908 A = B | -at(pred(c3),c1,C) | s2 = C.  [resolve(13899,b,138,b)].
13909 s2 = A | -at(pred(c3),c1,A).  [factor(13908,a,c)].
13914 at(pred(c3),c1,s2).  [resolve(13909,b,1031,a),flip(a),unit_del(a,129)].
13915 free(pred(c3),path2).  [resolve(13909,b,166,b),flip(a),unit_del(a,129)].
13917 at(pred(c3),c2,s2).  [back_unit_del(6878),unit_del(b,13915)].
13920 at(pred(pred(c3)),c1,in2).  [resolve(13914,a,471,b)].
13925 at(pred(pred(c3)),c2,in2).  [resolve(13917,a,471,b)].
13929 -at(pred(pred(c3)),A,in2) | c1 = A.  [resolve(13920,a,139,c)].
13935 $F.  [resolve(13929,a,13925,a),flip(a),unit_del(a,242)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=1203. Generated=60140. Kept=13825. proofs=1.
Usable=1062. Sos=12320. Demods=2. Limbo=0, Disabled=774. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=34683. Back_subsumed=440.
Sos_limit_deleted=11631. Sos_displaced=0. Sos_removed=0.
New_demodulators=2 (0 lex), Back_demodulated=0. Back_unit_deleted=3.
Demod_attempts=559387. Demod_rewrites=5907.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=2031525. Nonunit_bsub_feature_tests=102307.
Megabytes=17.55.
User_CPU=2.24, System_CPU=0.05, Wall_clock=2.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 16989 exit (max_proofs) Sun Jun  1 15:47:19 2014
