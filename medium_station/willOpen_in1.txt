============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 25704 was started by zikesjan on jan-mbp-5,
Fri Jun  6 21:54:05 2014
The command was "/Users/zikesjan/Downloads/LADR-2009-11A/bin/prover9".
============================== end of head ===========================

============================== INPUT =================================
set(prolog_style_variables).

formulas(assumptions).
(all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom).
(all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom).
(all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom).
(all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom).
(all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom).
(all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = out2 & at(X,T,s1) | switch(X,s2) = out2 & at(X,T,s2)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & (switch(X,s1) = out1 & at(X,T,s1) | switch(X,s2) = out1 & at(X,T,s2)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom).
(all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom).
in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & s2 != s1 & s2 != out2 & s2 != out1 & s1 != out2 & s1 != out1 & out2 != out1 # label(nodesExclusivity) # label(axiom).
(all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom).
(all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom).
(all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom).
(all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom).
(all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom).
(all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom).
(all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom).
(all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom).
(all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom).
(all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom).
(all X (configuration(X,path0) <-> switch(X,s1) = out2)) # label(switchesConfiguration0) # label(axiom).
(all X (configuration(X,path1) <-> switch(X,s2) = out2)) # label(switchesConfiguration1) # label(axiom).
(all X (configuration(X,path2) <-> switch(X,s1) = out1)) # label(switchesConfiguration2) # label(axiom).
(all X (configuration(X,path3) <-> switch(X,s2) = out1)) # label(switchesConfiguration3) # label(axiom).
(all X all T (free(X,path0) <-> -at(X,T,s1))) # label(freeRoute0) # label(axiom).
(all X all T (free(X,path1) <-> -at(X,T,s2))) # label(freeRoute1) # label(axiom).
(all X all T (free(X,path2) <-> -at(X,T,s1))) # label(freeRoute2) # label(axiom).
(all X all T (free(X,path3) <-> -at(X,T,s2))) # label(freeRoute3) # label(axiom).
(all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2))) # label(nonconflicting0) # label(axiom).
(all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path3))) # label(nonconflicting1) # label(axiom).
(all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path3))) # label(nonconflicting2) # label(axiom).
(all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path1) & free(X,path2))) # label(nonconflicting3) # label(axiom).
path0 != path1 & path0 != path2 & path0 != path3 & path1 != path2 & path1 != path3 & path2 != path3 # label(routesExclusivity) # label(axiom).
(all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom).
(all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom).
(all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom).
(all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom).
(all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom).
(all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom).
(all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom).
(all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom).
(all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom).
(all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom).
(all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed2) # label(axiom).
(all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed3) # label(axiom).
(all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom).
(all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3))) # label(openGatein2) # label(axiom).
(all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2))) # label(openGatein1) # label(axiom).
end_of_list.

formulas(goals).
(exists Y all X (less(X,Y) <-> open(Y,in1))) # label(willOpenin1) # label(conjecture).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all X all Y (less(X,Y) & less(Y,X) -> X = Y)) # label(antisymmetry) # label(axiom) # label(non_clause).  [assumption].
2 (all X all Y all Z (less(X,Y) & less(Y,Z) -> less(X,Z))) # label(transitivity) # label(axiom) # label(non_clause).  [assumption].
3 (all X all Y (less(X,Y) | less(Y,X))) # label(totality) # label(axiom) # label(non_clause).  [assumption].
4 (all X (less(X,succ(X)) & (all Y (less(Y,X) | less(succ(X),Y))))) # label(succ) # label(axiom) # label(non_clause).  [assumption].
5 (all X (pred(succ(X)) = X & succ(pred(X)) = X)) # label(pred) # label(axiom) # label(non_clause).  [assumption].
6 (all X all T (train(T) -> (exists X2 (less(X,X2) & go(X2,T))))) # label(go) # label(axiom) # label(non_clause).  [assumption].
7 (all X all T (train(T) & go(X,T) & (switch(X,s1) = out2 & at(X,T,s1) | switch(X,s2) = out2 & at(X,T,s2)) <-> at(succ(X),T,out2))) # label(out2ax1) # label(axiom) # label(non_clause).  [assumption].
8 (all X all T (train(T) & go(X,T) & (switch(X,s1) = out1 & at(X,T,s1) | switch(X,s2) = out1 & at(X,T,s2)) <-> at(succ(X),T,out1))) # label(out1ax1) # label(axiom) # label(non_clause).  [assumption].
9 (all X all T (train(T) & go(X,T) & open(X,in2) & at(X,T,in2) <-> at(succ(X),T,s2))) # label(s2ax1) # label(axiom) # label(non_clause).  [assumption].
10 (all X all T (train(T) & go(X,T) & open(X,in1) & at(X,T,in1) <-> at(succ(X),T,s1))) # label(s1ax1) # label(axiom) # label(non_clause).  [assumption].
11 in2 != in1 & in2 != s2 & in2 != s1 & in2 != out2 & in2 != out1 & in1 != s2 & in1 != s1 & in1 != out2 & in1 != out1 & s2 != s1 & s2 != out2 & s2 != out1 & s1 != out2 & s1 != out1 & out2 != out1 # label(nodesExclusivity) # label(axiom) # label(non_clause).  [assumption].
12 (all X all T (at(X,T,out2) -> -at(succ(X),T,out2))) # label(disappearout2) # label(axiom) # label(non_clause).  [assumption].
13 (all X all T (at(X,T,out1) -> -at(succ(X),T,out1))) # label(disappearout1) # label(axiom) # label(non_clause).  [assumption].
14 (all X all T all N1 all N2 (at(X,T,N1) & at(X,T,N2) -> N1 = N2)) # label(positionInOneNodeAtTime) # label(axiom) # label(non_clause).  [assumption].
15 (all X all T1 all T2 (at(X,T1,in2) & T1 != T2 -> -at(X,T2,in2))) # label(onlyOneTrainin2) # label(axiom) # label(non_clause).  [assumption].
16 (all X all T1 all T2 (at(X,T1,in1) & T1 != T2 -> -at(X,T2,in1))) # label(onlyOneTrainin1) # label(axiom) # label(non_clause).  [assumption].
17 (all X all T (at(succ(X),T,in2) <-> appear(X,T,in2) | at(X,T,in2) & (-go(X,T) | -open(X,in2)))) # label(appearin2) # label(axiom) # label(non_clause).  [assumption].
18 (all X all T (at(succ(X),T,in1) <-> appear(X,T,in1) | at(X,T,in1) & (-go(X,T) | -open(X,in1)))) # label(appearin1) # label(axiom) # label(non_clause).  [assumption].
19 (all T (goal(T) = out2 | goal(T) = out1)) # label(trainGoals) # label(axiom) # label(non_clause).  [assumption].
20 (all X (succ(X) != X -> (clockOrder(X) = in2 <-> clockOrder(succ(X)) = in1))) # label(clockOrderin2) # label(axiom) # label(non_clause).  [assumption].
21 (all X (succ(X) != X -> (clockOrder(X) = in1 <-> clockOrder(succ(X)) = in2))) # label(clockOrderin1) # label(axiom) # label(non_clause).  [assumption].
22 (all X (clockOrder(X) = in2 | clockOrder(X) = in1)) # label(clockPossibilities) # label(axiom) # label(non_clause).  [assumption].
23 (all X (configuration(X,path0) <-> switch(X,s1) = out2)) # label(switchesConfiguration0) # label(axiom) # label(non_clause).  [assumption].
24 (all X (configuration(X,path1) <-> switch(X,s2) = out2)) # label(switchesConfiguration1) # label(axiom) # label(non_clause).  [assumption].
25 (all X (configuration(X,path2) <-> switch(X,s1) = out1)) # label(switchesConfiguration2) # label(axiom) # label(non_clause).  [assumption].
26 (all X (configuration(X,path3) <-> switch(X,s2) = out1)) # label(switchesConfiguration3) # label(axiom) # label(non_clause).  [assumption].
27 (all X all T (free(X,path0) <-> -at(X,T,s1))) # label(freeRoute0) # label(axiom) # label(non_clause).  [assumption].
28 (all X all T (free(X,path1) <-> -at(X,T,s2))) # label(freeRoute1) # label(axiom) # label(non_clause).  [assumption].
29 (all X all T (free(X,path2) <-> -at(X,T,s1))) # label(freeRoute2) # label(axiom) # label(non_clause).  [assumption].
30 (all X all T (free(X,path3) <-> -at(X,T,s2))) # label(freeRoute3) # label(axiom) # label(non_clause).  [assumption].
31 (all X (nonconflicting(X,path0) <-> free(X,path0) & free(X,path1) & free(X,path2))) # label(nonconflicting0) # label(axiom) # label(non_clause).  [assumption].
32 (all X (nonconflicting(X,path1) <-> free(X,path1) & free(X,path0) & free(X,path3))) # label(nonconflicting1) # label(axiom) # label(non_clause).  [assumption].
33 (all X (nonconflicting(X,path2) <-> free(X,path2) & free(X,path0) & free(X,path3))) # label(nonconflicting2) # label(axiom) # label(non_clause).  [assumption].
34 (all X (nonconflicting(X,path3) <-> free(X,path3) & free(X,path1) & free(X,path2))) # label(nonconflicting3) # label(axiom) # label(non_clause).  [assumption].
35 path0 != path1 & path0 != path2 & path0 != path3 & path1 != path2 & path1 != path3 & path2 != path3 # label(routesExclusivity) # label(axiom) # label(non_clause).  [assumption].
36 (all X (available(X,path0) <-> nonconflicting(X,path0) & configuration(X,path0))) # label(availableRoute0) # label(axiom) # label(non_clause).  [assumption].
37 (all X (available(X,path1) <-> nonconflicting(X,path1) & configuration(X,path1))) # label(availableRoute1) # label(axiom) # label(non_clause).  [assumption].
38 (all X (available(X,path2) <-> nonconflicting(X,path2) & configuration(X,path2))) # label(availableRoute2) # label(axiom) # label(non_clause).  [assumption].
39 (all X (available(X,path3) <-> nonconflicting(X,path3) & configuration(X,path3))) # label(availableRoute3) # label(axiom) # label(non_clause).  [assumption].
40 (all X exists T (wantsToGo(X,in2,out2) <-> at(X,T,in2) & goal(T) = out2)) # label(wantsToGoin2out2) # label(axiom) # label(non_clause).  [assumption].
41 (all X exists T (wantsToGo(X,in2,out1) <-> at(X,T,in2) & goal(T) = out1)) # label(wantsToGoin2out1) # label(axiom) # label(non_clause).  [assumption].
42 (all X exists T (wantsToGo(X,in1,out2) <-> at(X,T,in1) & goal(T) = out2)) # label(wantsToGoin1out2) # label(axiom) # label(non_clause).  [assumption].
43 (all X exists T (wantsToGo(X,in1,out1) <-> at(X,T,in1) & goal(T) = out1)) # label(wantsToGoin1out1) # label(axiom) # label(non_clause).  [assumption].
44 (all X (toBeUsed(X,path0) <-> available(X,path0) & clockOrder(X) = in1 & wantsToGo(X,in1,out2))) # label(pathToBeUsed0) # label(axiom) # label(non_clause).  [assumption].
45 (all X (toBeUsed(X,path1) <-> available(X,path1) & clockOrder(X) = in2 & wantsToGo(X,in2,out2))) # label(pathToBeUsed1) # label(axiom) # label(non_clause).  [assumption].
46 (all X (toBeUsed(X,path2) <-> available(X,path2) & clockOrder(X) = in1 & wantsToGo(X,in1,out1))) # label(pathToBeUsed2) # label(axiom) # label(non_clause).  [assumption].
47 (all X (toBeUsed(X,path3) <-> available(X,path3) & clockOrder(X) = in2 & wantsToGo(X,in2,out1))) # label(pathToBeUsed3) # label(axiom) # label(non_clause).  [assumption].
48 (all X all P (configuration(succ(X),P) <-> configuration(X,P) & -free(X,P) | toBeUsed(X,P))) # label(setPath) # label(axiom) # label(non_clause).  [assumption].
49 (all X (open(succ(X),in2) <-> toBeUsed(X,path1) | toBeUsed(X,path3))) # label(openGatein2) # label(axiom) # label(non_clause).  [assumption].
50 (all X (open(succ(X),in1) <-> toBeUsed(X,path0) | toBeUsed(X,path2))) # label(openGatein1) # label(axiom) # label(non_clause).  [assumption].
51 (exists Y all X (less(X,Y) <-> open(Y,in1))) # label(willOpenin1) # label(conjecture) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
-less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
-train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
-train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
-train(A) | -go(B,A) | switch(B,s1) != out2 | -at(B,A,s1) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s2) != out2 | -at(B,A,s2) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
-train(A) | -go(B,A) | switch(B,s1) != out1 | -at(B,A,s1) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | switch(B,s2) != out1 | -at(B,A,s2) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
-train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
-train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
-at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].
-at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].
-at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].
-at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].
-at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].
-at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
-at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(17)].
at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
-at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
-at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(18)].
at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].
succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].
-configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
-configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
-configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
-configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
-free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
-free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
-free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
-free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
-nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].
-nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].
-nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
-nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].
-nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].
-nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
-nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].
-nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].
-nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
-nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].
-nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].
-nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].
-available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
-available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
-available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
-available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
-available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
-available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
-available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
-available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
-wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
-wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
-wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
-wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
-wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
-wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
-wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
-wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
-toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
-toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
-toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
-toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
-toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
-toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
-toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
-toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
-toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
-toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
-toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
-toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
-configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
-configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].
configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
-open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].
open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
-open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].
open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
less(f6(A),A) | open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].
-less(f6(A),A) | -open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating train/1
52 train(A) | -at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
53 -train(A) | less(B,f1(B,A)) # label(go) # label(axiom).  [clausify(6)].
54 -train(A) | go(f1(B,A),A) # label(go) # label(axiom).  [clausify(6)].
55 -train(A) | -go(B,A) | switch(B,s1) != out2 | -at(B,A,s1) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
56 -train(A) | -go(B,A) | switch(B,s2) != out2 | -at(B,A,s2) | at(succ(B),A,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
Derived: -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].
Derived: -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(52,a,54,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(52,a,55,a)].
Derived: -at(succ(A),B,out2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(52,a,56,a)].
57 -train(A) | -go(B,A) | switch(B,s1) != out1 | -at(B,A,s1) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(57,a,52,a)].
58 -train(A) | -go(B,A) | switch(B,s2) != out1 | -at(B,A,s2) | at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -go(A,B) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(58,a,52,a)].
59 train(A) | -at(succ(B),A,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
Derived: -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].
Derived: -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(59,a,54,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(59,a,55,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(59,a,56,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(59,a,57,a)].
Derived: -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(59,a,58,a)].
60 -train(A) | -go(B,A) | -open(B,in2) | -at(B,A,in2) | at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2).  [resolve(60,a,52,a)].
Derived: -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1).  [resolve(60,a,59,a)].
61 train(A) | -at(succ(B),A,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
Derived: -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].
Derived: -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(61,a,54,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(61,a,55,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(61,a,56,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(61,a,57,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(61,a,58,a)].
Derived: -at(succ(A),B,s2) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(61,a,60,a)].
62 -train(A) | -go(B,A) | -open(B,in1) | -at(B,A,in1) | at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(62,a,52,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(62,a,59,a)].
Derived: -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(62,a,61,a)].
63 train(A) | -at(succ(B),A,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
Derived: -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].
Derived: -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(63,a,54,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(63,a,55,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(63,a,56,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(63,a,57,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(63,a,58,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(63,a,60,a)].
Derived: -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(63,a,62,a)].

Eliminating go/2
64 -at(succ(A),B,in2) | appear(A,B,in2) | -go(A,B) | -open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
65 go(A,B) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
66 go(A,B) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
67 go(A,B) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
68 go(A,B) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].
Derived: -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].
69 at(succ(A),B,in2) | -at(A,B,in2) | go(A,B) # label(appearin2) # label(axiom).  [clausify(17)].
70 -at(succ(A),B,in1) | appear(A,B,in1) | -go(A,B) | -open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].
Derived: -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].
71 at(succ(A),B,in1) | -at(A,B,in1) | go(A,B) # label(appearin1) # label(axiom).  [clausify(18)].
Derived: at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].
72 -at(succ(A),B,out2) | go(f1(C,B),B).  [resolve(52,a,54,a)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].
Derived: -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].
73 -at(succ(A),B,out2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(52,a,55,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(73,b,66,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(73,b,67,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(73,b,68,a)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].
Derived: -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(73,b,72,b)].
74 -at(succ(A),B,out2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(52,a,56,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(74,b,66,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(74,b,67,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(74,b,68,a)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].
Derived: -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].
Derived: -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(74,b,72,b)].
75 -go(A,B) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(57,a,52,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(75,a,65,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(75,a,67,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(75,a,68,a)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].
Derived: switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].
Derived: switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(75,a,72,b)].
76 -go(A,B) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2).  [resolve(58,a,52,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(76,a,65,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(76,a,67,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(76,a,68,a)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].
Derived: switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].
Derived: switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(76,a,72,b)].
77 -at(succ(A),B,out1) | go(f1(C,B),B).  [resolve(59,a,54,a)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].
Derived: -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].
78 -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(59,a,55,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(78,b,66,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(78,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(78,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(78,b,77,b)].
79 -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(59,a,56,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(79,b,66,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(79,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(79,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(79,b,77,b)].
80 -at(succ(A),B,out1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(59,a,57,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(80,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(80,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(80,b,77,b)].
81 -at(succ(A),B,out1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(59,a,58,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(81,b,67,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(81,b,68,a)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].
Derived: -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].
Derived: -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(81,b,77,b)].
82 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2).  [resolve(60,a,52,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(82,a,65,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(82,a,66,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(82,a,68,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(82,a,69,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(82,a,72,b)].
83 -go(A,B) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1).  [resolve(60,a,59,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(83,a,66,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(83,a,68,a)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(83,a,69,c)].
Derived: -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].
Derived: -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(83,a,77,b)].
84 -at(succ(A),B,s2) | go(f1(C,B),B).  [resolve(61,a,54,a)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].
Derived: -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].
85 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(61,a,55,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(85,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(85,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(85,b,84,b)].
86 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(61,a,56,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(86,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(86,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(86,b,84,b)].
87 -at(succ(A),B,s2) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(61,a,57,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(87,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(87,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(87,b,84,b)].
88 -at(succ(A),B,s2) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(61,a,58,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(88,b,67,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(88,b,68,a)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].
Derived: -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].
Derived: -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(88,b,84,b)].
89 -at(succ(A),B,s2) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(61,a,60,a)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(89,b,68,a)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(89,b,69,c)].
Derived: -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].
Derived: -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s2).  [resolve(89,b,84,b)].
90 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2).  [resolve(62,a,52,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(90,a,65,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(90,a,66,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(90,a,67,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(90,a,71,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(90,a,72,b)].
91 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1).  [resolve(62,a,59,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(91,a,66,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(91,a,67,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(91,a,71,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(91,a,77,b)].
92 -go(A,B) | -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2).  [resolve(62,a,61,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(92,a,67,a)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].
Derived: -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(92,a,71,c)].
Derived: -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(92,a,84,b)].
93 -at(succ(A),B,s1) | go(f1(C,B),B).  [resolve(63,a,54,a)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].
Derived: -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].
94 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2).  [resolve(63,a,55,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(94,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(94,b,93,b)].
95 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2).  [resolve(63,a,56,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(95,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(95,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(95,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(95,b,93,b)].
96 -at(succ(A),B,s1) | -go(C,B) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1).  [resolve(63,a,57,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(96,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(96,b,93,b)].
97 -at(succ(A),B,s1) | -go(C,B) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1).  [resolve(63,a,58,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(97,b,68,a)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(97,b,69,c)].
Derived: -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(97,b,71,c)].
Derived: -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(97,b,93,b)].
98 -at(succ(A),B,s1) | -go(C,B) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2).  [resolve(63,a,60,a)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(98,b,68,a)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(98,b,69,c)].
Derived: -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].
Derived: -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s1).  [resolve(98,b,93,b)].
99 -at(succ(A),B,s1) | -go(C,B) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1).  [resolve(63,a,62,a)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].
Derived: -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(99,b,71,c)].
Derived: -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(99,b,93,b)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, open, free, toBeUsed, nonconflicting, configuration, available, less, at, appear, wantsToGo ]).
Function symbol precedence:  function_order([ s2, s1, out2, out1, in2, in1, path0, path1, path2, path3, switch, f1, succ, clockOrder, goal, pred, f2, f3, f4, f5, f6 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      100 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
kept:      101 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
kept:      102 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
kept:      103 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
kept:      104 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
kept:      105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
kept:      107 switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      108 switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      109 at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      110 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
kept:      111 switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      112 switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      113 at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      114 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
kept:      115 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
kept:      116 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
kept:      117 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
kept:      118 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
kept:      119 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      120 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      121 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      122 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      123 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      124 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      125 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      126 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      127 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
           128 s2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      129 s1 != s2.  [copy(128),flip(a)].
           130 s2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      131 out2 != s2.  [copy(130),flip(a)].
kept:      132 out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      133 out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      134 out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      135 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
kept:      136 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].
kept:      137 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].
kept:      138 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].
kept:      139 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].
kept:      140 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].
kept:      141 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
kept:      142 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
kept:      143 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
kept:      144 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
kept:      145 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
kept:      146 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
kept:      147 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].
kept:      148 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
kept:      149 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
kept:      150 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
kept:      151 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
kept:      152 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].
kept:      153 -configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
kept:      154 configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
kept:      155 -configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
kept:      156 configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
kept:      157 -configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
kept:      158 configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
kept:      159 -configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
kept:      160 configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
kept:      161 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
kept:      162 free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
kept:      163 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
kept:      164 free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
kept:      165 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
kept:      166 free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
kept:      167 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
kept:      168 free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
kept:      169 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      170 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      171 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      172 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
kept:      173 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      174 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      175 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      176 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
kept:      177 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      178 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      179 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      180 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
kept:      181 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      182 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      183 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      184 nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
kept:      185 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      186 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      187 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      188 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      189 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      190 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].
kept:      191 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
kept:      192 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
kept:      193 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
kept:      194 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
kept:      195 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
kept:      196 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
kept:      197 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
kept:      198 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
kept:      199 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
kept:      200 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
kept:      201 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
kept:      202 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
kept:      203 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
kept:      204 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
kept:      205 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
kept:      206 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
kept:      207 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
kept:      208 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
kept:      209 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
kept:      210 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
kept:      211 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
kept:      212 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
kept:      213 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
kept:      214 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
kept:      215 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      216 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      217 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      218 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
kept:      219 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      220 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      221 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      222 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
kept:      223 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      224 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      225 -toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      226 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
kept:      227 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      228 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      229 -toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      230 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
kept:      231 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      232 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      233 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      234 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
kept:      235 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
kept:      236 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].
kept:      237 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
kept:      238 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
kept:      239 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].
kept:      240 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
kept:      241 less(f6(A),A) | open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].
kept:      242 -less(f6(A),A) | -open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].
kept:      243 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].
kept:      244 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].
kept:      245 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].
kept:      246 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].
kept:      247 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].
kept:      248 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].
kept:      249 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].
kept:      250 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].
kept:      251 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].
kept:      252 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].
kept:      253 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].
kept:      254 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].
kept:      255 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].
kept:      256 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].
kept:      257 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].
kept:      258 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].
kept:      259 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(73,b,66,a)].
kept:      260 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(73,b,67,a)].
kept:      261 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(73,b,68,a)].
kept:      262 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].
kept:      263 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].
kept:      264 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(73,b,72,b)].
kept:      265 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(74,b,66,a)].
kept:      266 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(74,b,67,a)].
kept:      267 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(74,b,68,a)].
kept:      268 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].
kept:      269 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].
kept:      270 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out2).  [resolve(74,b,72,b)].
kept:      271 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(75,a,65,a)].
kept:      272 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(75,a,67,a)].
kept:      273 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(75,a,68,a)].
kept:      274 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].
kept:      275 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].
kept:      276 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(75,a,72,b)].
kept:      277 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(76,a,65,a)].
kept:      278 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(76,a,67,a)].
kept:      279 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(76,a,68,a)].
kept:      280 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].
kept:      281 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].
kept:      282 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(76,a,72,b)].
kept:      283 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].
kept:      284 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].
kept:      285 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(78,b,66,a)].
kept:      286 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(78,b,67,a)].
kept:      287 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(78,b,68,a)].
kept:      288 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].
kept:      289 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].
kept:      290 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(78,b,77,b)].
kept:      291 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,out1).  [resolve(79,b,66,a)].
kept:      292 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(79,b,67,a)].
kept:      293 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(79,b,68,a)].
kept:      294 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].
kept:      295 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].
kept:      296 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,out1).  [resolve(79,b,77,b)].
kept:      297 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(80,b,67,a)].
kept:      298 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(80,b,68,a)].
kept:      299 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].
kept:      300 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].
kept:      301 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(80,b,77,b)].
kept:      302 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(81,b,67,a)].
kept:      303 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(81,b,68,a)].
kept:      304 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].
kept:      305 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].
kept:      306 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,out1).  [resolve(81,b,77,b)].
kept:      307 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(82,a,65,a)].
kept:      308 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(82,a,66,a)].
kept:      309 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | -at(succ(A),B,s1).  [resolve(82,a,68,a)].
           310 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(82,a,69,c)].
kept:      311 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(310),merge(f)].
kept:      312 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].
kept:      313 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(82,a,72,b)].
kept:      314 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(83,a,66,a)].
kept:      315 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | -at(succ(A),B,s1).  [resolve(83,a,68,a)].
           316 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(83,a,69,c)].
kept:      317 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(316),merge(f)].
kept:      318 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].
kept:      319 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(83,a,77,b)].
kept:      320 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].
kept:      321 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].
kept:      322 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(85,b,67,a)].
kept:      323 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(85,b,68,a)].
kept:      324 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].
kept:      325 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].
kept:      326 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(85,b,84,b)].
kept:      327 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s2).  [resolve(86,b,67,a)].
kept:      328 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(86,b,68,a)].
kept:      329 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].
kept:      330 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].
kept:      331 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s2).  [resolve(86,b,84,b)].
kept:      332 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(87,b,67,a)].
kept:      333 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(87,b,68,a)].
kept:      334 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].
kept:      335 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].
kept:      336 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(87,b,84,b)].
kept:      337 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s2).  [resolve(88,b,67,a)].
kept:      338 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(88,b,68,a)].
kept:      339 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].
kept:      340 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].
kept:      341 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s2).  [resolve(88,b,84,b)].
kept:      342 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(89,b,68,a)].
           343 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(89,b,69,c)].
kept:      344 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(343),merge(f)].
kept:      345 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].
kept:      346 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s2).  [resolve(89,b,84,b)].
kept:      347 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out2).  [resolve(90,a,65,a)].
kept:      348 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,out1).  [resolve(90,a,66,a)].
kept:      349 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | -at(succ(A),B,s2).  [resolve(90,a,67,a)].
kept:      350 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].
           351 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(90,a,71,c)].
kept:      352 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(351),merge(f)].
kept:      353 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2) | -at(succ(D),B,out2).  [resolve(90,a,72,b)].
kept:      354 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,out1).  [resolve(91,a,66,a)].
kept:      355 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | -at(succ(A),B,s2).  [resolve(91,a,67,a)].
kept:      356 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].
           357 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(91,a,71,c)].
kept:      358 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(357),merge(f)].
kept:      359 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1) | -at(succ(D),B,out1).  [resolve(91,a,77,b)].
kept:      360 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | -at(succ(A),B,s2).  [resolve(92,a,67,a)].
kept:      361 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].
           362 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(92,a,71,c)].
kept:      363 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(362),merge(f)].
kept:      364 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2) | -at(succ(D),B,s2).  [resolve(92,a,84,b)].
kept:      365 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].
kept:      366 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].
kept:      367 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(94,b,68,a)].
kept:      368 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].
kept:      369 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].
kept:      370 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(94,b,93,b)].
kept:      371 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | -at(succ(C),B,s1).  [resolve(95,b,68,a)].
kept:      372 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(95,b,69,c)].
kept:      373 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(95,b,71,c)].
kept:      374 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2) | -at(succ(D),B,s1).  [resolve(95,b,93,b)].
kept:      375 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(96,b,68,a)].
kept:      376 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].
kept:      377 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].
kept:      378 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(96,b,93,b)].
kept:      379 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | -at(succ(C),B,s1).  [resolve(97,b,68,a)].
kept:      380 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(97,b,69,c)].
kept:      381 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(97,b,71,c)].
kept:      382 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1) | -at(succ(D),B,s1).  [resolve(97,b,93,b)].
kept:      383 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | -at(succ(C),B,s1).  [resolve(98,b,68,a)].
           384 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(98,b,69,c)].
kept:      385 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(384),merge(f)].
kept:      386 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].
kept:      387 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2) | -at(succ(D),B,s1).  [resolve(98,b,93,b)].
kept:      388 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].
           389 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(99,b,71,c)].
kept:      390 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(389),merge(f)].
kept:      391 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1) | -at(succ(D),B,s1).  [resolve(99,b,93,b)].
kept:      392 less(A,A).  [factor(102,a,b)].
kept:      393 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(264,a,e)].
kept:      394 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(270,a,e)].
kept:      395 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(271,d,e)].
kept:      396 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(276,d,e)].
kept:      397 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(277,d,e)].
kept:      398 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(282,d,e)].
kept:      399 -at(succ(A),B,out1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(285,a,e)].
kept:      400 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(290,a,e)].
kept:      401 -at(succ(A),B,out1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(291,a,e)].
kept:      402 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(296,a,e)].
kept:      403 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(301,a,e)].
kept:      404 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(306,a,e)].
kept:      405 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(307,d,e)].
kept:      406 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(313,d,e)].
kept:      407 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(314,d,e)].
kept:      408 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(319,d,e)].
kept:      409 -at(succ(A),B,s2) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(322,a,e)].
kept:      410 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(326,a,e)].
kept:      411 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s2).  [factor(327,a,c)].
kept:      412 -at(succ(A),B,s2) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(327,a,e)].
kept:      413 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s1).  [factor(328,a,c)].
kept:      414 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(329,a,c)].
kept:      415 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(330,a,c)].
kept:      416 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(331,a,e)].
kept:      417 -at(succ(A),B,s2) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(332,a,e)].
kept:      418 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(336,a,e)].
kept:      419 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s2).  [factor(337,a,c)].
kept:      420 -at(succ(A),B,s2) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(337,a,e)].
kept:      421 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s1).  [factor(338,a,c)].
kept:      422 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(339,a,c)].
kept:      423 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(340,a,c)].
kept:      424 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(341,a,e)].
kept:      425 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(346,a,e)].
kept:      426 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(347,d,e)].
kept:      427 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(353,d,e)].
kept:      428 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(354,d,e)].
kept:      429 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(359,d,e)].
kept:      430 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(360,d,e)].
kept:      431 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(364,d,e)].
kept:      432 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | -at(succ(succ(A)),B,s1).  [factor(367,a,c)].
kept:      433 -at(succ(A),B,s1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(367,a,e)].
kept:      434 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(368,a,c)].
kept:      435 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(369,a,c)].
kept:      436 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(370,a,e)].
kept:      437 -at(succ(A),B,s1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(371,a,e)].
kept:      438 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(374,a,e)].
kept:      439 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | -at(succ(succ(A)),B,s1).  [factor(375,a,c)].
kept:      440 -at(succ(A),B,s1) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(375,a,e)].
kept:      441 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(376,a,c)].
kept:      442 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(377,a,c)].
kept:      443 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(378,a,e)].
kept:      444 -at(succ(A),B,s1) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(379,a,e)].
kept:      445 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(382,a,e)].
kept:      446 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(383,a,e)].
kept:      447 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(387,a,e)].
kept:      448 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(391,a,e)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
100 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].
101 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].
102 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].
103 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].
104 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].
105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
107 switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
108 switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
109 at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
110 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].
111 switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
112 switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
113 at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
114 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].
115 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
116 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].
117 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
118 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].
119 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
120 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
121 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
122 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
123 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
124 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
125 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
126 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
127 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
129 s1 != s2.  [copy(128),flip(a)].
131 out2 != s2.  [copy(130),flip(a)].
132 out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
133 out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
134 out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
135 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].
136 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].
137 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].
138 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].
139 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].
140 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].
141 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
142 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].
143 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].
144 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
145 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].
146 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].
147 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].
148 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
149 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].
150 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
151 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].
152 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].
153 -configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
154 configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].
155 -configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
156 configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].
157 -configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
158 configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].
159 -configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
160 configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].
161 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
162 free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].
163 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
164 free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].
165 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
166 free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].
167 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
168 free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].
169 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].
170 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].
171 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
172 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].
173 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].
174 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].
175 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
176 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].
177 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].
178 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].
179 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
180 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].
181 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].
182 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].
183 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
184 nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].
185 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
186 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
187 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].
188 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
189 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].
190 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].
191 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
192 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
193 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].
194 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
195 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
196 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].
197 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
198 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
199 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].
200 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
201 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
202 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].
203 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
204 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
205 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].
206 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
207 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
208 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].
209 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
210 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
211 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].
212 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
213 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
214 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].
215 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
216 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
217 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
218 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].
219 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
220 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
221 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
222 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].
223 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
224 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
225 -toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
226 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].
227 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
228 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
229 -toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
230 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].
231 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
232 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
233 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].
234 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].
235 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
236 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].
237 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].
238 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
239 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].
240 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].
241 less(f6(A),A) | open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].
242 -less(f6(A),A) | -open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].
243 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].
244 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].
245 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].
246 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].
247 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].
248 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].
249 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].
250 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].
251 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].
252 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].
253 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].
254 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].
255 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].
256 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].
257 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].
258 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].
262 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].
263 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].
268 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].
269 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].
274 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].
275 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].
280 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].
281 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].
283 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].
284 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].
288 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].
289 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].
294 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].
295 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].
299 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].
300 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].
304 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].
305 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].
311 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(310),merge(f)].
312 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].
317 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(316),merge(f)].
318 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].
320 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].
321 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].
324 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].
325 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].
329 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].
330 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].
334 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].
335 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].
339 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].
340 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].
344 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(343),merge(f)].
345 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].
350 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].
352 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(351),merge(f)].
356 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].
358 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(357),merge(f)].
361 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].
363 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(362),merge(f)].
365 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].
366 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].
368 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].
369 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].
372 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(95,b,69,c)].
373 -at(succ(A),B,s1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(95,b,71,c)].
376 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].
377 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].
380 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(97,b,69,c)].
381 -at(succ(A),B,s1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(97,b,71,c)].
385 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(384),merge(f)].
386 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].
388 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].
390 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(389),merge(f)].
392 less(A,A).  [factor(102,a,b)].
393 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(264,a,e)].
394 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(270,a,e)].
395 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(271,d,e)].
396 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(276,d,e)].
397 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(277,d,e)].
398 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(282,d,e)].
399 -at(succ(A),B,out1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(285,a,e)].
400 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(290,a,e)].
401 -at(succ(A),B,out1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(291,a,e)].
402 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(296,a,e)].
403 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(301,a,e)].
404 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(306,a,e)].
405 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(307,d,e)].
406 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(313,d,e)].
407 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(314,d,e)].
408 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(319,d,e)].
409 -at(succ(A),B,s2) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(322,a,e)].
410 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(326,a,e)].
412 -at(succ(A),B,s2) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(327,a,e)].
414 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(329,a,c)].
415 -at(succ(A),B,s2) | switch(succ(A),s2) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(330,a,c)].
416 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(331,a,e)].
417 -at(succ(A),B,s2) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(332,a,e)].
418 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(336,a,e)].
420 -at(succ(A),B,s2) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(337,a,e)].
422 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(339,a,c)].
423 -at(succ(A),B,s2) | switch(succ(A),s2) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(340,a,c)].
424 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(341,a,e)].
425 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(346,a,e)].
426 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(347,d,e)].
427 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(353,d,e)].
428 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(354,d,e)].
429 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(359,d,e)].
430 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(360,d,e)].
431 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(364,d,e)].
433 -at(succ(A),B,s1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(367,a,e)].
434 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(368,a,c)].
435 -at(succ(A),B,s1) | switch(succ(A),s1) != out2 | at(succ(succ(A)),B,out2) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(369,a,c)].
436 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(370,a,e)].
437 -at(succ(A),B,s1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(371,a,e)].
438 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(374,a,e)].
440 -at(succ(A),B,s1) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(375,a,e)].
441 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in2) | -at(succ(A),B,in2).  [factor(376,a,c)].
442 -at(succ(A),B,s1) | switch(succ(A),s1) != out1 | at(succ(succ(A)),B,out1) | at(succ(succ(A)),B,in1) | -at(succ(A),B,in1).  [factor(377,a,c)].
443 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(378,a,e)].
444 -at(succ(A),B,s1) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(379,a,e)].
445 -at(succ(A),B,s1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(382,a,e)].
446 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(383,a,e)].
447 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(387,a,e)].
448 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(391,a,e)].
end_of_list.

formulas(demodulators).
105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].
106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.04 seconds.

given #1 (I,wt=9): 100 -less(A,B) | -less(B,A) | B = A # label(antisymmetry) # label(axiom).  [clausify(1)].

given #2 (I,wt=9): 101 -less(A,B) | -less(B,C) | less(A,C) # label(transitivity) # label(axiom).  [clausify(2)].

given #3 (I,wt=6): 102 less(A,B) | less(B,A) # label(totality) # label(axiom).  [clausify(3)].

given #4 (I,wt=4): 103 less(A,succ(A)) # label(succ) # label(axiom).  [clausify(4)].

given #5 (I,wt=7): 104 less(A,B) | less(succ(B),A) # label(succ) # label(axiom).  [clausify(4)].

given #6 (I,wt=5): 105 pred(succ(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #7 (I,wt=5): 106 succ(pred(A)) = A # label(pred) # label(axiom).  [clausify(5)].

given #8 (I,wt=15): 107 switch(A,s1) = out2 | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #9 (I,wt=14): 108 switch(A,s1) = out2 | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #10 (I,wt=14): 109 at(A,B,s1) | switch(A,s2) = out2 | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #11 (I,wt=13): 110 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out2) # label(out2ax1) # label(axiom).  [clausify(7)].

given #12 (I,wt=15): 111 switch(A,s1) = out1 | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #13 (I,wt=14): 112 switch(A,s1) = out1 | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #14 (I,wt=14): 113 at(A,B,s1) | switch(A,s2) = out1 | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #15 (I,wt=13): 114 at(A,B,s1) | at(A,B,s2) | -at(succ(A),B,out1) # label(out1ax1) # label(axiom).  [clausify(8)].

given #16 (I,wt=8): 115 open(A,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].

given #17 (I,wt=9): 116 at(A,B,in2) | -at(succ(A),B,s2) # label(s2ax1) # label(axiom).  [clausify(9)].

given #18 (I,wt=8): 117 open(A,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].

given #19 (I,wt=9): 118 at(A,B,in1) | -at(succ(A),B,s1) # label(s1ax1) # label(axiom).  [clausify(10)].

given #20 (I,wt=3): 119 in1 != in2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #21 (I,wt=3): 120 in2 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #22 (I,wt=3): 121 in2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #23 (I,wt=3): 122 in2 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #24 (I,wt=3): 123 in2 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #25 (I,wt=3): 124 in1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #26 (I,wt=3): 125 in1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #27 (I,wt=3): 126 in1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #28 (I,wt=3): 127 in1 != out1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #29 (I,wt=3): 129 s1 != s2.  [copy(128),flip(a)].

given #30 (I,wt=3): 131 out2 != s2.  [copy(130),flip(a)].

given #31 (I,wt=3): 132 out1 != s2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #32 (I,wt=3): 133 out2 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #33 (I,wt=3): 134 out1 != s1 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #34 (I,wt=3): 135 out1 != out2 # label(nodesExclusivity) # label(axiom).  [clausify(11)].

given #35 (I,wt=9): 136 -at(A,B,out2) | -at(succ(A),B,out2) # label(disappearout2) # label(axiom).  [clausify(12)].

given #36 (I,wt=9): 137 -at(A,B,out1) | -at(succ(A),B,out1) # label(disappearout1) # label(axiom).  [clausify(13)].

given #37 (I,wt=11): 138 -at(A,B,C) | -at(A,B,D) | D = C # label(positionInOneNodeAtTime) # label(axiom).  [clausify(14)].

given #38 (I,wt=11): 139 -at(A,B,in2) | C = B | -at(A,C,in2) # label(onlyOneTrainin2) # label(axiom).  [clausify(15)].

given #39 (I,wt=11): 140 -at(A,B,in1) | C = B | -at(A,C,in1) # label(onlyOneTrainin1) # label(axiom).  [clausify(16)].

given #40 (I,wt=13): 141 -at(succ(A),B,in2) | appear(A,B,in2) | at(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].

given #41 (I,wt=9): 142 at(succ(A),B,in2) | -appear(A,B,in2) # label(appearin2) # label(axiom).  [clausify(17)].

given #42 (I,wt=12): 143 at(succ(A),B,in2) | -at(A,B,in2) | open(A,in2) # label(appearin2) # label(axiom).  [clausify(17)].

given #43 (I,wt=13): 144 -at(succ(A),B,in1) | appear(A,B,in1) | at(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].

given #44 (I,wt=9): 145 at(succ(A),B,in1) | -appear(A,B,in1) # label(appearin1) # label(axiom).  [clausify(18)].

given #45 (I,wt=12): 146 at(succ(A),B,in1) | -at(A,B,in1) | open(A,in1) # label(appearin1) # label(axiom).  [clausify(18)].

given #46 (I,wt=8): 147 goal(A) = out2 | goal(A) = out1 # label(trainGoals) # label(axiom).  [clausify(19)].

given #47 (I,wt=13): 148 succ(A) = A | clockOrder(A) != in2 | clockOrder(succ(A)) = in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].

given #48 (I,wt=13): 149 succ(A) = A | clockOrder(A) = in2 | clockOrder(succ(A)) != in1 # label(clockOrderin2) # label(axiom).  [clausify(20)].

given #49 (I,wt=13): 150 succ(A) = A | clockOrder(A) != in1 | clockOrder(succ(A)) = in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].

given #50 (I,wt=13): 151 succ(A) = A | clockOrder(A) = in1 | clockOrder(succ(A)) != in2 # label(clockOrderin1) # label(axiom).  [clausify(21)].

given #51 (I,wt=8): 152 clockOrder(A) = in2 | clockOrder(A) = in1 # label(clockPossibilities) # label(axiom).  [clausify(22)].

given #52 (I,wt=8): 153 -configuration(A,path0) | switch(A,s1) = out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].

given #53 (I,wt=8): 154 configuration(A,path0) | switch(A,s1) != out2 # label(switchesConfiguration0) # label(axiom).  [clausify(23)].

given #54 (I,wt=8): 155 -configuration(A,path1) | switch(A,s2) = out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].

given #55 (I,wt=8): 156 configuration(A,path1) | switch(A,s2) != out2 # label(switchesConfiguration1) # label(axiom).  [clausify(24)].

given #56 (I,wt=8): 157 -configuration(A,path2) | switch(A,s1) = out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].

given #57 (I,wt=8): 158 configuration(A,path2) | switch(A,s1) != out1 # label(switchesConfiguration2) # label(axiom).  [clausify(25)].

given #58 (I,wt=8): 159 -configuration(A,path3) | switch(A,s2) = out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].

given #59 (I,wt=8): 160 configuration(A,path3) | switch(A,s2) != out1 # label(switchesConfiguration3) # label(axiom).  [clausify(26)].

given #60 (I,wt=7): 161 -free(A,path0) | -at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].

given #61 (I,wt=7): 162 free(A,path0) | at(A,B,s1) # label(freeRoute0) # label(axiom).  [clausify(27)].

given #62 (I,wt=7): 163 -free(A,path1) | -at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].

given #63 (I,wt=7): 164 free(A,path1) | at(A,B,s2) # label(freeRoute1) # label(axiom).  [clausify(28)].

given #64 (I,wt=7): 165 -free(A,path2) | -at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].

given #65 (I,wt=7): 166 free(A,path2) | at(A,B,s1) # label(freeRoute2) # label(axiom).  [clausify(29)].

given #66 (I,wt=7): 167 -free(A,path3) | -at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].

given #67 (I,wt=7): 168 free(A,path3) | at(A,B,s2) # label(freeRoute3) # label(axiom).  [clausify(30)].

given #68 (I,wt=6): 169 -nonconflicting(A,path0) | free(A,path0) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #69 (I,wt=6): 170 -nonconflicting(A,path0) | free(A,path1) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #70 (I,wt=6): 171 -nonconflicting(A,path0) | free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #71 (I,wt=12): 172 nonconflicting(A,path0) | -free(A,path0) | -free(A,path1) | -free(A,path2) # label(nonconflicting0) # label(axiom).  [clausify(31)].

given #72 (I,wt=6): 173 -nonconflicting(A,path1) | free(A,path1) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #73 (I,wt=6): 174 -nonconflicting(A,path1) | free(A,path0) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #74 (I,wt=6): 175 -nonconflicting(A,path1) | free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #75 (I,wt=12): 176 nonconflicting(A,path1) | -free(A,path1) | -free(A,path0) | -free(A,path3) # label(nonconflicting1) # label(axiom).  [clausify(32)].

given #76 (I,wt=6): 177 -nonconflicting(A,path2) | free(A,path2) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #77 (I,wt=6): 178 -nonconflicting(A,path2) | free(A,path0) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #78 (I,wt=6): 179 -nonconflicting(A,path2) | free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #79 (I,wt=12): 180 nonconflicting(A,path2) | -free(A,path2) | -free(A,path0) | -free(A,path3) # label(nonconflicting2) # label(axiom).  [clausify(33)].

given #80 (I,wt=6): 181 -nonconflicting(A,path3) | free(A,path3) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #81 (I,wt=6): 182 -nonconflicting(A,path3) | free(A,path1) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #82 (I,wt=6): 183 -nonconflicting(A,path3) | free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #83 (I,wt=12): 184 nonconflicting(A,path3) | -free(A,path3) | -free(A,path1) | -free(A,path2) # label(nonconflicting3) # label(axiom).  [clausify(34)].

given #84 (I,wt=3): 185 path1 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #85 (I,wt=3): 186 path2 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #86 (I,wt=3): 187 path3 != path0 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #87 (I,wt=3): 188 path2 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #88 (I,wt=3): 189 path3 != path1 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #89 (I,wt=3): 190 path3 != path2 # label(routesExclusivity) # label(axiom).  [clausify(35)].

given #90 (I,wt=6): 191 -available(A,path0) | nonconflicting(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].

given #91 (I,wt=6): 192 -available(A,path0) | configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].

given #92 (I,wt=9): 193 available(A,path0) | -nonconflicting(A,path0) | -configuration(A,path0) # label(availableRoute0) # label(axiom).  [clausify(36)].

given #93 (I,wt=6): 194 -available(A,path1) | nonconflicting(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].

given #94 (I,wt=6): 195 -available(A,path1) | configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].

given #95 (I,wt=9): 196 available(A,path1) | -nonconflicting(A,path1) | -configuration(A,path1) # label(availableRoute1) # label(axiom).  [clausify(37)].

given #96 (I,wt=6): 197 -available(A,path2) | nonconflicting(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].

given #97 (I,wt=6): 198 -available(A,path2) | configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].

given #98 (I,wt=9): 199 available(A,path2) | -nonconflicting(A,path2) | -configuration(A,path2) # label(availableRoute2) # label(axiom).  [clausify(38)].

given #99 (I,wt=6): 200 -available(A,path3) | nonconflicting(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].

given #100 (I,wt=6): 201 -available(A,path3) | configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].

given #101 (I,wt=9): 202 available(A,path3) | -nonconflicting(A,path3) | -configuration(A,path3) # label(availableRoute3) # label(axiom).  [clausify(39)].

given #102 (I,wt=9): 203 -wantsToGo(A,in2,out2) | at(A,f2(A),in2) # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].

given #103 (I,wt=9): 204 -wantsToGo(A,in2,out2) | goal(f2(A)) = out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].

given #104 (I,wt=14): 205 wantsToGo(A,in2,out2) | -at(A,f2(A),in2) | goal(f2(A)) != out2 # label(wantsToGoin2out2) # label(axiom).  [clausify(40)].

given #105 (I,wt=9): 206 -wantsToGo(A,in2,out1) | at(A,f3(A),in2) # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].

given #106 (I,wt=9): 207 -wantsToGo(A,in2,out1) | goal(f3(A)) = out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].

given #107 (I,wt=14): 208 wantsToGo(A,in2,out1) | -at(A,f3(A),in2) | goal(f3(A)) != out1 # label(wantsToGoin2out1) # label(axiom).  [clausify(41)].

given #108 (I,wt=9): 209 -wantsToGo(A,in1,out2) | at(A,f4(A),in1) # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].

given #109 (I,wt=9): 210 -wantsToGo(A,in1,out2) | goal(f4(A)) = out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].

given #110 (I,wt=14): 211 wantsToGo(A,in1,out2) | -at(A,f4(A),in1) | goal(f4(A)) != out2 # label(wantsToGoin1out2) # label(axiom).  [clausify(42)].

given #111 (I,wt=9): 212 -wantsToGo(A,in1,out1) | at(A,f5(A),in1) # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].

given #112 (I,wt=9): 213 -wantsToGo(A,in1,out1) | goal(f5(A)) = out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].

given #113 (I,wt=14): 214 wantsToGo(A,in1,out1) | -at(A,f5(A),in1) | goal(f5(A)) != out1 # label(wantsToGoin1out1) # label(axiom).  [clausify(43)].

given #114 (I,wt=6): 215 -toBeUsed(A,path0) | available(A,path0) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #115 (I,wt=7): 216 -toBeUsed(A,path0) | clockOrder(A) = in1 # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #116 (I,wt=7): 217 -toBeUsed(A,path0) | wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #117 (I,wt=14): 218 toBeUsed(A,path0) | -available(A,path0) | clockOrder(A) != in1 | -wantsToGo(A,in1,out2) # label(pathToBeUsed0) # label(axiom).  [clausify(44)].

given #118 (I,wt=6): 219 -toBeUsed(A,path1) | available(A,path1) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #119 (I,wt=7): 220 -toBeUsed(A,path1) | clockOrder(A) = in2 # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #120 (I,wt=7): 221 -toBeUsed(A,path1) | wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #121 (I,wt=14): 222 toBeUsed(A,path1) | -available(A,path1) | clockOrder(A) != in2 | -wantsToGo(A,in2,out2) # label(pathToBeUsed1) # label(axiom).  [clausify(45)].

given #122 (I,wt=6): 223 -toBeUsed(A,path2) | available(A,path2) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #123 (I,wt=7): 224 -toBeUsed(A,path2) | clockOrder(A) = in1 # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #124 (I,wt=7): 225 -toBeUsed(A,path2) | wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #125 (I,wt=14): 226 toBeUsed(A,path2) | -available(A,path2) | clockOrder(A) != in1 | -wantsToGo(A,in1,out1) # label(pathToBeUsed2) # label(axiom).  [clausify(46)].

given #126 (I,wt=6): 227 -toBeUsed(A,path3) | available(A,path3) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #127 (I,wt=7): 228 -toBeUsed(A,path3) | clockOrder(A) = in2 # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #128 (I,wt=7): 229 -toBeUsed(A,path3) | wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #129 (I,wt=14): 230 toBeUsed(A,path3) | -available(A,path3) | clockOrder(A) != in2 | -wantsToGo(A,in2,out1) # label(pathToBeUsed3) # label(axiom).  [clausify(47)].

given #130 (I,wt=10): 231 -configuration(succ(A),B) | configuration(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #131 (I,wt=10): 232 -configuration(succ(A),B) | -free(A,B) | toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #132 (I,wt=10): 233 configuration(succ(A),B) | -configuration(A,B) | free(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #133 (I,wt=7): 234 configuration(succ(A),B) | -toBeUsed(A,B) # label(setPath) # label(axiom).  [clausify(48)].

given #134 (I,wt=10): 235 -open(succ(A),in2) | toBeUsed(A,path1) | toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].

given #135 (I,wt=7): 236 open(succ(A),in2) | -toBeUsed(A,path1) # label(openGatein2) # label(axiom).  [clausify(49)].

given #136 (I,wt=7): 237 open(succ(A),in2) | -toBeUsed(A,path3) # label(openGatein2) # label(axiom).  [clausify(49)].

given #137 (I,wt=10): 238 -open(succ(A),in1) | toBeUsed(A,path0) | toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].

given #138 (I,wt=7): 239 open(succ(A),in1) | -toBeUsed(A,path0) # label(openGatein1) # label(axiom).  [clausify(50)].

given #139 (I,wt=7): 240 open(succ(A),in1) | -toBeUsed(A,path2) # label(openGatein1) # label(axiom).  [clausify(50)].

given #140 (I,wt=7): 241 less(f6(A),A) | open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].

given #141 (I,wt=7): 242 -less(f6(A),A) | -open(A,in1) # label(willOpenin1) # label(conjecture).  [deny(51)].

given #142 (I,wt=10): 243 -at(succ(A),B,out2) | less(C,f1(C,B)).  [resolve(52,a,53,a)].

given #143 (I,wt=10): 244 -at(succ(A),B,out1) | less(C,f1(C,B)).  [resolve(59,a,53,a)].

given #144 (I,wt=10): 245 -at(succ(A),B,s2) | less(C,f1(C,B)).  [resolve(61,a,53,a)].

given #145 (I,wt=10): 246 -at(succ(A),B,s1) | less(C,f1(C,B)).  [resolve(63,a,53,a)].

given #146 (I,wt=17): 247 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out2).  [resolve(64,c,65,a)].

given #147 (I,wt=17): 248 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,out1).  [resolve(64,c,66,a)].

given #148 (I,wt=17): 249 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s2).  [resolve(64,c,67,a)].

given #149 (I,wt=17): 250 -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2) | -at(succ(A),B,s1).  [resolve(64,c,68,a)].

given #150 (I,wt=17): 251 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out2).  [resolve(70,c,65,a)].

given #151 (I,wt=17): 252 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,out1).  [resolve(70,c,66,a)].

given #152 (I,wt=17): 253 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s2).  [resolve(70,c,67,a)].

given #153 (I,wt=17): 254 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | -at(succ(A),B,s1).  [resolve(70,c,68,a)].

given #154 (I,wt=21): 255 -at(succ(A),B,in1) | appear(A,B,in1) | -open(A,in1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(70,c,69,c)].

given #155 (I,wt=21): 256 at(succ(A),B,in1) | -at(A,B,in1) | -at(succ(A),B,in2) | appear(A,B,in2) | -open(A,in2).  [resolve(71,c,64,c)].

given #156 (I,wt=23): 257 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(72,b,64,c)].

given #157 (I,wt=23): 258 -at(succ(A),B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(72,b,70,c)].

given #158 (I,wt=28): 262 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(73,b,69,c)].

given #159 (I,wt=28): 263 -at(succ(A),B,out2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(73,b,71,c)].

given #160 (I,wt=28): 268 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(74,b,69,c)].

given #161 (I,wt=28): 269 -at(succ(A),B,out2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(74,b,71,c)].

given #162 (I,wt=28): 274 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(75,a,69,c)].

given #163 (I,wt=28): 275 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(75,a,71,c)].

given #164 (I,wt=28): 280 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(76,a,69,c)].

given #165 (I,wt=28): 281 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(76,a,71,c)].

given #166 (I,wt=23): 283 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(77,b,64,c)].

given #167 (I,wt=23): 284 -at(succ(A),B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(77,b,70,c)].

given #168 (I,wt=28): 288 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(78,b,69,c)].

given #169 (I,wt=28): 289 -at(succ(A),B,out1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(78,b,71,c)].

given #170 (I,wt=28): 294 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(79,b,69,c)].

given #171 (I,wt=28): 295 -at(succ(A),B,out1) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(79,b,71,c)].

given #172 (I,wt=28): 299 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(80,b,69,c)].

given #173 (I,wt=28): 300 -at(succ(A),B,out1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(80,b,71,c)].

given #174 (I,wt=28): 304 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(81,b,69,c)].

given #175 (I,wt=28): 305 -at(succ(A),B,out1) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(81,b,71,c)].

given #176 (I,wt=22): 311 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in2).  [copy(310),merge(f)].

given #177 (I,wt=26): 312 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(82,a,71,c)].

given #178 (I,wt=22): 317 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in2).  [copy(316),merge(f)].

given #179 (I,wt=26): 318 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(C),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [resolve(83,a,71,c)].

given #180 (I,wt=23): 320 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(84,b,64,c)].

given #181 (I,wt=23): 321 -at(succ(A),B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(84,b,70,c)].

given #182 (I,wt=28): 324 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(85,b,69,c)].

given #183 (I,wt=28): 325 -at(succ(A),B,s2) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(85,b,71,c)].

given #184 (I,wt=28): 329 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(86,b,69,c)].

given #185 (I,wt=28): 330 -at(succ(A),B,s2) | switch(C,s2) != out2 | -at(C,B,s2) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(86,b,71,c)].

given #186 (I,wt=28): 334 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(87,b,69,c)].

given #187 (I,wt=28): 335 -at(succ(A),B,s2) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(87,b,71,c)].

given #188 (I,wt=28): 339 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(88,b,69,c)].

given #189 (I,wt=28): 340 -at(succ(A),B,s2) | switch(C,s2) != out1 | -at(C,B,s2) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(88,b,71,c)].

given #190 (I,wt=22): 344 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(343),merge(f)].

given #191 (I,wt=26): 345 -at(succ(A),B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(89,b,71,c)].

given #192 (I,wt=26): 350 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(90,a,69,c)].

given #193 (I,wt=22): 352 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out2) | at(succ(A),B,in1).  [copy(351),merge(f)].

given #194 (I,wt=26): 356 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(91,a,69,c)].

given #195 (I,wt=22): 358 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,out1) | at(succ(A),B,in1).  [copy(357),merge(f)].

given #196 (I,wt=26): 361 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [resolve(92,a,69,c)].

given #197 (I,wt=22): 363 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(C),B,s2) | at(succ(A),B,in1).  [copy(362),merge(f)].

given #198 (I,wt=23): 365 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [resolve(93,b,64,c)].

given #199 (I,wt=23): 366 -at(succ(A),B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [resolve(93,b,70,c)].

given #200 (I,wt=28): 368 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(94,b,69,c)].

given #201 (I,wt=28): 369 -at(succ(A),B,s1) | switch(C,s1) != out2 | -at(C,B,s1) | at(succ(C),B,out2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(94,b,71,c)].

given #202 (I,wt=28): 376 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(96,b,69,c)].

given #203 (I,wt=28): 377 -at(succ(A),B,s1) | switch(C,s1) != out1 | -at(C,B,s1) | at(succ(C),B,out1) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(96,b,71,c)].

given #204 (I,wt=22): 385 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [copy(384),merge(f)].

given #205 (I,wt=26): 386 -at(succ(A),B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [resolve(98,b,71,c)].

given #206 (I,wt=26): 388 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [resolve(99,b,69,c)].

given #207 (I,wt=22): 390 -at(succ(A),B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [copy(389),merge(f)].

given #208 (I,wt=3): 392 less(A,A).  [factor(102,a,b)].

given #209 (I,wt=25): 393 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(264,a,e)].

given #210 (I,wt=25): 394 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(270,a,e)].

given #211 (I,wt=19): 395 switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(271,d,e)].

given #212 (I,wt=25): 396 switch(f1(A,B),s1) != out1 | -at(f1(A,B),B,s1) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(276,d,e)].

given #213 (I,wt=19): 397 switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1) | -at(succ(A),B,out2).  [factor(277,d,e)].

given #214 (I,wt=25): 398 switch(f1(A,B),s2) != out1 | -at(f1(A,B),B,s2) | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2).  [factor(282,d,e)].

given #215 (I,wt=19): 399 -at(succ(A),B,out1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(285,a,e)].

given #216 (I,wt=25): 400 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(290,a,e)].

given #217 (I,wt=19): 401 -at(succ(A),B,out1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(291,a,e)].

given #218 (I,wt=25): 402 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(296,a,e)].

given #219 (I,wt=25): 403 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(301,a,e)].

given #220 (I,wt=25): 404 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(306,a,e)].

given #221 (I,wt=17): 405 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out2).  [factor(307,d,e)].

given #222 (I,wt=23): 406 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out2).  [factor(313,d,e)].

given #223 (I,wt=17): 407 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(succ(A),B,out1).  [factor(314,d,e)].

given #224 (I,wt=23): 408 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(succ(C),B,out1).  [factor(319,d,e)].

given #225 (I,wt=19): 409 -at(succ(A),B,s2) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(322,a,e)].

given #226 (I,wt=25): 410 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(326,a,e)].

given #227 (I,wt=19): 412 -at(succ(A),B,s2) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(327,a,e)].

given #228 (I,wt=25): 416 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out2).  [factor(331,a,e)].

given #229 (I,wt=19): 417 -at(succ(A),B,s2) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(332,a,e)].

given #230 (I,wt=25): 418 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(336,a,e)].

given #231 (I,wt=19): 420 -at(succ(A),B,s2) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(337,a,e)].

given #232 (I,wt=25): 424 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out1 | -at(f1(C,B),B,s2) | at(succ(f1(C,B)),B,out1).  [factor(341,a,e)].

given #233 (I,wt=23): 425 -at(succ(A),B,s2) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(346,a,e)].

given #234 (I,wt=17): 426 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out2).  [factor(347,d,e)].

given #235 (I,wt=23): 427 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out2).  [factor(353,d,e)].

given #236 (I,wt=17): 428 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,out1).  [factor(354,d,e)].

given #237 (I,wt=23): 429 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,out1).  [factor(359,d,e)].

given #238 (I,wt=17): 430 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(succ(A),B,s2).  [factor(360,d,e)].

given #239 (I,wt=23): 431 -open(f1(A,B),in1) | -at(f1(A,B),B,in1) | at(succ(f1(A,B)),B,s1) | -at(succ(C),B,s2).  [factor(364,d,e)].

given #240 (I,wt=19): 433 -at(succ(A),B,s1) | switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2).  [factor(367,a,e)].

given #241 (I,wt=25): 436 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out2 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out2).  [factor(370,a,e)].

given #242 (I,wt=19): 437 -at(succ(A),B,s1) | switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2).  [factor(371,a,e)].

given #243 (I,wt=19): 440 -at(succ(A),B,s1) | switch(A,s1) != out1 | -at(A,B,s1) | at(succ(A),B,out1).  [factor(375,a,e)].

given #244 (I,wt=25): 443 -at(succ(A),B,s1) | switch(f1(C,B),s1) != out1 | -at(f1(C,B),B,s1) | at(succ(f1(C,B)),B,out1).  [factor(378,a,e)].

given #245 (I,wt=19): 444 -at(succ(A),B,s1) | switch(A,s2) != out1 | -at(A,B,s2) | at(succ(A),B,out1).  [factor(379,a,e)].

given #246 (I,wt=17): 446 -at(succ(A),B,s1) | -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2).  [factor(383,a,e)].

given #247 (I,wt=23): 447 -at(succ(A),B,s1) | -open(f1(C,B),in2) | -at(f1(C,B),B,in2) | at(succ(f1(C,B)),B,s2).  [factor(387,a,e)].

given #248 (I,wt=23): 448 -at(succ(A),B,s1) | -open(f1(C,B),in1) | -at(f1(C,B),B,in1) | at(succ(f1(C,B)),B,s1).  [factor(391,a,e)].

given #249 (A,wt=9): 449 less(A,B) | -less(C,B) | less(C,A).  [resolve(102,a,101,b)].

given #250 (F,wt=9): 473 -at(pred(A),B,out2) | -at(A,B,out2).  [para(106(a,1),136(b,1))].

given #251 (F,wt=9): 474 -at(pred(A),B,out1) | -at(A,B,out1).  [para(106(a,1),137(b,1))].

given #252 (T,wt=4): 459 less(pred(A),A).  [para(106(a,1),103(a,2))].

given #253 (T,wt=6): 486 -free(A,path2) | free(A,path0).  [resolve(165,b,162,b)].

given #254 (T,wt=6): 487 free(A,path2) | -free(A,path0).  [resolve(166,b,161,b)].

given #255 (T,wt=6): 491 -free(A,path3) | free(A,path1).  [resolve(167,b,164,b)].

given #256 (A,wt=7): 450 -less(A,B) | less(A,succ(B)).  [resolve(103,a,101,b)].

given #257 (T,wt=5): 751 less(pred(A),succ(A)).  [resolve(450,a,459,a)].

given #258 (T,wt=5): 754 less(A,succ(succ(A))).  [resolve(450,a,103,a)].

given #259 (T,wt=5): 760 less(pred(pred(A)),A).  [para(106(a,1),751(a,2))].

given #260 (T,wt=6): 492 free(A,path3) | -free(A,path1).  [resolve(168,b,163,b)].

given #261 (A,wt=7): 451 -less(succ(A),B) | less(A,B).  [resolve(103,a,101,a)].

given #262 (T,wt=6): 755 less(pred(A),succ(succ(A))).  [resolve(751,a,450,a)].

given #263 (T,wt=6): 761 less(A,succ(succ(succ(A)))).  [resolve(754,a,450,a)].

given #264 (T,wt=6): 766 less(pred(pred(A)),succ(A)).  [resolve(760,a,450,a)].

given #265 (T,wt=6): 786 less(pred(pred(pred(A))),A).  [para(106(a,1),766(a,2))].

given #266 (A,wt=8): 452 -less(succ(A),A) | succ(A) = A.  [resolve(103,a,100,b),flip(b)].

given #267 (T,wt=7): 460 less(A,pred(B)) | less(B,A).  [para(106(a,1),104(b,1))].

given #268 (T,wt=7): 482 free(succ(A),path0) | open(A,in1).  [resolve(162,b,117,b)].

given #269 (T,wt=7): 485 free(succ(A),path1) | open(A,in2).  [resolve(164,b,115,b)].

given #270 (T,wt=7): 490 free(succ(A),path2) | open(A,in1).  [resolve(166,b,117,b)].

given #271 (A,wt=10): 453 less(succ(A),B) | -less(C,B) | less(C,A).  [resolve(104,a,101,b)].

given #272 (T,wt=7): 495 free(succ(A),path3) | open(A,in2).  [resolve(168,b,115,b)].

given #273 (T,wt=7): 504 -open(A,in1) | less(A,f6(A)).  [resolve(242,a,102,b)].

given #274 (T,wt=7): 745 less(A,succ(B)) | less(B,A).  [resolve(449,b,103,a)].

given #275 (T,wt=7): 747 less(A,B) | less(pred(B),A).  [resolve(459,a,449,b)].

given #276 (A,wt=10): 454 less(succ(A),B) | -less(A,C) | less(B,C).  [resolve(104,a,101,a)].

given #277 (T,wt=7): 748 -less(A,pred(B)) | less(A,B).  [resolve(459,a,101,b)].

given #278 (T,wt=7): 749 -less(A,B) | less(pred(A),B).  [resolve(459,a,101,a)].

given #279 (T,wt=7): 771 less(pred(A),succ(succ(succ(A)))).  [resolve(755,a,450,a)].

given #280 (T,wt=7): 776 less(A,succ(succ(succ(succ(A))))).  [resolve(761,a,451,a)].

given #281 (A,wt=10): 455 less(succ(A),B) | -less(A,B) | B = A.  [resolve(104,a,100,b)].

given #282 (T,wt=7): 781 less(pred(pred(A)),succ(succ(A))).  [resolve(766,a,450,a)].

given #283 (T,wt=7): 787 less(pred(pred(pred(A))),succ(A)).  [resolve(786,a,450,a)].

given #284 (T,wt=7): 802 free(A,path0) | open(pred(A),in1).  [para(106(a,1),482(a,1))].

given #285 (T,wt=7): 803 free(A,path1) | open(pred(A),in2).  [para(106(a,1),485(a,1))].

given #286 (A,wt=10): 456 less(succ(A),B) | -less(A,B) | A = B.  [resolve(104,a,100,a)].

given #287 (T,wt=7): 805 free(A,path2) | open(pred(A),in1).  [para(106(a,1),490(a,1))].

given #288 (T,wt=7): 821 free(A,path3) | open(pred(A),in2).  [para(106(a,1),495(a,1))].

given #289 (T,wt=7): 842 less(pred(pred(pred(pred(A)))),A).  [resolve(748,a,786,a)].

given #290 (T,wt=8): 469 open(pred(A),in2) | -at(A,B,s2).  [para(106(a,1),115(b,1))].

given #291 (A,wt=10): 457 less(A,B) | -less(C,succ(B)) | less(C,A).  [resolve(104,b,101,b)].

given #292 (T,wt=8): 471 open(pred(A),in1) | -at(A,B,s1).  [para(106(a,1),117(b,1))].

given #293 (T,wt=8): 481 free(succ(A),path0) | at(A,B,in1).  [resolve(162,b,118,b)].

given #294 (T,wt=8): 484 free(succ(A),path1) | at(A,B,in2).  [resolve(164,b,116,b)].

given #295 (T,wt=8): 489 free(succ(A),path2) | at(A,B,in1).  [resolve(166,b,118,b)].

given #296 (A,wt=11): 458 less(A,B) | -less(A,succ(B)) | succ(B) = A.  [resolve(104,b,100,b)].

given #297 (T,wt=8): 494 free(succ(A),path3) | at(A,B,in2).  [resolve(168,b,116,b)].

given #298 (T,wt=8): 503 -open(A,in1) | less(succ(A),f6(A)).  [resolve(242,a,104,a)].

given #299 (T,wt=8): 750 -less(A,pred(A)) | pred(A) = A.  [resolve(459,a,100,b)].

given #300 (T,wt=8): 752 less(f6(A),succ(A)) | open(A,in1).  [resolve(450,a,241,a)].

given #301 (A,wt=16): 461 switch(pred(A),s1) = out2 | switch(pred(A),s2) = out2 | -at(A,B,out2).  [para(106(a,1),107(c,1))].

given #302 (T,wt=8): 753 less(succ(A),succ(B)) | less(B,A).  [resolve(450,a,104,b)].

given #303 (T,wt=8): 756 less(A,succ(B)) | less(pred(B),A).  [resolve(751,a,449,b)].

given #304 (T,wt=8): 757 -less(A,pred(B)) | less(A,succ(B)).  [resolve(751,a,101,b)].

given #305 (T,wt=8): 758 -less(succ(A),B) | less(pred(A),B).  [resolve(751,a,101,a)].

given #306 (A,wt=15): 462 switch(pred(A),s1) = out2 | at(pred(A),B,s2) | -at(A,B,out2).  [para(106(a,1),108(c,1))].

given #307 (T,wt=8): 762 less(A,succ(succ(B))) | less(B,A).  [resolve(754,a,449,b)].

given #308 (T,wt=8): 763 -less(A,B) | less(A,succ(succ(B))).  [resolve(754,a,101,b)].

given #309 (T,wt=8): 764 -less(succ(succ(A)),B) | less(A,B).  [resolve(754,a,101,a)].

given #310 (T,wt=8): 767 less(A,B) | less(pred(pred(B)),A).  [resolve(760,a,449,b)].

given #311 (A,wt=15): 463 at(pred(A),B,s1) | switch(pred(A),s2) = out2 | -at(A,B,out2).  [para(106(a,1),109(c,1))].

given #312 (T,wt=8): 768 -less(A,pred(pred(B))) | less(A,B).  [resolve(760,a,101,b)].

given #313 (T,wt=8): 769 -less(A,B) | less(pred(pred(A)),B).  [resolve(760,a,101,a)].

given #314 (T,wt=8): 792 less(A,succ(B)) | less(B,pred(A)).  [resolve(460,a,451,a)].

given #315 (T,wt=8): 798 less(A,pred(f6(A))) | -open(A,in1).  [resolve(460,b,242,a)].

given #316 (A,wt=14): 464 at(pred(A),B,s1) | at(pred(A),B,s2) | -at(A,B,out2).  [para(106(a,1),110(c,1))].

given #317 (T,wt=8): 815 less(succ(A),B) | less(pred(B),A).  [resolve(453,b,459,a)].

given #318 (T,wt=8): 823 less(A,succ(B)) | less(B,succ(A)).  [resolve(745,a,451,a)].

given #319 (T,wt=8): 829 less(A,succ(f6(A))) | -open(A,in1).  [resolve(745,b,242,a)].

given #320 (T,wt=8): 832 less(pred(A),succ(B)) | less(B,A).  [resolve(747,a,451,a)].

given #321 (A,wt=16): 465 switch(pred(A),s1) = out1 | switch(pred(A),s2) = out1 | -at(A,B,out1).  [para(106(a,1),111(c,1))].

given #322 (T,wt=8): 834 less(pred(A),f6(A)) | -open(A,in1).  [resolve(747,a,242,a)].

given #323 (T,wt=8): 843 less(pred(A),B) | less(pred(B),A).  [resolve(748,a,747,b)].

given #324 (T,wt=8): 844 less(A,B) | less(pred(B),pred(A)).  [resolve(748,a,460,b)].

given #325 (T,wt=8): 846 less(pred(f6(A)),A) | open(A,in1).  [resolve(749,a,241,a)].

given #326 (A,wt=15): 466 switch(pred(A),s1) = out1 | at(pred(A),B,s2) | -at(A,B,out1).  [para(106(a,1),112(c,1))].

given #327 (T,wt=8): 847 less(pred(pred(A)),succ(succ(succ(A)))).  [resolve(771,a,749,a)].

given #328 (T,wt=8): 849 less(pred(A),succ(succ(succ(succ(A))))).  [resolve(771,a,450,a)].

given #329 (T,wt=8): 855 less(A,succ(succ(succ(succ(succ(A)))))).  [resolve(776,a,451,a)].

given #330 (T,wt=8): 865 less(pred(pred(pred(A))),succ(succ(A))).  [resolve(781,a,749,a)].

given #331 (A,wt=15): 467 at(pred(A),B,s1) | switch(pred(A),s2) = out1 | -at(A,B,out1).  [para(106(a,1),113(c,1))].

given #332 (T,wt=8): 871 less(pred(pred(pred(pred(A)))),succ(A)).  [resolve(787,a,749,a)].

given #333 (T,wt=8): 882 less(pred(pred(pred(pred(pred(A))))),A).  [resolve(842,a,749,a)].

given #334 (T,wt=9): 470 at(pred(A),B,in2) | -at(A,B,s2).  [para(106(a,1),116(b,1))].

given #335 (T,wt=8): 1135 at(pred(A),B,in2) | free(A,path3).  [resolve(470,b,168,b)].

given #336 (A,wt=14): 468 at(pred(A),B,s1) | at(pred(A),B,s2) | -at(A,B,out1).  [para(106(a,1),114(c,1))].

given #337 (T,wt=8): 1136 at(pred(A),B,in2) | free(A,path1).  [resolve(470,b,164,b)].

given #338 (T,wt=9): 472 at(pred(A),B,in1) | -at(A,B,s1).  [para(106(a,1),118(b,1))].

given #339 (T,wt=8): 1147 at(pred(A),B,in1) | free(A,path2).  [resolve(472,b,166,b)].

given #340 (T,wt=8): 1148 at(pred(A),B,in1) | free(A,path0).  [resolve(472,b,162,b)].

given #341 (A,wt=14): 475 -at(A,B,in2) | appear(pred(A),B,in2) | at(pred(A),B,in2).  [para(106(a,1),141(a,1))].

given #342 (T,wt=9): 505 -at(A,B,out2) | less(C,f1(C,B)).  [para(106(a,1),243(a,1))].

given #343 (T,wt=9): 506 -at(A,B,out1) | less(C,f1(C,B)).  [para(106(a,1),244(a,1))].

given #344 (T,wt=9): 507 less(A,f1(A,B)) | free(succ(C),path3).  [resolve(245,a,168,b)].

given #345 (T,wt=9): 508 less(A,f1(A,B)) | free(succ(C),path1).  [resolve(245,a,164,b)].

given #346 (A,wt=14): 476 -at(A,B,in1) | appear(pred(A),B,in1) | at(pred(A),B,in1).  [para(106(a,1),144(a,1))].

given #347 (T,wt=9): 509 -at(A,B,s2) | less(C,f1(C,B)).  [para(106(a,1),245(a,1))].

given #348 (T,wt=8): 1195 less(A,f1(A,B)) | free(C,path3).  [resolve(509,a,168,b)].

given #349 (T,wt=8): 1196 less(A,f1(A,B)) | free(C,path1).  [resolve(509,a,164,b)].

given #350 (T,wt=9): 510 less(A,f1(A,B)) | free(succ(C),path2).  [resolve(246,a,166,b)].

given #351 (A,wt=13): 477 pred(A) = A | clockOrder(pred(A)) = in2 | clockOrder(A) != in1.  [para(106(a,1),149(c,1,1)),rewrite([106(2)]),flip(a)].

given #352 (T,wt=9): 511 less(A,f1(A,B)) | free(succ(C),path0).  [resolve(246,a,162,b)].

given #353 (T,wt=9): 512 -at(A,B,s1) | less(C,f1(C,B)).  [para(106(a,1),246(a,1))].

given #354 (T,wt=8): 1254 less(A,f1(A,B)) | free(C,path2).  [resolve(512,a,166,b)].

given #355 (T,wt=8): 1255 less(A,f1(A,B)) | free(C,path0).  [resolve(512,a,162,b)].

given #356 (A,wt=13): 478 pred(A) = A | clockOrder(pred(A)) = in1 | clockOrder(A) != in2.  [para(106(a,1),151(c,1,1)),rewrite([106(2)]),flip(a)].

given #357 (T,wt=9): 746 less(A,B) | less(C,A) | less(B,C).  [resolve(449,b,102,b)].

given #358 (T,wt=9): 772 less(A,succ(succ(B))) | less(pred(B),A).  [resolve(755,a,449,b)].

given #359 (T,wt=9): 773 -less(A,pred(B)) | less(A,succ(succ(B))).  [resolve(755,a,101,b)].

given #360 (T,wt=9): 774 -less(succ(succ(A)),B) | less(pred(A),B).  [resolve(755,a,101,a)].

given #361 (A,wt=13): 479 clockOrder(A) = in2 | succ(A) = A | clockOrder(succ(A)) = in2.  [resolve(152,b,150,b)].

given #362 (T,wt=9): 777 less(A,succ(succ(succ(B)))) | less(B,A).  [resolve(761,a,449,b)].

given #363 (T,wt=9): 778 -less(A,B) | less(A,succ(succ(succ(B)))).  [resolve(761,a,101,b)].

given #364 (T,wt=9): 779 -less(succ(succ(succ(A))),B) | less(A,B).  [resolve(761,a,101,a)].

given #365 (T,wt=9): 782 less(A,succ(B)) | less(pred(pred(B)),A).  [resolve(766,a,449,b)].

given #366 (A,wt=10): 480 free(A,path0) | -at(A,B,C) | s1 = C.  [resolve(162,b,138,b)].

given #367 (T,wt=6): 1368 free(A,path0) | free(A,path3).  [resolve(480,b,168,b),unit_del(b,129)].

given #368 (T,wt=6): 1369 free(A,path0) | free(A,path1).  [resolve(480,b,164,b),unit_del(b,129)].

given #369 (T,wt=7): 1360 free(pred(A),path0) | free(A,path0).  [resolve(480,b,1148,a),flip(b),unit_del(b,125)].

given #370 (T,wt=7): 1361 free(pred(A),path0) | free(A,path2).  [resolve(480,b,1147,a),flip(b),unit_del(b,125)].

given #371 (A,wt=10): 483 free(A,path1) | -at(A,B,C) | s2 = C.  [resolve(164,b,138,b)].

given #372 (T,wt=6): 1380 free(A,path1) | free(A,path2).  [resolve(483,b,166,b),flip(b),unit_del(b,129)].

given #373 (T,wt=7): 1362 free(pred(A),path0) | free(A,path1).  [resolve(480,b,1136,a),flip(b),unit_del(b,121)].

given #374 (T,wt=7): 1363 free(pred(A),path0) | free(A,path3).  [resolve(480,b,1135,a),flip(b),unit_del(b,121)].

given #375 (T,wt=7): 1364 free(A,path0) | free(succ(A),path3).  [resolve(480,b,494,b),flip(b),unit_del(b,121)].

given #376 (A,wt=10): 488 free(A,path2) | -at(A,B,C) | s1 = C.  [resolve(166,b,138,b)].

given #377 (T,wt=6): 1390 free(A,path2) | free(A,path3).  [resolve(488,b,168,b),unit_del(b,129)].

given #378 (T,wt=7): 1365 free(A,path0) | free(succ(A),path2).  [resolve(480,b,489,b),flip(b),unit_del(b,125)].

given #379 (T,wt=7): 1366 free(A,path0) | free(succ(A),path1).  [resolve(480,b,484,b),flip(b),unit_del(b,121)].

given #380 (T,wt=7): 1367 free(A,path0) | free(succ(A),path0).  [resolve(480,b,481,b),flip(b),unit_del(b,125)].

given #381 (A,wt=10): 493 free(A,path3) | -at(A,B,C) | s2 = C.  [resolve(168,b,138,b)].

given #382 (T,wt=7): 1370 free(A,path0) | free(pred(A),path2).  [resolve(1360,a,487,b)].

given #383 (T,wt=7): 1371 free(A,path2) | free(pred(A),path2).  [resolve(1361,a,487,b)].

given #384 (T,wt=7): 1372 free(pred(A),path1) | free(A,path0).  [resolve(483,b,1148,a),flip(b),unit_del(b,124)].

given #385 (T,wt=7): 1373 free(pred(A),path1) | free(A,path2).  [resolve(483,b,1147,a),flip(b),unit_del(b,124)].

given #386 (A,wt=11): 496 -configuration(A,B) | configuration(pred(A),B) | toBeUsed(pred(A),B).  [para(106(a,1),231(a,1))].

given #387 (T,wt=7): 1374 free(pred(A),path1) | free(A,path1).  [resolve(483,b,1136,a),flip(b),unit_del(b,120)].

given #388 (T,wt=7): 1375 free(pred(A),path1) | free(A,path3).  [resolve(483,b,1135,a),flip(b),unit_del(b,120)].

given #389 (T,wt=7): 1376 free(A,path1) | free(succ(A),path3).  [resolve(483,b,494,b),flip(b),unit_del(b,120)].

given #390 (T,wt=7): 1377 free(A,path1) | free(succ(A),path2).  [resolve(483,b,489,b),flip(b),unit_del(b,124)].

given #391 (A,wt=11): 497 -configuration(A,B) | -free(pred(A),B) | toBeUsed(pred(A),B).  [para(106(a,1),232(a,1))].

given #392 (T,wt=7): 1378 free(A,path1) | free(succ(A),path1).  [resolve(483,b,484,b),flip(b),unit_del(b,120)].

given #393 (T,wt=7): 1379 free(A,path1) | free(succ(A),path0).  [resolve(483,b,481,b),flip(b),unit_del(b,124)].

given #394 (T,wt=7): 1381 free(A,path1) | free(pred(A),path2).  [resolve(1362,a,487,b)].

given #395 (T,wt=7): 1382 free(A,path3) | free(pred(A),path2).  [resolve(1363,a,487,b)].

given #396 (A,wt=11): 498 -open(A,in2) | toBeUsed(pred(A),path1) | toBeUsed(pred(A),path3).  [para(106(a,1),235(a,1))].

given #397 (T,wt=7): 1386 free(A,path2) | free(succ(A),path3).  [resolve(488,b,494,b),flip(b),unit_del(b,121)].

given #398 (T,wt=7): 1387 free(A,path2) | free(succ(A),path2).  [resolve(488,b,489,b),flip(b),unit_del(b,125)].

given #399 (T,wt=7): 1388 free(A,path2) | free(succ(A),path1).  [resolve(488,b,484,b),flip(b),unit_del(b,121)].

given #400 (T,wt=7): 1389 free(A,path2) | free(succ(A),path0).  [resolve(488,b,481,b),flip(b),unit_del(b,125)].

given #401 (A,wt=11): 499 -open(A,in1) | toBeUsed(pred(A),path0) | toBeUsed(pred(A),path2).  [para(106(a,1),238(a,1))].

given #402 (T,wt=7): 1392 free(pred(A),path3) | free(A,path0).  [resolve(493,b,1148,a),flip(b),unit_del(b,124)].

given #403 (T,wt=7): 1393 free(pred(A),path3) | free(A,path2).  [resolve(493,b,1147,a),flip(b),unit_del(b,124)].

given #404 (T,wt=7): 1394 free(pred(A),path3) | free(A,path1).  [resolve(493,b,1136,a),flip(b),unit_del(b,120)].

given #405 (T,wt=7): 1395 free(pred(A),path3) | free(A,path3).  [resolve(493,b,1135,a),flip(b),unit_del(b,120)].

given #406 (A,wt=10): 500 open(A,in1) | -less(B,f6(A)) | less(B,A).  [resolve(241,a,101,b)].

given #407 (T,wt=7): 1396 free(A,path3) | free(succ(A),path3).  [resolve(493,b,494,b),flip(b),unit_del(b,120)].

given #408 (T,wt=7): 1397 free(A,path3) | free(succ(A),path2).  [resolve(493,b,489,b),flip(b),unit_del(b,124)].

given #409 (T,wt=7): 1398 free(A,path3) | free(succ(A),path1).  [resolve(493,b,484,b),flip(b),unit_del(b,120)].

given #410 (T,wt=7): 1399 free(A,path3) | free(succ(A),path0).  [resolve(493,b,481,b),flip(b),unit_del(b,124)].

given #411 (A,wt=10): 501 open(A,in1) | -less(A,B) | less(f6(A),B).  [resolve(241,a,101,a)].

given #412 (T,wt=9): 783 -less(A,pred(pred(B))) | less(A,succ(B)).  [resolve(766,a,101,b)].

given #413 (T,wt=9): 784 -less(succ(A),B) | less(pred(pred(A)),B).  [resolve(766,a,101,a)].

given #414 (T,wt=9): 788 less(A,B) | less(pred(pred(pred(B))),A).  [resolve(786,a,449,b)].

given #415 (T,wt=9): 789 -less(A,pred(pred(pred(B)))) | less(A,B).  [resolve(786,a,101,b)].

given #416 (A,wt=11): 502 open(A,in1) | -less(A,f6(A)) | f6(A) = A.  [resolve(241,a,100,b)].

given #417 (T,wt=9): 790 -less(A,B) | less(pred(pred(pred(A))),B).  [resolve(786,a,101,a)].

given #418 (T,wt=9): 794 less(A,f6(pred(A))) | -open(pred(A),in1).  [resolve(460,a,242,a)].

given #419 (T,wt=9): 809 less(succ(A),B) | less(pred(pred(B)),A).  [resolve(453,b,760,a)].

given #420 (T,wt=9): 811 less(succ(A),succ(succ(B))) | less(B,A).  [resolve(453,b,754,a)].

given #421 (A,wt=17): 513 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,out2).  [para(106(a,1),247(a,1)),rewrite([106(10)])].

given #422 (T,wt=9): 812 less(succ(A),succ(B)) | less(pred(B),A).  [resolve(453,b,751,a)].

given #423 (T,wt=9): 825 less(A,f6(succ(A))) | -open(succ(A),in1).  [resolve(745,a,242,a)].

given #424 (T,wt=9): 845 less(f6(pred(A)),A) | open(pred(A),in1).  [resolve(748,a,241,a)].

given #425 (T,wt=9): 936 open(A,in1) | less(pred(f6(A)),succ(A)).  [resolve(752,a,749,a)].

given #426 (A,wt=17): 514 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,out1).  [para(106(a,1),248(a,1)),rewrite([106(10)])].

given #427 (T,wt=9): 940 open(A,in1) | less(f6(A),succ(succ(A))).  [resolve(752,a,450,a)].

given #428 (T,wt=9): 955 less(succ(A),succ(f6(A))) | -open(A,in1).  [resolve(753,b,242,a)].

given #429 (T,wt=9): 960 less(pred(A),B) | less(pred(B),succ(A)).  [resolve(756,a,749,a)].

given #430 (T,wt=9): 963 less(pred(A),succ(B)) | less(B,succ(A)).  [resolve(756,a,451,a)].

given #431 (A,wt=17): 515 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,s2).  [para(106(a,1),249(a,1)),rewrite([106(10)])].

given #432 (T,wt=9): 969 less(pred(pred(pred(pred(pred(A))))),succ(A)).  [resolve(757,a,842,a)].

given #433 (T,wt=9): 971 less(A,succ(B)) | less(pred(B),pred(A)).  [resolve(757,a,460,b)].

given #434 (T,wt=9): 973 less(pred(A),succ(succ(succ(succ(succ(A)))))).  [resolve(758,a,776,a)].

given #435 (T,wt=9): 975 less(A,B) | less(pred(B),succ(succ(A))).  [resolve(762,a,749,a)].

given #436 (A,wt=17): 516 -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2) | -at(A,B,s1).  [para(106(a,1),250(a,1)),rewrite([106(10)])].

given #437 (T,wt=9): 978 less(A,succ(B)) | less(B,succ(succ(A))).  [resolve(762,a,451,a)].

given #438 (T,wt=9): 983 less(A,succ(succ(f6(A)))) | -open(A,in1).  [resolve(762,b,242,a)].

given #439 (T,wt=9): 985 less(pred(pred(pred(pred(A)))),succ(succ(A))).  [resolve(763,a,842,a)].

given #440 (T,wt=9): 986 less(pred(pred(pred(A))),succ(succ(succ(A)))).  [resolve(763,a,787,a)].

given #441 (A,wt=17): 517 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,out2).  [para(106(a,1),251(a,1)),rewrite([106(10)])].

given #442 (T,wt=9): 987 less(pred(pred(A)),succ(succ(succ(succ(A))))).  [resolve(763,a,781,a)].

given #443 (T,wt=9): 988 less(A,succ(succ(succ(succ(succ(succ(A))))))).  [resolve(763,a,776,a)].

given #444 (T,wt=9): 991 less(A,succ(succ(B))) | less(B,pred(A)).  [resolve(763,a,460,b)].

given #445 (T,wt=9): 994 less(pred(pred(A)),B) | less(pred(B),A).  [resolve(767,a,749,a)].

given #446 (A,wt=17): 518 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,out1).  [para(106(a,1),252(a,1)),rewrite([106(10)])].

given #447 (T,wt=9): 997 less(pred(pred(A)),succ(B)) | less(B,A).  [resolve(767,a,451,a)].

given #448 (T,wt=9): 999 less(pred(pred(A)),f6(A)) | -open(A,in1).  [resolve(767,a,242,a)].

given #449 (T,wt=9): 1003 less(pred(pred(pred(pred(pred(pred(A)))))),A).  [resolve(768,a,842,a)].

given #450 (T,wt=9): 1005 less(A,B) | less(pred(pred(B)),pred(A)).  [resolve(768,a,460,b)].

given #451 (A,wt=17): 519 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,s2).  [para(106(a,1),253(a,1)),rewrite([106(10)])].

given #452 (T,wt=9): 1008 less(pred(pred(f6(A))),A) | open(A,in1).  [resolve(769,a,241,a)].

given #453 (T,wt=9): 1057 less(pred(A),succ(f6(A))) | -open(A,in1).  [resolve(832,b,242,a)].

given #454 (T,wt=9): 1074 less(pred(A),pred(f6(A))) | -open(A,in1).  [resolve(844,a,242,a)].

given #455 (T,wt=9): 1201 free(A,path3) | less(pred(B),f1(B,C)).  [resolve(1195,a,749,a)].

given #456 (A,wt=17): 520 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | -at(A,B,s1).  [para(106(a,1),254(a,1)),rewrite([106(10)])].

given #457 (T,wt=9): 1205 free(A,path3) | less(B,f1(succ(B),C)).  [resolve(1195,a,451,a)].

given #458 (T,wt=9): 1206 free(A,path3) | less(B,succ(f1(B,C))).  [resolve(1195,a,450,a)].

given #459 (T,wt=9): 1215 free(A,path1) | less(pred(B),f1(B,C)).  [resolve(1196,a,749,a)].

given #460 (T,wt=9): 1219 free(A,path1) | less(B,f1(succ(B),C)).  [resolve(1196,a,451,a)].

given #461 (A,wt=22): 521 -at(A,B,in1) | appear(pred(A),B,in1) | -open(pred(A),in1) | at(A,B,in2) | -at(pred(A),B,in2).  [para(106(a,1),255(a,1)),rewrite([106(10)])].

given #462 (T,wt=9): 1220 free(A,path1) | less(B,succ(f1(B,C))).  [resolve(1196,a,450,a)].

given #463 (T,wt=9): 1260 free(A,path2) | less(pred(B),f1(B,C)).  [resolve(1254,a,749,a)].

given #464 (T,wt=9): 1264 free(A,path2) | less(B,f1(succ(B),C)).  [resolve(1254,a,451,a)].

given #465 (T,wt=9): 1265 free(A,path2) | less(B,succ(f1(B,C))).  [resolve(1254,a,450,a)].

given #466 (A,wt=22): 522 at(A,B,in1) | -at(pred(A),B,in1) | -at(A,B,in2) | appear(pred(A),B,in2) | -open(pred(A),in2).  [para(106(a,1),256(c,1)),rewrite([106(2)])].

given #467 (T,wt=9): 1274 free(A,path0) | less(pred(B),f1(B,C)).  [resolve(1255,a,749,a)].

given #468 (T,wt=9): 1278 free(A,path0) | less(B,f1(succ(B),C)).  [resolve(1255,a,451,a)].

given #469 (T,wt=9): 1279 free(A,path0) | less(B,succ(f1(B,C))).  [resolve(1255,a,450,a)].

given #470 (T,wt=10): 743 less(A,B) | less(f6(B),A) | open(B,in1).  [resolve(449,b,241,a)].

given #471 (A,wt=22): 523 -at(A,B,out2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),257(a,1))].

given #472 (T,wt=10): 744 less(A,B) | less(succ(C),A) | less(B,C).  [resolve(449,b,104,b)].

given #473 (T,wt=10): 759 -less(succ(A),pred(A)) | pred(A) = succ(A).  [resolve(751,a,100,b)].

given #474 (T,wt=10): 765 -less(succ(succ(A)),A) | succ(succ(A)) = A.  [resolve(754,a,100,b),flip(b)].

given #475 (T,wt=10): 770 -less(A,pred(pred(A))) | pred(pred(A)) = A.  [resolve(760,a,100,b)].

given #476 (A,wt=22): 524 -at(A,B,out2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),258(a,1))].

given #477 (T,wt=10): 793 less(A,B) | less(C,pred(A)) | less(B,C).  [resolve(460,a,449,b)].

given #478 (T,wt=10): 795 less(A,B) | -less(C,B) | less(C,pred(A)).  [resolve(460,a,101,b)].

given #479 (T,wt=10): 796 less(A,B) | -less(pred(A),C) | less(B,C).  [resolve(460,a,101,a)].

given #480 (T,wt=10): 799 less(A,pred(B)) | -less(C,B) | less(C,A).  [resolve(460,b,101,b)].

given #481 (A,wt=22): 533 -at(A,B,out1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),283(a,1))].

given #482 (T,wt=10): 800 less(A,pred(B)) | -less(A,B) | B = A.  [resolve(460,b,100,b)].

given #483 (T,wt=10): 801 less(A,pred(B)) | -less(A,B) | A = B.  [resolve(460,b,100,a)].

given #484 (T,wt=10): 806 less(succ(A),B) | less(pred(pred(pred(B))),A).  [resolve(453,b,786,a)].

given #485 (T,wt=10): 807 less(succ(A),succ(B)) | less(pred(pred(B)),A).  [resolve(453,b,766,a)].

given #486 (A,wt=22): 534 -at(A,B,out1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),284(a,1))].

given #487 (T,wt=10): 808 less(succ(A),succ(succ(succ(B)))) | less(B,A).  [resolve(453,b,761,a)].

given #488 (T,wt=10): 810 less(succ(A),succ(succ(B))) | less(pred(B),A).  [resolve(453,b,755,a)].

given #489 (T,wt=10): 824 less(A,B) | less(C,succ(A)) | less(B,C).  [resolve(745,a,449,b)].

given #490 (T,wt=10): 826 less(A,B) | -less(C,B) | less(C,succ(A)).  [resolve(745,a,101,b)].

given #491 (A,wt=21): 543 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out2) | at(succ(A),B,in2).  [para(106(a,1),311(d,1))].

given #492 (T,wt=10): 827 less(A,B) | -less(succ(A),C) | less(B,C).  [resolve(745,a,101,a)].

given #493 (T,wt=10): 830 less(A,succ(B)) | -less(C,B) | less(C,A).  [resolve(745,b,101,b)].

given #494 (T,wt=10): 833 less(pred(A),B) | less(C,A) | less(B,C).  [resolve(747,a,449,b)].

given #495 (T,wt=10): 835 less(pred(A),B) | -less(C,B) | less(C,A).  [resolve(747,a,101,b)].

given #496 (A,wt=25): 544 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [para(106(a,1),312(d,1))].

given #497 (T,wt=10): 836 less(pred(A),B) | -less(A,C) | less(B,C).  [resolve(747,a,101,a)].

given #498 (T,wt=10): 838 less(A,B) | -less(C,pred(B)) | less(C,A).  [resolve(747,b,101,b)].

given #499 (T,wt=10): 850 less(A,succ(succ(succ(B)))) | less(pred(B),A).  [resolve(771,a,449,b)].

given #500 (T,wt=10): 851 -less(A,pred(B)) | less(A,succ(succ(succ(B)))).  [resolve(771,a,101,b)].

given #501 (A,wt=21): 545 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out1) | at(succ(A),B,in2).  [para(106(a,1),317(d,1))].

given #502 (T,wt=10): 852 -less(succ(succ(succ(A))),B) | less(pred(A),B).  [resolve(771,a,101,a)].

given #503 (T,wt=10): 856 less(A,succ(succ(succ(succ(B))))) | less(B,A).  [resolve(776,a,449,b)].

given #504 (T,wt=10): 857 -less(A,B) | less(A,succ(succ(succ(succ(B))))).  [resolve(776,a,101,b)].

given #505 (T,wt=10): 858 -less(succ(succ(succ(succ(A)))),B) | less(A,B).  [resolve(776,a,101,a)].

given #506 (A,wt=25): 546 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | -at(C,B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [para(106(a,1),318(d,1))].

given #507 (T,wt=10): 867 less(A,succ(succ(B))) | less(pred(pred(B)),A).  [resolve(781,a,449,b)].

given #508 (T,wt=10): 868 -less(A,pred(pred(B))) | less(A,succ(succ(B))).  [resolve(781,a,101,b)].

given #509 (T,wt=10): 869 -less(succ(succ(A)),B) | less(pred(pred(A)),B).  [resolve(781,a,101,a)].

given #510 (T,wt=10): 873 less(A,succ(B)) | less(pred(pred(pred(B))),A).  [resolve(787,a,449,b)].

given #511 (A,wt=22): 547 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path3).  [resolve(320,a,168,b)].

given #512 (T,wt=10): 874 -less(A,pred(pred(pred(B)))) | less(A,succ(B)).  [resolve(787,a,101,b)].

given #513 (T,wt=10): 875 -less(succ(A),B) | less(pred(pred(pred(A))),B).  [resolve(787,a,101,a)].

given #514 (T,wt=10): 884 less(A,B) | less(pred(pred(pred(pred(B)))),A).  [resolve(842,a,449,b)].

given #515 (T,wt=10): 885 -less(A,pred(pred(pred(pred(B))))) | less(A,B).  [resolve(842,a,101,b)].

given #516 (A,wt=22): 548 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path1).  [resolve(320,a,164,b)].

given #517 (T,wt=10): 886 -less(A,B) | less(pred(pred(pred(pred(A)))),B).  [resolve(842,a,101,a)].

given #518 (T,wt=10): 965 less(pred(A),f6(succ(A))) | -open(succ(A),in1).  [resolve(756,a,242,a)].

given #519 (T,wt=10): 970 less(pred(A),succ(B)) | less(pred(B),succ(A)).  [resolve(757,a,756,b)].

given #520 (T,wt=10): 972 less(f6(pred(A)),succ(A)) | open(pred(A),in1).  [resolve(757,a,241,a)].

given #521 (A,wt=22): 549 -at(A,B,s2) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),320(a,1))].

given #522 (T,wt=10): 974 less(A,succ(B)) | less(pred(B),succ(succ(A))).  [resolve(762,a,758,a)].

given #523 (T,wt=10): 989 less(A,succ(succ(B))) | less(B,succ(succ(A))).  [resolve(763,a,762,b)].

given #524 (T,wt=10): 990 less(f6(A),succ(succ(succ(A)))) | open(A,in1).  [resolve(763,a,752,a)].

given #525 (T,wt=10): 992 less(pred(pred(A)),succ(succ(B))) | less(B,A).  [resolve(767,a,764,a)].

given #526 (A,wt=22): 550 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path3).  [resolve(321,a,168,b)].

given #527 (T,wt=10): 993 less(pred(pred(A)),succ(B)) | less(pred(B),A).  [resolve(767,a,758,a)].

given #528 (T,wt=10): 1004 less(pred(pred(A)),B) | less(pred(pred(B)),A).  [resolve(768,a,767,b)].

given #529 (T,wt=10): 1007 less(pred(pred(f6(A))),succ(A)) | open(A,in1).  [resolve(769,a,752,a)].

given #530 (T,wt=10): 1009 less(A,pred(B)) | less(B,succ(succ(succ(A)))).  [resolve(792,a,763,a)].

given #531 (A,wt=22): 551 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path1).  [resolve(321,a,164,b)].

given #532 (T,wt=10): 1014 less(A,pred(f6(succ(A)))) | -open(succ(A),in1).  [resolve(792,a,242,a)].

given #533 (T,wt=10): 1018 less(A,succ(B)) | less(pred(pred(B)),pred(A)).  [resolve(792,b,769,a)].

given #534 (T,wt=10): 1019 less(A,succ(succ(B))) | less(pred(B),pred(A)).  [resolve(792,b,758,a)].

given #535 (T,wt=10): 1022 less(A,succ(f6(pred(A)))) | -open(pred(A),in1).  [resolve(792,b,242,a)].

given #536 (A,wt=22): 552 -at(A,B,s2) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),321(a,1))].

given #537 (T,wt=10): 1037 less(A,succ(B)) | less(pred(pred(B)),succ(A)).  [resolve(823,a,769,a)].

given #538 (T,wt=10): 1038 less(A,succ(succ(succ(B)))) | less(B,succ(A)).  [resolve(823,a,764,a)].

given #539 (T,wt=10): 1039 less(A,succ(succ(B))) | less(pred(B),succ(A)).  [resolve(823,a,758,a)].

given #540 (T,wt=10): 1042 less(A,succ(f6(succ(A)))) | -open(succ(A),in1).  [resolve(823,a,242,a)].

given #541 (A,wt=23): 562 -at(A,B,s2) | switch(A,s2) != out2 | at(succ(A),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(561,a,c)].

given #542 (T,wt=10): 1046 less(A,B) | less(pred(pred(pred(B))),succ(A)).  [resolve(832,a,769,a)].

given #543 (T,wt=10): 1047 less(A,B) | less(pred(B),succ(succ(succ(A)))).  [resolve(832,a,763,a)].

given #544 (T,wt=10): 1053 less(pred(A),succ(B)) | less(pred(pred(B)),A).  [resolve(832,b,769,a)].

given #545 (T,wt=10): 1054 less(pred(A),succ(succ(B))) | less(pred(B),A).  [resolve(832,b,758,a)].

given #546 (A,wt=23): 566 -at(A,B,s2) | switch(A,s2) != out2 | at(succ(A),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(565,a,c)].

given #547 (T,wt=10): 1062 less(pred(A),B) | less(pred(pred(pred(B))),A).  [resolve(843,a,769,a)].

given #548 (T,wt=10): 1068 less(pred(pred(pred(A))),pred(B)) | less(B,A).  [resolve(844,a,768,a)].

given #549 (T,wt=10): 1085 open(A,in1) | less(pred(pred(pred(f6(A)))),A).  [resolve(846,a,769,a)].

given #550 (T,wt=10): 1087 open(A,in1) | less(pred(f6(A)),succ(succ(A))).  [resolve(846,a,763,a)].

given #551 (A,wt=23): 576 -at(A,B,s2) | switch(A,s2) != out1 | at(succ(A),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(575,a,c)].

given #552 (T,wt=10): 1089 open(pred(A),in1) | less(pred(f6(pred(A))),A).  [resolve(846,a,748,a)].

given #553 (T,wt=10): 1097 less(pred(pred(pred(pred(A)))),succ(succ(succ(A)))).  [resolve(847,a,769,a)].

given #554 (T,wt=10): 1098 less(pred(pred(A)),succ(succ(succ(succ(succ(A)))))).  [resolve(847,a,763,a)].

given #555 (T,wt=10): 1104 less(pred(pred(pred(A))),succ(succ(succ(succ(A))))).  [resolve(849,a,769,a)].

given #556 (A,wt=23): 580 -at(A,B,s2) | switch(A,s2) != out1 | at(succ(A),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(579,a,c)].

given #557 (T,wt=10): 1105 less(pred(A),succ(succ(succ(succ(succ(succ(A))))))).  [resolve(849,a,763,a)].

given #558 (T,wt=10): 1111 less(A,succ(succ(succ(succ(succ(succ(succ(A)))))))).  [resolve(855,a,764,a)].

given #559 (T,wt=10): 1117 less(pred(pred(pred(pred(pred(A))))),succ(succ(A))).  [resolve(865,a,769,a)].

given #560 (T,wt=10): 1123 less(pred(pred(pred(pred(pred(pred(A)))))),succ(A)).  [resolve(871,a,769,a)].

given #561 (A,wt=21): 581 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path3).  [resolve(344,a,168,b)].

given #562 (T,wt=10): 1129 less(pred(pred(pred(pred(pred(pred(pred(A))))))),A).  [resolve(882,a,769,a)].

given #563 (T,wt=10): 1197 free(A,path3) | less(pred(pred(B)),f1(B,C)).  [resolve(1195,a,769,a)].

given #564 (T,wt=10): 1198 free(A,path3) | less(B,f1(succ(succ(B)),C)).  [resolve(1195,a,764,a)].

given #565 (T,wt=10): 1199 free(A,path3) | less(B,succ(succ(f1(B,C)))).  [resolve(1195,a,763,a)].

given #566 (A,wt=21): 582 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path1).  [resolve(344,a,164,b)].

given #567 (T,wt=10): 1200 free(A,path3) | less(pred(B),f1(succ(B),C)).  [resolve(1195,a,758,a)].

given #568 (T,wt=10): 1211 free(A,path1) | less(pred(pred(B)),f1(B,C)).  [resolve(1196,a,769,a)].

given #569 (T,wt=10): 1212 free(A,path1) | less(B,f1(succ(succ(B)),C)).  [resolve(1196,a,764,a)].

given #570 (T,wt=10): 1213 free(A,path1) | less(B,succ(succ(f1(B,C)))).  [resolve(1196,a,763,a)].

given #571 (A,wt=21): 583 -at(A,B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [para(106(a,1),344(a,1))].

given #572 (T,wt=10): 1214 free(A,path1) | less(pred(B),f1(succ(B),C)).  [resolve(1196,a,758,a)].

given #573 (T,wt=10): 1256 free(A,path2) | less(pred(pred(B)),f1(B,C)).  [resolve(1254,a,769,a)].

given #574 (T,wt=10): 1257 free(A,path2) | less(B,f1(succ(succ(B)),C)).  [resolve(1254,a,764,a)].

given #575 (T,wt=10): 1258 free(A,path2) | less(B,succ(succ(f1(B,C)))).  [resolve(1254,a,763,a)].

given #576 (A,wt=25): 584 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path3).  [resolve(345,a,168,b)].

given #577 (T,wt=10): 1259 free(A,path2) | less(pred(B),f1(succ(B),C)).  [resolve(1254,a,758,a)].

given #578 (T,wt=10): 1270 free(A,path0) | less(pred(pred(B)),f1(B,C)).  [resolve(1255,a,769,a)].

given #579 (T,wt=10): 1271 free(A,path0) | less(B,f1(succ(succ(B)),C)).  [resolve(1255,a,764,a)].

given #580 (T,wt=10): 1272 free(A,path0) | less(B,succ(succ(f1(B,C)))).  [resolve(1255,a,763,a)].

given #581 (A,wt=25): 585 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path1).  [resolve(345,a,164,b)].

given #582 (T,wt=10): 1273 free(A,path0) | less(pred(B),f1(succ(B),C)).  [resolve(1255,a,758,a)].

given #583 (T,wt=10): 1286 less(A,f6(B)) | less(B,A) | -open(B,in1).  [resolve(746,a,242,a)].

given #584 (T,wt=10): 1325 less(A,succ(succ(succ(f6(A))))) | -open(A,in1).  [resolve(777,b,242,a)].

given #585 (T,wt=10): 1509 less(pred(pred(pred(A))),f6(A)) | -open(A,in1).  [resolve(788,a,242,a)].

given #586 (A,wt=25): 586 -at(A,B,s2) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [para(106(a,1),345(a,1))].

given #587 (T,wt=10): 1560 less(succ(A),succ(succ(f6(A)))) | -open(A,in1).  [resolve(811,b,242,a)].

given #588 (T,wt=10): 1696 less(pred(A),succ(succ(f6(A)))) | -open(A,in1).  [resolve(975,a,242,a)].

given #589 (T,wt=10): 1812 less(pred(pred(A)),succ(f6(A))) | -open(A,in1).  [resolve(997,b,242,a)].

given #590 (T,wt=10): 1833 less(pred(pred(A)),pred(f6(A))) | -open(A,in1).  [resolve(1005,a,242,a)].

given #591 (A,wt=25): 587 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [para(106(a,1),350(d,1))].

given #592 (T,wt=10): 1866 free(A,path3) | less(pred(B),succ(f1(B,C))).  [resolve(1201,b,450,a)].

given #593 (T,wt=10): 1883 free(A,path3) | less(B,succ(f1(succ(B),C))).  [resolve(1205,b,450,a)].

given #594 (T,wt=10): 1909 free(A,path1) | less(pred(B),succ(f1(B,C))).  [resolve(1215,b,450,a)].

given #595 (T,wt=10): 1922 free(A,path1) | less(B,succ(f1(succ(B),C))).  [resolve(1219,b,450,a)].

given #596 (A,wt=21): 588 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out2) | at(succ(A),B,in1).  [para(106(a,1),352(d,1))].

given #597 (T,wt=10): 1950 free(A,path2) | less(pred(B),succ(f1(B,C))).  [resolve(1260,b,450,a)].

given #598 (T,wt=10): 1963 free(A,path2) | less(B,succ(f1(succ(B),C))).  [resolve(1264,b,450,a)].

given #599 (T,wt=10): 1991 free(A,path0) | less(pred(B),succ(f1(B,C))).  [resolve(1274,b,450,a)].

given #600 (T,wt=10): 2004 free(A,path0) | less(B,succ(f1(succ(B),C))).  [resolve(1278,b,450,a)].

given #601 (A,wt=25): 589 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [para(106(a,1),356(d,1))].

given #602 (T,wt=11): 797 less(A,B) | -less(pred(A),B) | pred(A) = B.  [resolve(460,a,100,b),flip(c)].

given #603 (T,wt=11): 813 less(succ(A),B) | less(C,A) | less(B,pred(C)).  [resolve(453,b,460,b)].

given #604 (T,wt=11): 814 less(succ(A),pred(B)) | less(C,A) | less(B,C).  [resolve(453,b,460,a)].

given #605 (T,wt=11): 816 less(succ(A),B) | less(f6(B),A) | open(B,in1).  [resolve(453,b,241,a)].

given #606 (A,wt=21): 590 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,out1) | at(succ(A),B,in1).  [para(106(a,1),358(d,1))].

given #607 (T,wt=11): 817 less(succ(A),B) | less(succ(C),A) | less(B,C).  [resolve(453,b,104,b)].

given #608 (T,wt=11): 822 less(A,B) | less(succ(C),succ(A)) | less(B,C).  [resolve(745,a,453,b)].

given #609 (T,wt=11): 828 less(A,succ(B)) | less(succ(C),A) | less(B,C).  [resolve(745,b,453,b)].

given #610 (T,wt=11): 831 less(pred(A),B) | less(succ(C),A) | less(B,C).  [resolve(747,a,453,b)].

given #611 (A,wt=25): 591 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path3).  [resolve(361,d,168,b)].

given #612 (T,wt=11): 837 less(A,B) | less(succ(C),A) | less(pred(B),C).  [resolve(747,b,453,b)].

given #613 (T,wt=11): 839 less(succ(A),B) | less(B,C) | less(C,pred(A)).  [resolve(454,b,460,b)].

given #614 (T,wt=11): 840 less(succ(f6(A)),B) | less(B,A) | open(A,in1).  [resolve(454,b,241,a)].

given #615 (T,wt=11): 841 less(succ(succ(A)),B) | less(B,C) | less(C,A).  [resolve(454,b,104,b)].

given #616 (A,wt=25): 592 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path1).  [resolve(361,d,164,b)].

given #617 (T,wt=11): 848 less(succ(A),succ(succ(succ(B)))) | less(pred(B),A).  [resolve(771,a,453,b)].

given #618 (T,wt=11): 854 less(succ(A),succ(succ(succ(succ(B))))) | less(B,A).  [resolve(776,a,453,b)].

given #619 (T,wt=11): 860 less(succ(A),B) | B = A | less(B,pred(A)).  [resolve(455,b,460,b)].

given #620 (T,wt=11): 864 less(succ(A),B) | B = A | less(succ(B),A).  [resolve(455,b,104,a)].

given #621 (A,wt=25): 593 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,s2) | at(succ(A),B,in2) | -at(A,B,in2).  [para(106(a,1),361(d,1))].

given #622 (T,wt=11): 866 less(succ(A),succ(succ(B))) | less(pred(pred(B)),A).  [resolve(781,a,453,b)].

given #623 (T,wt=11): 872 less(succ(A),succ(B)) | less(pred(pred(pred(B))),A).  [resolve(787,a,453,b)].

given #624 (T,wt=11): 877 less(succ(A),B) | A = B | less(B,pred(A)).  [resolve(456,b,460,b)].

given #625 (T,wt=11): 883 less(succ(A),B) | less(pred(pred(pred(pred(B)))),A).  [resolve(842,a,453,b)].

given #626 (A,wt=21): 594 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path3).  [resolve(363,d,168,b)].

given #627 (T,wt=11): 897 free(succ(A),path0) | -at(A,B,in1) | C = B.  [resolve(481,b,140,c)].

given #628 (T,wt=6): 4168 free(A,path0) | B = C.  [resolve(897,b,1148,a),rewrite([106(2)]),merge(c)].

given #629 (T,wt=6): 4169 A = B | free(C,path2).  [resolve(4168,a,487,b)].

given #630 (T,wt=11): 908 free(succ(A),path1) | -at(A,B,in2) | C = B.  [resolve(484,b,139,c)].

given #631 (A,wt=21): 595 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path1).  [resolve(363,d,164,b)].

given #632 (T,wt=6): 4171 free(A,path1) | B = C.  [resolve(908,b,1136,a),rewrite([106(2)]),merge(c)].

given #633 (T,wt=6): 4172 A = B | free(C,path3).  [resolve(4171,a,492,b)].

given #634 (T,wt=11): 941 open(A,in1) | less(B,succ(A)) | less(f6(A),B).  [resolve(752,a,449,b)].

given #635 (T,wt=11): 942 open(A,in1) | -less(B,f6(A)) | less(B,succ(A)).  [resolve(752,a,101,b)].

given #636 (A,wt=21): 596 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | -at(C,B,s2) | at(succ(A),B,in1).  [para(106(a,1),363(d,1))].

given #637 (T,wt=11): 943 open(A,in1) | -less(succ(A),B) | less(f6(A),B).  [resolve(752,a,101,a)].

given #638 (T,wt=11): 949 less(A,B) | -less(C,succ(B)) | less(C,succ(A)).  [resolve(753,a,101,b)].

given #639 (T,wt=11): 950 less(A,B) | -less(succ(A),C) | less(succ(B),C).  [resolve(753,a,101,a)].

given #640 (T,wt=11): 956 less(succ(A),succ(B)) | -less(C,B) | less(C,A).  [resolve(753,b,101,b)].

given #641 (A,wt=22): 597 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path2).  [resolve(365,a,166,b)].

given #642 (T,wt=11): 957 less(succ(A),succ(B)) | -less(A,C) | less(B,C).  [resolve(753,b,101,a)].

given #643 (T,wt=11): 958 less(succ(A),succ(B)) | -less(A,B) | B = A.  [resolve(753,b,100,b)].

given #644 (T,wt=11): 959 less(succ(A),succ(B)) | -less(A,B) | A = B.  [resolve(753,b,100,a)].

given #645 (T,wt=11): 964 less(pred(A),B) | less(C,succ(A)) | less(B,C).  [resolve(756,a,449,b)].

given #646 (A,wt=22): 598 -at(succ(f1(A,B)),B,in2) | appear(f1(A,B),B,in2) | -open(f1(A,B),in2) | free(succ(C),path0).  [resolve(365,a,162,b)].

given #647 (T,wt=11): 966 less(pred(A),B) | -less(C,B) | less(C,succ(A)).  [resolve(756,a,101,b)].

given #648 (T,wt=11): 967 less(pred(A),B) | -less(succ(A),C) | less(B,C).  [resolve(756,a,101,a)].

given #649 (T,wt=11): 968 less(A,succ(B)) | -less(C,pred(B)) | less(C,A).  [resolve(756,b,101,b)].

given #650 (T,wt=11): 979 less(A,B) | less(C,succ(succ(A))) | less(B,C).  [resolve(762,a,449,b)].

given #651 (A,wt=22): 599 -at(A,B,s1) | -at(succ(f1(C,B)),B,in2) | appear(f1(C,B),B,in2) | -open(f1(C,B),in2).  [para(106(a,1),365(a,1))].

given #652 (T,wt=11): 980 less(A,f6(succ(succ(A)))) | -open(succ(succ(A)),in1).  [resolve(762,a,242,a)].

given #653 (T,wt=11): 981 less(A,B) | -less(C,B) | less(C,succ(succ(A))).  [resolve(762,a,101,b)].

given #654 (T,wt=11): 982 less(A,B) | -less(succ(succ(A)),C) | less(B,C).  [resolve(762,a,101,a)].

given #655 (T,wt=11): 984 less(A,succ(succ(B))) | -less(C,B) | less(C,A).  [resolve(762,b,101,b)].

given #656 (A,wt=22): 600 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path2).  [resolve(366,a,166,b)].

given #657 (T,wt=11): 998 less(pred(pred(A)),B) | less(C,A) | less(B,C).  [resolve(767,a,449,b)].

given #658 (T,wt=11): 1000 less(pred(pred(A)),B) | -less(C,B) | less(C,A).  [resolve(767,a,101,b)].

given #659 (T,wt=11): 1001 less(pred(pred(A)),B) | -less(A,C) | less(B,C).  [resolve(767,a,101,a)].

given #660 (T,wt=11): 1002 less(A,B) | -less(C,pred(pred(B))) | less(C,A).  [resolve(767,b,101,b)].

given #661 (A,wt=22): 601 -at(succ(f1(A,B)),B,in1) | appear(f1(A,B),B,in1) | -open(f1(A,B),in1) | free(succ(C),path0).  [resolve(366,a,162,b)].

given #662 (T,wt=11): 1006 less(f6(pred(pred(A))),A) | open(pred(pred(A)),in1).  [resolve(768,a,241,a)].

given #663 (T,wt=11): 1013 less(A,pred(B)) | less(C,succ(A)) | less(B,C).  [resolve(792,a,449,b)].

given #664 (T,wt=11): 1015 less(A,pred(B)) | -less(C,B) | less(C,succ(A)).  [resolve(792,a,101,b)].

given #665 (T,wt=11): 1016 less(A,pred(B)) | -less(succ(A),C) | less(B,C).  [resolve(792,a,101,a)].

given #666 (A,wt=22): 602 -at(A,B,s1) | -at(succ(f1(C,B)),B,in1) | appear(f1(C,B),B,in1) | -open(f1(C,B),in1).  [para(106(a,1),366(a,1))].

given #667 (T,wt=11): 1021 less(A,succ(B)) | less(C,pred(A)) | less(B,C).  [resolve(792,b,449,b)].

given #668 (T,wt=11): 1023 less(A,succ(B)) | -less(C,B) | less(C,pred(A)).  [resolve(792,b,101,b)].

given #669 (T,wt=11): 1024 less(A,succ(B)) | -less(pred(A),C) | less(B,C).  [resolve(792,b,101,a)].

given #670 (T,wt=11): 1029 less(pred(A),B) | -less(C,succ(B)) | less(C,A).  [resolve(815,a,101,b)].

given #671 (A,wt=23): 606 -at(A,B,s1) | switch(A,s1) != out2 | at(succ(A),B,out2) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(605,a,c)].

given #672 (T,wt=11): 1030 less(pred(A),B) | -less(A,C) | less(succ(B),C).  [resolve(815,a,101,a)].

given #673 (T,wt=11): 1034 less(succ(A),B) | -less(C,pred(B)) | less(C,A).  [resolve(815,b,101,b)].

given #674 (T,wt=11): 1035 less(succ(A),B) | -less(A,C) | less(pred(B),C).  [resolve(815,b,101,a)].

given #675 (T,wt=11): 1041 less(A,succ(B)) | less(C,succ(A)) | less(B,C).  [resolve(823,a,449,b)].

given #676 (A,wt=23): 610 -at(A,B,s1) | switch(A,s1) != out2 | at(succ(A),B,out2) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(609,a,c)].

given #677 (T,wt=11): 1043 less(A,succ(B)) | -less(C,B) | less(C,succ(A)).  [resolve(823,a,101,b)].

given #678 (T,wt=11): 1044 less(A,succ(B)) | -less(succ(A),C) | less(B,C).  [resolve(823,a,101,a)].

given #679 (T,wt=11): 1049 less(A,B) | less(C,succ(A)) | less(pred(B),C).  [resolve(832,a,449,b)].

given #680 (T,wt=11): 1050 less(A,B) | -less(C,pred(B)) | less(C,succ(A)).  [resolve(832,a,101,b)].

given #681 (A,wt=23): 614 -at(A,B,s1) | switch(A,s1) != out1 | at(succ(A),B,out1) | at(succ(A),B,in2) | -at(A,B,in2).  [factor(613,a,c)].

given #682 (T,wt=11): 1051 less(A,B) | -less(succ(A),C) | less(pred(B),C).  [resolve(832,a,101,a)].

given #683 (T,wt=11): 1056 less(pred(A),succ(B)) | less(C,A) | less(B,C).  [resolve(832,b,449,b)].

given #684 (T,wt=11): 1058 less(pred(A),succ(B)) | -less(C,B) | less(C,A).  [resolve(832,b,101,b)].

given #685 (T,wt=11): 1059 less(pred(A),succ(B)) | -less(A,C) | less(B,C).  [resolve(832,b,101,a)].

given #686 (A,wt=23): 618 -at(A,B,s1) | switch(A,s1) != out1 | at(succ(A),B,out1) | at(succ(A),B,in1) | -at(A,B,in1).  [factor(617,a,c)].

given #687 (T,wt=11): 1060 less(pred(A),succ(B)) | -less(A,B) | B = A.  [resolve(832,b,100,b)].

given #688 (T,wt=11): 1061 less(pred(A),succ(B)) | -less(A,B) | A = B.  [resolve(832,b,100,a)].

given #689 (T,wt=11): 1064 less(pred(A),B) | less(C,A) | less(pred(B),C).  [resolve(843,a,449,b)].

given #690 (T,wt=11): 1065 less(pred(A),B) | -less(C,pred(B)) | less(C,A).  [resolve(843,a,101,b)].

given #691 (A,wt=21): 619 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path2).  [resolve(385,a,166,b)].

given #692 (T,wt=11): 1066 less(pred(A),B) | -less(A,C) | less(pred(B),C).  [resolve(843,a,101,a)].

given #693 (T,wt=11): 1073 less(pred(A),pred(B)) | less(C,A) | less(B,C).  [resolve(844,a,449,b)].

given #694 (T,wt=11): 1075 less(pred(A),pred(B)) | -less(C,B) | less(C,A).  [resolve(844,a,101,b)].

given #695 (T,wt=11): 1076 less(pred(A),pred(B)) | -less(A,C) | less(B,C).  [resolve(844,a,101,a)].

given #696 (A,wt=21): 620 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in2) | free(succ(C),path0).  [resolve(385,a,162,b)].

given #697 (T,wt=11): 1077 less(pred(A),pred(B)) | -less(A,B) | B = A.  [resolve(844,a,100,b)].

given #698 (T,wt=11): 1078 less(pred(A),pred(B)) | -less(A,B) | A = B.  [resolve(844,a,100,a)].

given #699 (T,wt=11): 1080 less(A,B) | less(C,pred(A)) | less(pred(B),C).  [resolve(844,b,449,b)].

given #700 (T,wt=11): 1081 less(A,B) | -less(C,pred(B)) | less(C,pred(A)).  [resolve(844,b,101,b)].

given #701 (A,wt=21): 621 -at(A,B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in2).  [para(106(a,1),385(a,1))].

given #702 (T,wt=11): 1082 less(A,B) | -less(pred(A),C) | less(pred(B),C).  [resolve(844,b,101,a)].

given #703 (T,wt=11): 1088 open(pred(A),in1) | less(pred(f6(pred(A))),succ(A)).  [resolve(846,a,757,a)].

given #704 (T,wt=11): 1093 open(A,in1) | less(B,A) | less(pred(f6(A)),B).  [resolve(846,a,449,b)].

given #705 (T,wt=11): 1094 open(A,in1) | -less(B,pred(f6(A))) | less(B,A).  [resolve(846,a,101,b)].

given #706 (A,wt=25): 622 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path2).  [resolve(386,a,166,b)].

given #707 (T,wt=11): 1095 open(A,in1) | -less(A,B) | less(pred(f6(A)),B).  [resolve(846,a,101,a)].

given #708 (T,wt=11): 1100 less(A,succ(succ(succ(B)))) | less(pred(pred(B)),A).  [resolve(847,a,449,b)].

given #709 (T,wt=11): 1101 -less(A,pred(pred(B))) | less(A,succ(succ(succ(B)))).  [resolve(847,a,101,b)].

given #710 (T,wt=11): 1102 -less(succ(succ(succ(A))),B) | less(pred(pred(A)),B).  [resolve(847,a,101,a)].

given #711 (A,wt=25): 623 -open(A,in2) | -at(A,B,in2) | at(succ(A),B,s2) | at(succ(A),B,in1) | -at(A,B,in1) | free(succ(C),path0).  [resolve(386,a,162,b)].

given #712 (T,wt=11): 1107 less(A,succ(succ(succ(succ(B))))) | less(pred(B),A).  [resolve(849,a,449,b)].

given #713 (T,wt=11): 1108 -less(A,pred(B)) | less(A,succ(succ(succ(succ(B))))).  [resolve(849,a,101,b)].

given #714 (T,wt=11): 1109 -less(succ(succ(succ(succ(A)))),B) | less(pred(A),B).  [resolve(849,a,101,a)].

given #715 (T,wt=11): 1113 less(A,succ(succ(succ(succ(succ(B)))))) | less(B,A).  [resolve(855,a,449,b)].

given #716 (A,wt=25): 624 -at(A,B,s1) | -open(C,in2) | -at(C,B,in2) | at(succ(C),B,s2) | at(succ(C),B,in1) | -at(C,B,in1).  [para(106(a,1),386(a,1))].

given #717 (T,wt=11): 1114 -less(A,B) | less(A,succ(succ(succ(succ(succ(B)))))).  [resolve(855,a,101,b)].

given #718 (T,wt=11): 1115 -less(succ(succ(succ(succ(succ(A))))),B) | less(A,B).  [resolve(855,a,101,a)].

given #719 (T,wt=11): 1119 less(A,succ(succ(B))) | less(pred(pred(pred(B))),A).  [resolve(865,a,449,b)].

given #720 (T,wt=11): 1120 -less(A,pred(pred(pred(B)))) | less(A,succ(succ(B))).  [resolve(865,a,101,b)].

given #721 (A,wt=25): 625 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path2).  [resolve(388,a,166,b)].

given #722 (T,wt=11): 1121 -less(succ(succ(A)),B) | less(pred(pred(pred(A))),B).  [resolve(865,a,101,a)].

given #723 (T,wt=11): 1125 less(A,succ(B)) | less(pred(pred(pred(pred(B)))),A).  [resolve(871,a,449,b)].

given #724 (T,wt=11): 1126 -less(A,pred(pred(pred(pred(B))))) | less(A,succ(B)).  [resolve(871,a,101,b)].

given #725 (T,wt=11): 1127 -less(succ(A),B) | less(pred(pred(pred(pred(A)))),B).  [resolve(871,a,101,a)].

given #726 (A,wt=25): 626 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in2) | -at(A,B,in2) | free(succ(C),path0).  [resolve(388,a,162,b)].

given #727 (T,wt=11): 1131 less(A,B) | less(pred(pred(pred(pred(pred(B))))),A).  [resolve(882,a,449,b)].

given #728 (T,wt=11): 1132 -less(A,pred(pred(pred(pred(pred(B)))))) | less(A,B).  [resolve(882,a,101,b)].

given #729 (T,wt=11): 1133 -less(A,B) | less(pred(pred(pred(pred(pred(A))))),B).  [resolve(882,a,101,a)].

given #730 (T,wt=11): 1207 free(A,path3) | less(B,f1(C,D)) | less(C,B).  [resolve(1195,a,449,b)].

given #731 (A,wt=25): 627 -at(A,B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in2) | -at(C,B,in2).  [para(106(a,1),388(a,1))].

given #732 (T,wt=11): 1208 free(A,path3) | -less(B,C) | less(B,f1(C,D)).  [resolve(1195,a,101,b)].

given #733 (T,wt=10): 7055 free(A,path3) | less(B,f1(f1(B,C),D)).  [factor(6977,a,c)].

given #734 (T,wt=11): 1209 free(A,path3) | -less(f1(B,C),D) | less(B,D).  [resolve(1195,a,101,a)].

given #735 (T,wt=11): 1221 free(A,path1) | less(B,f1(C,D)) | less(C,B).  [resolve(1196,a,449,b)].

given #736 (A,wt=21): 628 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path2).  [resolve(390,a,166,b)].

given #737 (T,wt=11): 1222 free(A,path1) | -less(B,C) | less(B,f1(C,D)).  [resolve(1196,a,101,b)].

given #738 (T,wt=10): 7340 free(A,path1) | less(B,f1(f1(B,C),D)).  [factor(7262,a,c)].

given #739 (T,wt=11): 1223 free(A,path1) | -less(f1(B,C),D) | less(B,D).  [resolve(1196,a,101,a)].

given #740 (T,wt=11): 1266 free(A,path2) | less(B,f1(C,D)) | less(C,B).  [resolve(1254,a,449,b)].

given #741 (A,wt=21): 629 -open(A,in1) | -at(A,B,in1) | at(succ(A),B,s1) | at(succ(A),B,in1) | free(succ(C),path0).  [resolve(390,a,162,b)].

given #742 (T,wt=11): 1267 free(A,path2) | -less(B,C) | less(B,f1(C,D)).  [resolve(1254,a,101,b)].

given #743 (T,wt=10): 7614 free(A,path2) | less(B,f1(f1(B,C),D)).  [factor(7536,a,c)].

given #744 (T,wt=11): 1268 free(A,path2) | -less(f1(B,C),D) | less(B,D).  [resolve(1254,a,101,a)].

given #745 (T,wt=11): 1280 free(A,path0) | less(B,f1(C,D)) | less(C,B).  [resolve(1255,a,449,b)].

given #746 (A,wt=21): 630 -at(A,B,s1) | -open(C,in1) | -at(C,B,in1) | at(succ(C),B,s1) | at(succ(C),B,in1).  [para(106(a,1),390(a,1))].

given #747 (T,wt=11): 1281 free(A,path0) | -less(B,C) | less(B,f1(C,D)).  [resolve(1255,a,101,b)].

given #748 (T,wt=10): 7879 free(A,path0) | less(B,f1(f1(B,C),D)).  [factor(7801,a,c)].

given #749 (T,wt=11): 1282 free(A,path0) | -less(f1(B,C),D) | less(B,D).  [resolve(1255,a,101,a)].

given #750 (T,wt=11): 1288 less(pred(A),B) | less(pred(pred(B)),succ(succ(A))).  [resolve(772,a,769,a)].

given #751 (A,wt=24): 631 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path2).  [resolve(393,c,166,b)].

given #752 (T,wt=11): 1289 less(pred(A),succ(succ(B))) | less(B,succ(succ(A))).  [resolve(772,a,764,a)].

given #753 (T,wt=11): 1290 less(pred(A),succ(B)) | less(pred(B),succ(succ(A))).  [resolve(772,a,758,a)].

given #754 (T,wt=11): 1298 less(pred(pred(pred(pred(pred(pred(A)))))),succ(succ(A))).  [resolve(773,a,882,a)].

given #755 (T,wt=11): 1300 less(A,succ(succ(B))) | less(pred(pred(B)),pred(A)).  [resolve(773,a,844,a)].

given #756 (A,wt=24): 632 -at(succ(A),B,out2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path0).  [resolve(393,c,162,b)].

given #757 (T,wt=11): 1301 less(pred(A),succ(succ(B))) | less(pred(pred(B)),A).  [resolve(773,a,843,b)].

given #758 (T,wt=11): 1302 less(A,succ(succ(B))) | less(pred(pred(B)),succ(A)).  [resolve(773,a,832,b)].

given #759 (T,wt=11): 1304 less(f6(pred(A)),succ(succ(A))) | open(pred(A),in1).  [resolve(773,a,241,a)].

given #760 (T,wt=11): 1305 less(pred(A),f1(succ(succ(A)),B)) | free(C,path0).  [resolve(774,a,1255,a)].

given #761 (A,wt=24): 634 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path3).  [resolve(394,c,168,b)].

given #762 (T,wt=11): 1306 less(pred(A),f1(succ(succ(A)),B)) | free(C,path2).  [resolve(774,a,1254,a)].

given #763 (T,wt=11): 1307 less(pred(A),f1(succ(succ(A)),B)) | free(C,path1).  [resolve(774,a,1196,a)].

given #764 (T,wt=11): 1308 less(pred(A),f1(succ(succ(A)),B)) | free(C,path3).  [resolve(774,a,1195,a)].

given #765 (T,wt=11): 1309 less(pred(A),succ(succ(succ(succ(succ(succ(succ(A)))))))).  [resolve(774,a,855,a)].

given #766 (A,wt=24): 635 -at(succ(A),B,out2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path1).  [resolve(394,c,164,b)].

given #767 (T,wt=11): 1310 less(pred(A),B) | less(pred(B),succ(succ(succ(A)))).  [resolve(774,a,832,b)].

given #768 (T,wt=11): 1311 less(pred(A),succ(B)) | less(B,succ(succ(succ(A)))).  [resolve(774,a,823,b)].

given #769 (T,wt=11): 1312 less(pred(A),pred(B)) | less(B,succ(succ(succ(A)))).  [resolve(774,a,792,b)].

given #770 (T,wt=11): 1315 less(A,B) | less(pred(pred(B)),succ(succ(succ(A)))).  [resolve(777,a,769,a)].

given #771 (A,wt=19): 637 switch(pred(A),s1) != out1 | -at(pred(A),B,s1) | at(A,B,out1) | -at(A,B,out2).  [para(106(a,1),395(d,1)),rewrite([106(10)])].

given #772 (T,wt=11): 1316 less(A,succ(succ(B))) | less(B,succ(succ(succ(A)))).  [resolve(777,a,764,a)].

given #773 (T,wt=11): 1317 less(A,succ(B)) | less(pred(B),succ(succ(succ(A)))).  [resolve(777,a,758,a)].

given #774 (T,wt=11): 1327 less(A,succ(succ(succ(f1(A,B))))) | free(C,path0).  [resolve(778,a,1255,a)].

given #775 (T,wt=11): 1328 less(A,succ(succ(succ(f1(A,B))))) | free(C,path2).  [resolve(778,a,1254,a)].

given #776 (A,wt=24): 638 switch(f1(A,B),s1) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path2).  [resolve(396,b,166,b)].

given #777 (T,wt=11): 1329 less(A,succ(succ(succ(f1(A,B))))) | free(C,path1).  [resolve(778,a,1196,a)].

given #778 (T,wt=11): 1330 less(A,succ(succ(succ(f1(A,B))))) | free(C,path3).  [resolve(778,a,1195,a)].

given #779 (T,wt=11): 1331 less(pred(pred(pred(pred(pred(A))))),succ(succ(succ(A)))).  [resolve(778,a,882,a)].

given #780 (T,wt=11): 1332 less(pred(pred(pred(pred(A)))),succ(succ(succ(succ(A))))).  [resolve(778,a,871,a)].

given #781 (A,wt=24): 639 switch(f1(A,B),s1) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path0).  [resolve(396,b,162,b)].

given #782 (T,wt=11): 1333 less(pred(pred(pred(A))),succ(succ(succ(succ(succ(A)))))).  [resolve(778,a,865,a)].

given #783 (T,wt=11): 1334 less(A,succ(succ(succ(succ(succ(succ(succ(succ(A))))))))).  [resolve(778,a,855,a)].

given #784 (T,wt=11): 1335 less(pred(pred(A)),succ(succ(succ(succ(succ(succ(A))))))).  [resolve(778,a,847,a)].

given #785 (T,wt=11): 1336 less(pred(f6(A)),succ(succ(succ(A)))) | open(A,in1).  [resolve(778,a,846,a)].

given #786 (A,wt=19): 641 switch(pred(A),s2) != out1 | -at(pred(A),B,s2) | at(A,B,out1) | -at(A,B,out2).  [para(106(a,1),397(d,1)),rewrite([106(10)])].

given #787 (T,wt=11): 1337 less(pred(A),succ(succ(succ(succ(B))))) | less(B,A).  [resolve(778,a,832,a)].

given #788 (T,wt=11): 1338 less(A,succ(succ(succ(succ(B))))) | less(B,succ(A)).  [resolve(778,a,823,b)].

given #789 (T,wt=11): 1339 less(A,succ(succ(succ(succ(B))))) | less(B,pred(A)).  [resolve(778,a,792,a)].

given #790 (T,wt=11): 1342 less(f6(A),succ(succ(succ(succ(A))))) | open(A,in1).  [resolve(778,a,752,a)].

given #791 (A,wt=24): 642 switch(f1(A,B),s2) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path3).  [resolve(398,b,168,b)].

given #792 (T,wt=11): 1343 less(A,f1(succ(succ(succ(A))),B)) | free(C,path0).  [resolve(779,a,1255,a)].

given #793 (T,wt=11): 1344 less(A,f1(succ(succ(succ(A))),B)) | free(C,path2).  [resolve(779,a,1254,a)].

given #794 (T,wt=11): 1345 less(A,f1(succ(succ(succ(A))),B)) | free(C,path1).  [resolve(779,a,1196,a)].

given #795 (T,wt=11): 1346 less(A,f1(succ(succ(succ(A))),B)) | free(C,path3).  [resolve(779,a,1195,a)].

given #796 (A,wt=24): 643 switch(f1(A,B),s2) != out1 | at(succ(f1(A,B)),B,out1) | -at(succ(C),B,out2) | free(f1(A,B),path1).  [resolve(398,b,164,b)].

given #797 (T,wt=11): 1350 less(pred(pred(A)),B) | less(pred(pred(B)),succ(A)).  [resolve(782,a,769,a)].

given #798 (T,wt=11): 1351 less(pred(pred(A)),succ(succ(B))) | less(B,succ(A)).  [resolve(782,a,764,a)].

given #799 (T,wt=11): 1352 less(pred(pred(A)),succ(B)) | less(pred(B),succ(A)).  [resolve(782,a,758,a)].

given #800 (T,wt=11): 1356 less(pred(pred(A)),f6(succ(A))) | -open(succ(A),in1).  [resolve(782,a,242,a)].

given #801 (A,wt=19): 645 -at(A,B,out1) | switch(pred(A),s1) != out2 | -at(pred(A),B,s1) | at(A,B,out2).  [para(106(a,1),399(a,1)),rewrite([106(12)])].

given #802 (T,wt=11): 1428 open(A,in1) | less(pred(pred(pred(pred(f6(A))))),A).  [resolve(500,b,842,a)].

given #803 (T,wt=11): 1439 open(A,in1) | less(pred(B),A) | less(f6(A),B).  [resolve(500,b,747,b)].

given #804 (T,wt=11): 1441 open(A,in1) | less(B,A) | less(f6(A),succ(B)).  [resolve(500,b,745,b)].

given #805 (T,wt=11): 1442 open(A,in1) | less(B,A) | less(f6(A),pred(B)).  [resolve(500,b,460,b)].

given #806 (A,wt=24): 646 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path2).  [resolve(400,c,166,b)].

given #807 (T,wt=11): 1484 open(A,in1) | less(f6(A),B) | less(B,pred(A)).  [resolve(501,b,460,b)].

given #808 (T,wt=11): 1485 less(pred(pred(pred(pred(pred(pred(pred(A))))))),succ(A)).  [resolve(783,a,882,a)].

given #809 (T,wt=11): 1487 less(A,succ(B)) | less(pred(pred(pred(B))),pred(A)).  [resolve(783,a,844,a)].

given #810 (T,wt=11): 1488 less(pred(A),succ(B)) | less(pred(pred(pred(B))),A).  [resolve(783,a,843,b)].

given #811 (A,wt=24): 647 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path0).  [resolve(400,c,162,b)].

given #812 (T,wt=11): 1489 less(A,succ(B)) | less(pred(pred(pred(B))),succ(A)).  [resolve(783,a,832,b)].

given #813 (T,wt=11): 1491 less(pred(pred(A)),f1(succ(A),B)) | free(C,path0).  [resolve(784,a,1255,a)].

given #814 (T,wt=11): 1492 less(pred(pred(A)),f1(succ(A),B)) | free(C,path2).  [resolve(784,a,1254,a)].

given #815 (T,wt=11): 1493 less(pred(pred(A)),f1(succ(A),B)) | free(C,path1).  [resolve(784,a,1196,a)].

given #816 (A,wt=19): 649 -at(A,B,out1) | switch(pred(A),s2) != out2 | -at(pred(A),B,s2) | at(A,B,out2).  [para(106(a,1),401(a,1)),rewrite([106(12)])].

given #817 (T,wt=11): 1494 less(pred(pred(A)),f1(succ(A),B)) | free(C,path3).  [resolve(784,a,1195,a)].

given #818 (T,wt=11): 1501 less(pred(pred(pred(A))),B) | less(pred(pred(B)),A).  [resolve(788,a,769,a)].

given #819 (T,wt=11): 1502 less(pred(pred(pred(A))),succ(succ(B))) | less(B,A).  [resolve(788,a,764,a)].

given #820 (T,wt=11): 1503 less(pred(pred(pred(A))),succ(B)) | less(pred(B),A).  [resolve(788,a,758,a)].

given #821 (A,wt=24): 650 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path3).  [resolve(402,c,168,b)].

given #822 (T,wt=11): 1514 less(pred(pred(pred(pred(pred(pred(pred(pred(A)))))))),A).  [resolve(789,a,882,a)].

given #823 (T,wt=11): 1516 less(A,B) | less(pred(pred(pred(pred(B)))),pred(A)).  [resolve(789,a,844,a)].

given #824 (T,wt=11): 1517 less(pred(A),B) | less(pred(pred(pred(pred(B)))),A).  [resolve(789,a,843,b)].

given #825 (T,wt=11): 1518 less(A,B) | less(pred(pred(pred(pred(B)))),succ(A)).  [resolve(789,a,832,b)].

given #826 (A,wt=24): 651 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path1).  [resolve(402,c,164,b)].

given #827 (T,wt=11): 1526 less(pred(pred(pred(A))),f1(A,B)) | free(C,path0).  [resolve(790,a,1255,a)].

given #828 (T,wt=11): 1527 less(pred(pred(pred(A))),f1(A,B)) | free(C,path2).  [resolve(790,a,1254,a)].

given #829 (T,wt=11): 1528 less(pred(pred(pred(A))),f1(A,B)) | free(C,path1).  [resolve(790,a,1196,a)].

given #830 (T,wt=11): 1529 less(pred(pred(pred(A))),f1(A,B)) | free(C,path3).  [resolve(790,a,1195,a)].

given #831 (A,wt=24): 653 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path2).  [resolve(403,c,166,b)].

given #832 (T,wt=11): 1530 less(pred(pred(pred(f6(A)))),succ(A)) | open(A,in1).  [resolve(790,a,752,a)].

given #833 (T,wt=11): 1587 open(pred(A),in1) | less(pred(pred(f6(pred(A)))),A).  [resolve(845,a,769,a)].

given #834 (T,wt=11): 1607 open(A,in1) | less(pred(pred(f6(A))),succ(succ(A))).  [resolve(940,b,769,a)].

given #835 (T,wt=11): 1645 less(pred(A),succ(f6(succ(A)))) | -open(succ(A),in1).  [resolve(963,b,242,a)].

given #836 (A,wt=24): 654 -at(succ(A),B,out1) | switch(f1(C,B),s1) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path0).  [resolve(403,c,162,b)].

given #837 (T,wt=11): 1666 less(pred(A),pred(f6(succ(A)))) | -open(succ(A),in1).  [resolve(971,a,242,a)].

given #838 (T,wt=11): 1718 less(A,succ(succ(f6(succ(A))))) | -open(succ(A),in1).  [resolve(978,a,242,a)].

given #839 (T,wt=11): 1773 less(A,succ(succ(f6(pred(A))))) | -open(pred(A),in1).  [resolve(991,b,242,a)].

given #840 (T,wt=11): 1863 free(A,path3) | less(pred(B),succ(succ(f1(B,C)))).  [resolve(1201,b,763,a)].

given #841 (A,wt=24): 656 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path3).  [resolve(404,c,168,b)].

given #842 (T,wt=11): 1880 free(A,path3) | less(B,succ(succ(f1(succ(B),C)))).  [resolve(1205,b,763,a)].

given #843 (T,wt=11): 1893 free(A,path3) | less(pred(pred(B)),succ(f1(B,C))).  [resolve(1206,b,769,a)].

given #844 (T,wt=11): 1894 free(A,path3) | less(B,succ(f1(succ(succ(B)),C))).  [resolve(1206,b,764,a)].

given #845 (T,wt=11): 1895 free(A,path3) | less(pred(B),succ(f1(succ(B),C))).  [resolve(1206,b,758,a)].

given #846 (A,wt=24): 657 -at(succ(A),B,out1) | switch(f1(C,B),s2) != out1 | at(succ(f1(C,B)),B,out1) | free(f1(C,B),path1).  [resolve(404,c,164,b)].

given #847 (T,wt=11): 1906 free(A,path1) | less(pred(B),succ(succ(f1(B,C)))).  [resolve(1215,b,763,a)].

given #848 (T,wt=11): 1919 free(A,path1) | less(B,succ(succ(f1(succ(B),C)))).  [resolve(1219,b,763,a)].

given #849 (T,wt=11): 1934 free(A,path1) | less(pred(pred(B)),succ(f1(B,C))).  [resolve(1220,b,769,a)].

given #850 (T,wt=11): 1935 free(A,path1) | less(B,succ(f1(succ(succ(B)),C))).  [resolve(1220,b,764,a)].

given #851 (A,wt=17): 659 -open(pred(A),in2) | -at(pred(A),B,in2) | at(A,B,s2) | -at(A,B,out2).  [para(106(a,1),405(d,1)),rewrite([106(8)])].

given #852 (T,wt=11): 1936 free(A,path1) | less(pred(B),succ(f1(succ(B),C))).  [resolve(1220,b,758,a)].

given #853 (T,wt=11): 1947 free(A,path2) | less(pred(B),succ(succ(f1(B,C)))).  [resolve(1260,b,763,a)].

given #854 (T,wt=11): 1960 free(A,path2) | less(B,succ(succ(f1(succ(B),C)))).  [resolve(1264,b,763,a)].

given #855 (T,wt=11): 1973 free(A,path2) | less(pred(pred(B)),succ(f1(B,C))).  [resolve(1265,b,769,a)].

given #856 (A,wt=22): 660 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(C,B,out2).  [para(106(a,1),406(d,1))].

given #857 (T,wt=11): 1974 free(A,path2) | less(B,succ(f1(succ(succ(B)),C))).  [resolve(1265,b,764,a)].

given #858 (T,wt=11): 1975 free(A,path2) | less(pred(B),succ(f1(succ(B),C))).  [resolve(1265,b,758,a)].

given #859 (T,wt=11): 1988 free(A,path0) | less(pred(B),succ(succ(f1(B,C)))).  [resolve(1274,b,763,a)].

given #860 (T,wt=11): 2001 free(A,path0) | less(B,succ(succ(f1(succ(B),C)))).  [resolve(1278,b,763,a)].

given #861 (A,wt=17): 661 -open(pred(A),in2) | -at(pred(A),B,in2) | at(A,B,s2) | -at(A,B,out1).  [para(106(a,1),407(d,1)),rewrite([106(8)])].

given #862 (T,wt=11): 2014 free(A,path0) | less(pred(pred(B)),succ(f1(B,C))).  [resolve(1279,b,769,a)].

given #863 (T,wt=11): 2015 free(A,path0) | less(B,succ(f1(succ(succ(B)),C))).  [resolve(1279,b,764,a)].

given #864 (T,wt=11): 2016 free(A,path0) | less(pred(B),succ(f1(succ(B),C))).  [resolve(1279,b,758,a)].

given #865 (T,wt=11): 2038 less(succ(A),f6(B)) | less(B,A) | -open(B,in1).  [resolve(744,a,242,a)].

given #866 (A,wt=22): 662 -open(f1(A,B),in2) | -at(f1(A,B),B,in2) | at(succ(f1(A,B)),B,s2) | -at(C,B,out1).  [para(106(a,1),408(d,1))].

given #867 (T,wt=11): 2043 less(A,f6(B)) | less(succ(B),A) | -open(B,in1).  [resolve(744,c,242,a)].

given #868 (T,wt=11): 2057 less(A,pred(f6(B))) | less(B,A) | -open(B,in1).  [resolve(793,a,242,a)].

given #869 (T,wt=11): 2069 less(A,f6(B)) | less(B,pred(A)) | -open(B,in1).  [resolve(793,c,242,a)].

given #870 (T,wt=11): 2117 less(A,B) | less(C,pred(A)) | less(B,pred(C)).  [resolve(795,b,460,b)].

given #871 (A,wt=18): 663 switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2) | free(succ(A),path3).  [resolve(409,a,168,b)].

given #872 (T,wt=11): 2132 less(A,B) | less(B,C) | less(C,pred(pred(A))).  [resolve(796,b,460,b)].

given #873 (T,wt=11): 2183 less(A,pred(B)) | B = A | less(B,pred(A)).  [resolve(800,b,460,b)].

given #874 (T,wt=11): 2250 less(succ(A),succ(succ(succ(f6(A))))) | -open(A,in1).  [resolve(808,b,242,a)].

given #875 (T,wt=11): 2289 less(A,succ(f6(B))) | less(B,A) | -open(B,in1).  [resolve(824,a,242,a)].

given #876 (A,wt=18): 664 switch(A,s1) != out2 | -at(A,B,s1) | at(succ(A),B,out2) | free(succ(A),path1).  [resolve(409,a,164,b)].

given #877 (T,wt=11): 2302 less(A,f6(B)) | less(B,succ(A)) | -open(B,in1).  [resolve(824,c,242,a)].

given #878 (T,wt=11): 2413 less(pred(A),B) | less(B,f6(A)) | -open(A,in1).  [resolve(833,b,242,a)].

given #879 (T,wt=11): 2416 less(pred(A),f6(B)) | less(B,A) | -open(B,in1).  [resolve(833,c,242,a)].

given #880 (T,wt=11): 2533 less(A,succ(succ(succ(succ(f6(A)))))) | -open(A,in1).  [resolve(856,b,242,a)].

given #881 (A,wt=19): 665 -at(A,B,s2) | switch(pred(A),s1) != out2 | -at(pred(A),B,s1) | at(A,B,out2).  [para(106(a,1),409(a,1)),rewrite([106(12)])].

given #882 (T,wt=11): 2670 less(pred(pred(pred(pred(A)))),f6(A)) | -open(A,in1).  [resolve(884,a,242,a)].

given #883 (T,wt=11): 2807 less(pred(pred(A)),succ(succ(f6(A)))) | -open(A,in1).  [resolve(992,b,242,a)].

given #884 (T,wt=11): 3006 less(pred(pred(pred(A))),succ(f6(A))) | -open(A,in1).  [resolve(1046,a,242,a)].

given #885 (T,wt=11): 3025 less(pred(A),succ(succ(succ(f6(A))))) | -open(A,in1).  [resolve(1047,a,242,a)].

given #886 (A,wt=24): 668 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path2).  [resolve(410,c,166,b)].

given #887 (T,wt=11): 3090 less(pred(pred(pred(A))),pred(f6(A))) | -open(A,in1).  [resolve(1068,b,242,a)].

given #888 (T,wt=11): 7048 free(A,path3) | less(B,f1(succ(f1(B,C)),D)).  [factor(6969,a,c)].

given #889 (T,wt=11): 7049 free(A,path3) | less(B,f1(f1(succ(B),C),D)).  [factor(6970,a,c)].

given #890 (T,wt=11): 7050 free(A,path3) | less(pred(B),f1(f1(B,C),D)).  [factor(6971,a,c)].

given #891 (A,wt=24): 669 -at(succ(A),B,s2) | switch(f1(C,B),s1) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path0).  [resolve(410,c,162,b)].

given #892 (T,wt=11): 7114 free(A,path3) | less(B,succ(f1(f1(B,C),D))).  [resolve(7055,b,450,a)].

given #893 (T,wt=11): 7333 free(A,path1) | less(B,f1(succ(f1(B,C)),D)).  [factor(7255,a,c)].

given #894 (T,wt=11): 7334 free(A,path1) | less(B,f1(f1(succ(B),C),D)).  [factor(7256,a,c)].

given #895 (T,wt=11): 7335 free(A,path1) | less(pred(B),f1(f1(B,C),D)).  [factor(7257,a,c)].

given #896 (A,wt=18): 671 switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2) | free(succ(A),path3).  [resolve(412,a,168,b)].

given #897 (T,wt=11): 7399 free(A,path1) | less(B,succ(f1(f1(B,C),D))).  [resolve(7340,b,450,a)].

given #898 (T,wt=11): 7607 free(A,path2) | less(B,f1(succ(f1(B,C)),D)).  [factor(7528,a,c)].

given #899 (T,wt=11): 7608 free(A,path2) | less(B,f1(f1(succ(B),C),D)).  [factor(7529,a,c)].

given #900 (T,wt=11): 7609 free(A,path2) | less(pred(B),f1(f1(B,C),D)).  [factor(7530,a,c)].

given #901 (A,wt=18): 672 switch(A,s2) != out2 | -at(A,B,s2) | at(succ(A),B,out2) | free(succ(A),path1).  [resolve(412,a,164,b)].

given #902 (T,wt=11): 7673 free(A,path2) | less(B,succ(f1(f1(B,C),D))).  [resolve(7614,b,450,a)].

given #903 (T,wt=11): 7872 free(A,path0) | less(B,f1(succ(f1(B,C)),D)).  [factor(7794,a,c)].

given #904 (T,wt=11): 7873 free(A,path0) | less(B,f1(f1(succ(B),C),D)).  [factor(7795,a,c)].

given #905 (T,wt=11): 7874 free(A,path0) | less(pred(B),f1(f1(B,C),D)).  [factor(7796,a,c)].

given #906 (A,wt=19): 673 -at(A,B,s2) | switch(pred(A),s2) != out2 | -at(pred(A),B,s2) | at(A,B,out2).  [para(106(a,1),412(a,1)),rewrite([106(12)])].

given #907 (T,wt=11): 7938 free(A,path0) | less(B,succ(f1(f1(B,C),D))).  [resolve(7879,b,450,a)].

given #908 (T,wt=12): 775 -less(succ(succ(A)),pred(A)) | pred(A) = succ(succ(A)).  [resolve(755,a,100,b)].

given #909 (T,wt=12): 780 -less(succ(succ(succ(A))),A) | succ(succ(succ(A))) = A.  [resolve(761,a,100,b),flip(b)].

given #910 (T,wt=12): 785 -less(succ(A),pred(pred(A))) | pred(pred(A)) = succ(A).  [resolve(766,a,100,b)].

given #911 (A,wt=24): 676 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path3).  [resolve(416,c,168,b)].

given #912 (T,wt=12): 791 -less(A,pred(pred(pred(A)))) | pred(pred(pred(A))) = A.  [resolve(786,a,100,b)].

given #913 (T,wt=12): 861 less(succ(A),pred(B)) | pred(B) = A | less(B,A).  [resolve(455,b,460,a)].

given #914 (T,wt=12): 862 less(succ(f6(A)),A) | f6(A) = A | open(A,in1).  [resolve(455,b,241,a),flip(b)].

given #915 (T,wt=12): 863 less(succ(succ(A)),B) | succ(A) = B | less(B,A).  [resolve(455,b,104,b),flip(b)].

given #916 (A,wt=24): 677 -at(succ(A),B,s2) | switch(f1(C,B),s2) != out2 | at(succ(f1(C,B)),B,out2) | free(f1(C,B),path1).  [resolve(416,c,164,b)].

given #917 (T,wt=12): 888 less(A,B) | less(f6(succ(B)),A) | open(succ(B),in1).  [resolve(457,b,241,a)].

given #918 (T,wt=12): 922 less(A,B) | succ(B) = A | less(succ(B),pred(A)).  [resolve(458,b,460,b)].

given #919 (T,wt=12): 938 open(A,in1) | less(succ(f6(A)),B) | less(B,succ(A)).  [resolve(752,a,454,b)].

given #920 (T,wt=12): 939 open(A,in1) | less(succ(B),succ(A)) | less(f6(A),B).  [resolve(752,a,453,b)].

given #921 (A,wt=20): 679 -at(f1(A,B),B,s2) | switch(f1(A,B),s2) != out2 | at(succ(f1(A,B)),B,out2).  [factor(678,a,c)].

given #922 (T,wt=12): 947 less(A,B) | less(succ(succ(B)),C) | less(C,succ(A)).  [resolve(753,a,454,b)].

given #923 (T,wt=12): 948 less(A,B) | less(succ(C),succ(A)) | less(succ(B),C).  [resolve(753,a,453,b)].

given #924 (T,wt=12): 954 less(succ(succ(A)),succ(B)) | less(C,A) | less(B,C).  [resolve(753,b,457,b)].

Prover catching signal 2.

============================== STATISTICS ============================

Given=924. Generated=57795. Kept=11660. proofs=0.
Usable=792. Sos=10023. Demods=2. Limbo=96, Disabled=1079. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=46135. Back_subsumed=749.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=2 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=523416. Demod_rewrites=12238.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=3677561. Nonunit_bsub_feature_tests=122457.
Megabytes=17.31.
User_CPU=2.53, System_CPU=0.05, Wall_clock=2.

Megs malloced by palloc(): 20.
  type (bytes each)        gets      frees     in use      bytes
chunk ( 112)               4457       4457          0      0.0 K
string_buf (  16)          3315       3315          0      0.0 K
token (  32)               2958       2958          0      0.0 K
pterm (  32)               1793       1793          0      0.0 K
hashtab (  16)               51         51          0      0.0 K
hashnode (  16)             336        336          0      0.0 K
term (  32)              700262     586491     113771   3555.3 K
      term arg arrays:                                  1162.3 K
attribute (  24)            754          0        754     17.7 K
ilist (  16)            8862959    8815906      47053    735.2 K
plist (  16)              28200       4528      23672    369.9 K
i2list (  16)               233        233          0      0.0 K
just (  24)               71923      59326      12597    295.2 K
parajust (  24)             768        612        156      3.7 K
instancejust (  16)           0          0          0      0.0 K
ivyjust (  40)                0          0          0      0.0 K
formula (  48)             3338       2551        787     36.9 K
    formula arg arrays:                                    5.4 K
topform (  88)            58299      46161      12138   1043.1 K
clist_pos (  40)          25672      13680      11992    468.4 K
clist (  32)                  8          1          7      0.2 K
context (1616)           565409     565407          2      3.2 K
trail (  24)           17545958   17545958          0      0.0 K
ac_match_pos (100072)          0          0          0      0.0 K
ac_match_free_vars_pos (20032)
                              0          0          0      0.0 K
btm_state ( 112)              0          0          0      0.0 K
btu_state ( 112)              0          0          0      0.0 K
ac_position (388448)          0          0          0      0.0 K
fpa_trie (  40)            3647        380       3267    127.6 K
fpa_state (  56)          94024      94024          0      0.0 K
fpa_index (  24)             10          0         10      0.2 K
fpa_chunk (  40)          12757       7681       5076    198.3 K
fpa_list (  24)            1620          0       1620     38.0 K
      fpa_list chunks:                                  1287.6 K
discrim (  24)              272          0        272      6.4 K
discrim_pos (  32)        20761      20761          0      0.0 K
flat2 (  56)             841756     841756          0      0.0 K
flat (  72)                   0          0          0      0.0 K
flatterm (  56)          877888     877888          0      0.0 K
mindex (  48)                13          0         13      0.6 K
mindex_pos ( 112)        352715     352715          0      0.0 K
lindex (  24)                 5          0          5      0.1 K
clash (  72)                  0          0          0      0.0 K
di_tree (  24)           293658      38038     255620   5991.1 K
avl_node (  32)           22789       2743      20046    626.4 K

Memory report, 1 @ 20 = 20 megs (16.51 megs used).
List   1, length       9,      0.1 K
List   2, length     118,      1.8 K
List   3, length       9,      0.2 K
List   5, length       3,      0.1 K
List   6, length       3,      0.1 K
List   7, length      34,      1.9 K
List   9, length       1,      0.1 K
List  10, length       1,      0.1 K
List  11, length       1,      0.1 K
List  12, length       1,      0.1 K
List  13, length       1,      0.1 K
List  14, length      68,      7.4 K
List  15, length       2,      0.2 K
List  16, length      30,      3.8 K
List  32, length      62,     15.5 K
List 202, length       2,      3.2 K

============================== SELECTOR REPORT =======================
Sos_deleted=0, Sos_displaced=0, Sos_size=10023
  SELECTOR       PART   PRIORITY      ORDER       SIZE   SELECTED
         I 2147483647       high        age          0        248
         H          1       high     weight          0          0
         A          1        low        age      10023        135
         F          4        low     weight          0          2
         T          4        low     weight      10023        539
============================== end of selector report ================

============================== end of statistics =====================

Exiting with failure.

Process 25704 exit (SIGINT) Fri Jun  6 21:54:07 2014
